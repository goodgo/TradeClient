// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: L2.proto

#ifndef PROTOBUF_L2_2eproto__INCLUDED
#define PROTOBUF_L2_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_L2_2eproto();
void protobuf_AssignDesc_L2_2eproto();
void protobuf_ShutdownFile_L2_2eproto();

class L2;

// ===================================================================

class L2 : public ::google::protobuf::Message {
 public:
  L2();
  virtual ~L2();

  L2(const L2& from);

  inline L2& operator=(const L2& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L2& default_instance();

  void Swap(L2* other);

  // implements Message ----------------------------------------------

  L2* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const L2& from);
  void MergeFrom(const L2& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mFunc = 1;
  inline bool has_mfunc() const;
  inline void clear_mfunc();
  static const int kMFuncFieldNumber = 1;
  inline ::google::protobuf::uint32 mfunc() const;
  inline void set_mfunc(::google::protobuf::uint32 value);

  // optional uint32 sFunc = 2;
  inline bool has_sfunc() const;
  inline void clear_sfunc();
  static const int kSFuncFieldNumber = 2;
  inline ::google::protobuf::uint32 sfunc() const;
  inline void set_sfunc(::google::protobuf::uint32 value);

  // optional uint32 msgID = 3;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 3;
  inline ::google::protobuf::uint32 msgid() const;
  inline void set_msgid(::google::protobuf::uint32 value);

  // optional uint32 flags = 4;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 4;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // optional uint32 L3_body_len = 5;
  inline bool has_l3_body_len() const;
  inline void clear_l3_body_len();
  static const int kL3BodyLenFieldNumber = 5;
  inline ::google::protobuf::uint32 l3_body_len() const;
  inline void set_l3_body_len(::google::protobuf::uint32 value);

  // optional string session = 6;
  inline bool has_session() const;
  inline void clear_session();
  static const int kSessionFieldNumber = 6;
  inline const ::std::string& session() const;
  inline void set_session(const ::std::string& value);
  inline void set_session(const char* value);
  inline void set_session(const char* value, size_t size);
  inline ::std::string* mutable_session();
  inline ::std::string* release_session();
  inline void set_allocated_session(::std::string* session);

  // optional uint32 produce = 7;
  inline bool has_produce() const;
  inline void clear_produce();
  static const int kProduceFieldNumber = 7;
  inline ::google::protobuf::uint32 produce() const;
  inline void set_produce(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:L2)
 private:
  inline void set_has_mfunc();
  inline void clear_has_mfunc();
  inline void set_has_sfunc();
  inline void clear_has_sfunc();
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_l3_body_len();
  inline void clear_has_l3_body_len();
  inline void set_has_session();
  inline void clear_has_session();
  inline void set_has_produce();
  inline void clear_has_produce();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mfunc_;
  ::google::protobuf::uint32 sfunc_;
  ::google::protobuf::uint32 msgid_;
  ::google::protobuf::uint32 flags_;
  ::std::string* session_;
  ::google::protobuf::uint32 l3_body_len_;
  ::google::protobuf::uint32 produce_;
  friend void  protobuf_AddDesc_L2_2eproto();
  friend void protobuf_AssignDesc_L2_2eproto();
  friend void protobuf_ShutdownFile_L2_2eproto();

  void InitAsDefaultInstance();
  static L2* default_instance_;
};
// ===================================================================


// ===================================================================

// L2

// optional uint32 mFunc = 1;
inline bool L2::has_mfunc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L2::set_has_mfunc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L2::clear_has_mfunc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L2::clear_mfunc() {
  mfunc_ = 0u;
  clear_has_mfunc();
}
inline ::google::protobuf::uint32 L2::mfunc() const {
  // @@protoc_insertion_point(field_get:L2.mFunc)
  return mfunc_;
}
inline void L2::set_mfunc(::google::protobuf::uint32 value) {
  set_has_mfunc();
  mfunc_ = value;
  // @@protoc_insertion_point(field_set:L2.mFunc)
}

// optional uint32 sFunc = 2;
inline bool L2::has_sfunc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L2::set_has_sfunc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L2::clear_has_sfunc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L2::clear_sfunc() {
  sfunc_ = 0u;
  clear_has_sfunc();
}
inline ::google::protobuf::uint32 L2::sfunc() const {
  // @@protoc_insertion_point(field_get:L2.sFunc)
  return sfunc_;
}
inline void L2::set_sfunc(::google::protobuf::uint32 value) {
  set_has_sfunc();
  sfunc_ = value;
  // @@protoc_insertion_point(field_set:L2.sFunc)
}

// optional uint32 msgID = 3;
inline bool L2::has_msgid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void L2::set_has_msgid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void L2::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void L2::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
inline ::google::protobuf::uint32 L2::msgid() const {
  // @@protoc_insertion_point(field_get:L2.msgID)
  return msgid_;
}
inline void L2::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:L2.msgID)
}

// optional uint32 flags = 4;
inline bool L2::has_flags() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void L2::set_has_flags() {
  _has_bits_[0] |= 0x00000008u;
}
inline void L2::clear_has_flags() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void L2::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 L2::flags() const {
  // @@protoc_insertion_point(field_get:L2.flags)
  return flags_;
}
inline void L2::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:L2.flags)
}

// optional uint32 L3_body_len = 5;
inline bool L2::has_l3_body_len() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void L2::set_has_l3_body_len() {
  _has_bits_[0] |= 0x00000010u;
}
inline void L2::clear_has_l3_body_len() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void L2::clear_l3_body_len() {
  l3_body_len_ = 0u;
  clear_has_l3_body_len();
}
inline ::google::protobuf::uint32 L2::l3_body_len() const {
  // @@protoc_insertion_point(field_get:L2.L3_body_len)
  return l3_body_len_;
}
inline void L2::set_l3_body_len(::google::protobuf::uint32 value) {
  set_has_l3_body_len();
  l3_body_len_ = value;
  // @@protoc_insertion_point(field_set:L2.L3_body_len)
}

// optional string session = 6;
inline bool L2::has_session() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void L2::set_has_session() {
  _has_bits_[0] |= 0x00000020u;
}
inline void L2::clear_has_session() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void L2::clear_session() {
  if (session_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    session_->clear();
  }
  clear_has_session();
}
inline const ::std::string& L2::session() const {
  // @@protoc_insertion_point(field_get:L2.session)
  return *session_;
}
inline void L2::set_session(const ::std::string& value) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    session_ = new ::std::string;
  }
  session_->assign(value);
  // @@protoc_insertion_point(field_set:L2.session)
}
inline void L2::set_session(const char* value) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    session_ = new ::std::string;
  }
  session_->assign(value);
  // @@protoc_insertion_point(field_set_char:L2.session)
}
inline void L2::set_session(const char* value, size_t size) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    session_ = new ::std::string;
  }
  session_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:L2.session)
}
inline ::std::string* L2::mutable_session() {
  set_has_session();
  if (session_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    session_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:L2.session)
  return session_;
}
inline ::std::string* L2::release_session() {
  clear_has_session();
  if (session_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = session_;
    session_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void L2::set_allocated_session(::std::string* session) {
  if (session_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete session_;
  }
  if (session) {
    set_has_session();
    session_ = session;
  } else {
    clear_has_session();
    session_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:L2.session)
}

// optional uint32 produce = 7;
inline bool L2::has_produce() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void L2::set_has_produce() {
  _has_bits_[0] |= 0x00000040u;
}
inline void L2::clear_has_produce() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void L2::clear_produce() {
  produce_ = 0u;
  clear_has_produce();
}
inline ::google::protobuf::uint32 L2::produce() const {
  // @@protoc_insertion_point(field_get:L2.produce)
  return produce_;
}
inline void L2::set_produce(::google::protobuf::uint32 value) {
  set_has_produce();
  produce_ = value;
  // @@protoc_insertion_point(field_set:L2.produce)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_L2_2eproto__INCLUDED
