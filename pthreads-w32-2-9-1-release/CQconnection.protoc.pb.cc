// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CQconnection.protoc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* INF_OneEntrust_Req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_OneEntrust_Req_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_OneCancel_Req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_OneCancel_Req_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_QueryOneEntrust_Req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_QueryOneEntrust_Req_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_QueryCJMX_Req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_QueryCJMX_Req_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_QueryPosition_Req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_QueryPosition_Req_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_QueryETFbaseInfo_Req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_QueryETFbaseInfo_Req_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_QueryETFlistInfo_Req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_QueryETFlistInfo_Req_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_QueryETFdynamicInfo_Req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_QueryETFdynamicInfo_Req_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_QueryFundCondition_Req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_QueryFundCondition_Req_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_ETFPurRedem_Req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_ETFPurRedem_Req_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_QueryBatchEntrust_Req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_QueryBatchEntrust_Req_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_BatchEntrust_Req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_BatchEntrust_Req_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_BatchCancel_Req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_BatchCancel_Req_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_QueryVaildRedemNum_Req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_QueryVaildRedemNum_Req_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_OneEntrust_Ack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_OneEntrust_Ack_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_BatchEntrust_Ack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_BatchEntrust_Ack_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_QueryOneEntrust_Ack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_QueryOneEntrust_Ack_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_QueryBatchEntrust_Ack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_QueryBatchEntrust_Ack_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_OneCancel_Ack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_OneCancel_Ack_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_BatchCancel_Ack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_BatchCancel_Ack_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_QueryETFbaseInfo_Ack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_QueryETFbaseInfo_Ack_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_QueryETFlistInfo_Ack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_QueryETFlistInfo_Ack_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_QueryETFdynamicInfo_Ack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_QueryETFdynamicInfo_Ack_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_QueryFundCondition_Ack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_QueryFundCondition_Ack_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_QueryPosition_Ack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_QueryPosition_Ack_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_QueryCJMX_Ack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_QueryCJMX_Ack_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_ETFPurRedem_Ack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_ETFPurRedem_Ack_reflection_ = NULL;
const ::google::protobuf::Descriptor* StockLoginResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StockLoginResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ACCOUNT_INFO_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ACCOUNT_INFO_reflection_ = NULL;
const ::google::protobuf::Descriptor* STOCK_INFO_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  STOCK_INFO_reflection_ = NULL;
const ::google::protobuf::Descriptor* ETF_INFO_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ETF_INFO_reflection_ = NULL;
const ::google::protobuf::Descriptor* LOGIN_REQ_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LOGIN_REQ_reflection_ = NULL;
const ::google::protobuf::Descriptor* LOGIN_ACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LOGIN_ACK_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_Account_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_Account_reflection_ = NULL;
const ::google::protobuf::Descriptor* INF_ETF_Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  INF_ETF_Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* ETF_Message_req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ETF_Message_req_reflection_ = NULL;
const ::google::protobuf::Descriptor* ETF_Message_ack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ETF_Message_ack_reflection_ = NULL;
const ::google::protobuf::Descriptor* StockServer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StockServer_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_CQconnection_2eprotoc() {
  protobuf_AddDesc_CQconnection_2eprotoc();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CQconnection.protoc");
  GOOGLE_CHECK(file != NULL);
  INF_OneEntrust_Req_descriptor_ = file->message_type(0);
  static const int INF_OneEntrust_Req_offsets_[24] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, rt0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, localhost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, reqid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, funcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, departmentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, marketid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, rt6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, etfserialno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, securitycode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, bsflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, entrustnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, entrustprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, entrusttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, bandcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, bandaccount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, financingsecuritymode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, entrustbatchno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, entrustriskassessflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, entrusttobusiness_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, agreementno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, oppositetradeunit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, bargainno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, bsettlevipno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, islowpriceentrust_),
  };
  INF_OneEntrust_Req_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_OneEntrust_Req_descriptor_,
      INF_OneEntrust_Req::default_instance_,
      INF_OneEntrust_Req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Req, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_OneEntrust_Req));
  INF_OneCancel_Req_descriptor_ = file->message_type(1);
  static const int INF_OneCancel_Req_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneCancel_Req, rt0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneCancel_Req, localhost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneCancel_Req, reqid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneCancel_Req, funcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneCancel_Req, departmentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneCancel_Req, marketid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneCancel_Req, rt6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneCancel_Req, customid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneCancel_Req, entrustserial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneCancel_Req, entrusttype_),
  };
  INF_OneCancel_Req_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_OneCancel_Req_descriptor_,
      INF_OneCancel_Req::default_instance_,
      INF_OneCancel_Req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneCancel_Req, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneCancel_Req, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_OneCancel_Req));
  INF_QueryOneEntrust_Req_descriptor_ = file->message_type(2);
  static const int INF_QueryOneEntrust_Req_offsets_[23] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Req, rt0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Req, localhost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Req, reqid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Req, funcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Req, departmentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Req, rt5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Req, rt6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Req, customid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Req, rt8_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Req, rt9_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Req, entrustserial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Req, rt11_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Req, rt12_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Req, rt13_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Req, rt14_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Req, entrusttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Req, rt16_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Req, rt17_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Req, rt18_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Req, rt19_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Req, rt20_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Req, rt21_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Req, iscancel_),
  };
  INF_QueryOneEntrust_Req_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_QueryOneEntrust_Req_descriptor_,
      INF_QueryOneEntrust_Req::default_instance_,
      INF_QueryOneEntrust_Req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Req, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Req, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_QueryOneEntrust_Req));
  INF_QueryCJMX_Req_descriptor_ = file->message_type(3);
  static const int INF_QueryCJMX_Req_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Req, rt0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Req, localhost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Req, reqid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Req, funcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Req, departmentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Req, rt5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Req, rt6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Req, customid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Req, rt8_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Req, rt9_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Req, direction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Req, cjmxmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Req, cjmxmode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Req, querystartpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Req, entrusttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Req, querytype_),
  };
  INF_QueryCJMX_Req_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_QueryCJMX_Req_descriptor_,
      INF_QueryCJMX_Req::default_instance_,
      INF_QueryCJMX_Req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Req, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Req, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_QueryCJMX_Req));
  INF_QueryPosition_Req_descriptor_ = file->message_type(4);
  static const int INF_QueryPosition_Req_offsets_[20] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Req, rt0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Req, localhost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Req, reqid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Req, funcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Req, departmentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Req, rt5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Req, rt6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Req, customid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Req, rt8_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Req, securitycode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Req, rt10_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Req, rt11_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Req, rt12_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Req, rt13_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Req, rt14_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Req, operatefunc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Req, entrusttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Req, rt17_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Req, rt18_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Req, rt19_),
  };
  INF_QueryPosition_Req_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_QueryPosition_Req_descriptor_,
      INF_QueryPosition_Req::default_instance_,
      INF_QueryPosition_Req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Req, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Req, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_QueryPosition_Req));
  INF_QueryETFbaseInfo_Req_descriptor_ = file->message_type(5);
  static const int INF_QueryETFbaseInfo_Req_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Req, rt0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Req, localhost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Req, reqid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Req, funcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Req, departmentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Req, marketid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Req, rt6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Req, customid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Req, securitycode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Req, entrusttype_),
  };
  INF_QueryETFbaseInfo_Req_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_QueryETFbaseInfo_Req_descriptor_,
      INF_QueryETFbaseInfo_Req::default_instance_,
      INF_QueryETFbaseInfo_Req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Req, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Req, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_QueryETFbaseInfo_Req));
  INF_QueryETFlistInfo_Req_descriptor_ = file->message_type(6);
  static const int INF_QueryETFlistInfo_Req_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFlistInfo_Req, rt0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFlistInfo_Req, localhost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFlistInfo_Req, reqid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFlistInfo_Req, funcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFlistInfo_Req, departmentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFlistInfo_Req, marketid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFlistInfo_Req, rt6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFlistInfo_Req, customid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFlistInfo_Req, securitycode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFlistInfo_Req, sorttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFlistInfo_Req, entrusttype_),
  };
  INF_QueryETFlistInfo_Req_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_QueryETFlistInfo_Req_descriptor_,
      INF_QueryETFlistInfo_Req::default_instance_,
      INF_QueryETFlistInfo_Req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFlistInfo_Req, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFlistInfo_Req, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_QueryETFlistInfo_Req));
  INF_QueryETFdynamicInfo_Req_descriptor_ = file->message_type(7);
  static const int INF_QueryETFdynamicInfo_Req_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Req, rt0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Req, localhost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Req, reqid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Req, funcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Req, departmentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Req, marketid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Req, rt6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Req, customid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Req, entrustbatchno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Req, securitycode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Req, etfminpurredemuint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Req, entrusttype_),
  };
  INF_QueryETFdynamicInfo_Req_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_QueryETFdynamicInfo_Req_descriptor_,
      INF_QueryETFdynamicInfo_Req::default_instance_,
      INF_QueryETFdynamicInfo_Req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Req, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Req, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_QueryETFdynamicInfo_Req));
  INF_QueryFundCondition_Req_descriptor_ = file->message_type(8);
  static const int INF_QueryFundCondition_Req_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Req, rt0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Req, localhost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Req, reqid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Req, funcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Req, departmentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Req, moneytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Req, rt6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Req, customid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Req, entrusttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Req, propertydebt_),
  };
  INF_QueryFundCondition_Req_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_QueryFundCondition_Req_descriptor_,
      INF_QueryFundCondition_Req::default_instance_,
      INF_QueryFundCondition_Req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Req, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Req, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_QueryFundCondition_Req));
  INF_ETFPurRedem_Req_descriptor_ = file->message_type(9);
  static const int INF_ETFPurRedem_Req_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_ETFPurRedem_Req, rt0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_ETFPurRedem_Req, localhost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_ETFPurRedem_Req, reqid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_ETFPurRedem_Req, funcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_ETFPurRedem_Req, departmentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_ETFPurRedem_Req, moneyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_ETFPurRedem_Req, rt6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_ETFPurRedem_Req, customid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_ETFPurRedem_Req, entrustbatchno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_ETFPurRedem_Req, operatefunc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_ETFPurRedem_Req, securitycode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_ETFPurRedem_Req, entrustnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_ETFPurRedem_Req, entrusttype_),
  };
  INF_ETFPurRedem_Req_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_ETFPurRedem_Req_descriptor_,
      INF_ETFPurRedem_Req::default_instance_,
      INF_ETFPurRedem_Req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_ETFPurRedem_Req, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_ETFPurRedem_Req, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_ETFPurRedem_Req));
  INF_QueryBatchEntrust_Req_descriptor_ = file->message_type(10);
  static const int INF_QueryBatchEntrust_Req_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Req, rt0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Req, localhost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Req, reqid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Req, funcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Req, departmentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Req, rt5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Req, rt6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Req, customid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Req, rt8_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Req, rt9_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Req, entrustbatchno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Req, rt11_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Req, combinemode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Req, querydir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Req, rt14_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Req, rt15_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Req, entrusttype_),
  };
  INF_QueryBatchEntrust_Req_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_QueryBatchEntrust_Req_descriptor_,
      INF_QueryBatchEntrust_Req::default_instance_,
      INF_QueryBatchEntrust_Req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Req, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Req, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_QueryBatchEntrust_Req));
  INF_BatchEntrust_Req_descriptor_ = file->message_type(11);
  static const int INF_BatchEntrust_Req_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Req, rt0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Req, localhost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Req, reqid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Req, funcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Req, departmentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Req, rt5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Req, rt6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Req, customid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Req, etfserialno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Req, controlarg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Req, entrusttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Req, entrustbatchno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Req, entrusthistorynum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Req, entrustdata_),
  };
  INF_BatchEntrust_Req_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_BatchEntrust_Req_descriptor_,
      INF_BatchEntrust_Req::default_instance_,
      INF_BatchEntrust_Req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Req, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Req, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_BatchEntrust_Req));
  INF_BatchCancel_Req_descriptor_ = file->message_type(12);
  static const int INF_BatchCancel_Req_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchCancel_Req, rt0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchCancel_Req, localhost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchCancel_Req, reqid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchCancel_Req, funcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchCancel_Req, departmentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchCancel_Req, rt5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchCancel_Req, rt6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchCancel_Req, customid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchCancel_Req, entrustbatchno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchCancel_Req, entrusttype_),
  };
  INF_BatchCancel_Req_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_BatchCancel_Req_descriptor_,
      INF_BatchCancel_Req::default_instance_,
      INF_BatchCancel_Req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchCancel_Req, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchCancel_Req, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_BatchCancel_Req));
  INF_QueryVaildRedemNum_Req_descriptor_ = file->message_type(13);
  static const int INF_QueryVaildRedemNum_Req_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryVaildRedemNum_Req, rt0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryVaildRedemNum_Req, localhost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryVaildRedemNum_Req, reqid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryVaildRedemNum_Req, funcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryVaildRedemNum_Req, departmentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryVaildRedemNum_Req, rt5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryVaildRedemNum_Req, rt6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryVaildRedemNum_Req, customid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryVaildRedemNum_Req, etfserialnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryVaildRedemNum_Req, securitycode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryVaildRedemNum_Req, purredemflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryVaildRedemNum_Req, entrusttype_),
  };
  INF_QueryVaildRedemNum_Req_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_QueryVaildRedemNum_Req_descriptor_,
      INF_QueryVaildRedemNum_Req::default_instance_,
      INF_QueryVaildRedemNum_Req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryVaildRedemNum_Req, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryVaildRedemNum_Req, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_QueryVaildRedemNum_Req));
  INF_OneEntrust_Ack_descriptor_ = file->message_type(14);
  static const int INF_OneEntrust_Ack_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Ack, entrustserial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Ack, valid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Ack, respflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Ack, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Ack, entrustseq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Ack, entrustbatchno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Ack, successnum_),
  };
  INF_OneEntrust_Ack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_OneEntrust_Ack_descriptor_,
      INF_OneEntrust_Ack::default_instance_,
      INF_OneEntrust_Ack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Ack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneEntrust_Ack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_OneEntrust_Ack));
  INF_BatchEntrust_Ack_descriptor_ = file->message_type(15);
  static const int INF_BatchEntrust_Ack_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Ack, entrustserial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Ack, valid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Ack, respflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Ack, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Ack, recordnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Ack, tradingresults_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Ack, entrustbatchno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Ack, bargainno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Ack, entrustseq_),
  };
  INF_BatchEntrust_Ack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_BatchEntrust_Ack_descriptor_,
      INF_BatchEntrust_Ack::default_instance_,
      INF_BatchEntrust_Ack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Ack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchEntrust_Ack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_BatchEntrust_Ack));
  INF_QueryOneEntrust_Ack_descriptor_ = file->message_type(16);
  static const int INF_QueryOneEntrust_Ack_offsets_[29] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, valid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, securitycode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, securityname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, entrustnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, entrustprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, entrustserial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, cjnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, entrusttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, marketid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, bsflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, entruststatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, cjpricesum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, respflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, recordnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, stockholderaccount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, bstypename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, bstypeflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, bargainno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, cjprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, cjstatusname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, errormsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, errorcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, cjstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, entruststatusflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, cancelordernum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, entrustattr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, entrusttype_),
  };
  INF_QueryOneEntrust_Ack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_QueryOneEntrust_Ack_descriptor_,
      INF_QueryOneEntrust_Ack::default_instance_,
      INF_QueryOneEntrust_Ack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryOneEntrust_Ack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_QueryOneEntrust_Ack));
  INF_QueryBatchEntrust_Ack_descriptor_ = file->message_type(17);
  static const int INF_QueryBatchEntrust_Ack_offsets_[30] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, entrustbatchno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, entrustseq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, marketid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, securitycode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, bsflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, entrustnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, entrustprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, entruststatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, cjnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, cjprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, entrusttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, valid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, respflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, recordnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, currentdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, entrustno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, declareno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, clientno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, stockholderaccount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, securityname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, entrusttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, bsflagname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, cjstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, cjstatusname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, cjdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, declaretime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, entrustpennum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, pagestartpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, havecancelnum_),
  };
  INF_QueryBatchEntrust_Ack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_QueryBatchEntrust_Ack_descriptor_,
      INF_QueryBatchEntrust_Ack::default_instance_,
      INF_QueryBatchEntrust_Ack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryBatchEntrust_Ack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_QueryBatchEntrust_Ack));
  INF_OneCancel_Ack_descriptor_ = file->message_type(18);
  static const int INF_OneCancel_Ack_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneCancel_Ack, valid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneCancel_Ack, respflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneCancel_Ack, issuccess_),
  };
  INF_OneCancel_Ack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_OneCancel_Ack_descriptor_,
      INF_OneCancel_Ack::default_instance_,
      INF_OneCancel_Ack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneCancel_Ack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_OneCancel_Ack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_OneCancel_Ack));
  INF_BatchCancel_Ack_descriptor_ = file->message_type(19);
  static const int INF_BatchCancel_Ack_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchCancel_Ack, valid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchCancel_Ack, respflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchCancel_Ack, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchCancel_Ack, cancelpennum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchCancel_Ack, cancelnum_),
  };
  INF_BatchCancel_Ack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_BatchCancel_Ack_descriptor_,
      INF_BatchCancel_Ack::default_instance_,
      INF_BatchCancel_Ack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchCancel_Ack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_BatchCancel_Ack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_BatchCancel_Ack));
  INF_QueryETFbaseInfo_Ack_descriptor_ = file->message_type(20);
  static const int INF_QueryETFbaseInfo_Ack_offsets_[22] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Ack, etfname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Ack, onemarketcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Ack, twomarketcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Ack, etfminpurredemunit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Ack, cashdiffer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Ack, castreplaceratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Ack, purredemstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Ack, estimdiffer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Ack, unitnetvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Ack, allstocksnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Ack, respflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Ack, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Ack, recordnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Ack, subscriptcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Ack, etfnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Ack, cashbalances_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Ack, ispurredeem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Ack, trailerdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Ack, precashdiffer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Ack, fundnet_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Ack, stocknum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Ack, etfattr_),
  };
  INF_QueryETFbaseInfo_Ack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_QueryETFbaseInfo_Ack_descriptor_,
      INF_QueryETFbaseInfo_Ack::default_instance_,
      INF_QueryETFbaseInfo_Ack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Ack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFbaseInfo_Ack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_QueryETFbaseInfo_Ack));
  INF_QueryETFlistInfo_Ack_descriptor_ = file->message_type(21);
  static const int INF_QueryETFlistInfo_Ack_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFlistInfo_Ack, marketid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFlistInfo_Ack, securitycode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFlistInfo_Ack, securityname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFlistInfo_Ack, securitynum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFlistInfo_Ack, castreplaceflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFlistInfo_Ack, castreplacerate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFlistInfo_Ack, fundreplacesum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFlistInfo_Ack, respflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFlistInfo_Ack, displayno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFlistInfo_Ack, stockofmarket_),
  };
  INF_QueryETFlistInfo_Ack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_QueryETFlistInfo_Ack_descriptor_,
      INF_QueryETFlistInfo_Ack::default_instance_,
      INF_QueryETFlistInfo_Ack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFlistInfo_Ack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFlistInfo_Ack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_QueryETFlistInfo_Ack));
  INF_QueryETFdynamicInfo_Ack_descriptor_ = file->message_type(22);
  static const int INF_QueryETFdynamicInfo_Ack_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Ack, marketid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Ack, etfcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Ack, validpurredemnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Ack, respflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Ack, etfname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Ack, baskeasknum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Ack, needbuynum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Ack, canreplacefund_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Ack, mustreplacefund_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Ack, positionofundeal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Ack, maxpurredemnum_),
  };
  INF_QueryETFdynamicInfo_Ack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_QueryETFdynamicInfo_Ack_descriptor_,
      INF_QueryETFdynamicInfo_Ack::default_instance_,
      INF_QueryETFdynamicInfo_Ack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Ack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryETFdynamicInfo_Ack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_QueryETFdynamicInfo_Ack));
  INF_QueryFundCondition_Ack_descriptor_ = file->message_type(23);
  static const int INF_QueryFundCondition_Ack_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Ack, valid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Ack, fundremain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Ack, validfund_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Ack, marketvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Ack, respflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Ack, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Ack, fundsum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Ack, todaybuycj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Ack, todaysellcj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Ack, sumfloatprofitloss_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Ack, fundoftodaybuyundeal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Ack, fundofbuyunsettled_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Ack, fundofsellunsettled_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Ack, moneyname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Ack, fundofexceptlock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Ack, moneyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Ack, positionrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Ack, netassets_),
  };
  INF_QueryFundCondition_Ack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_QueryFundCondition_Ack_descriptor_,
      INF_QueryFundCondition_Ack::default_instance_,
      INF_QueryFundCondition_Ack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Ack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryFundCondition_Ack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_QueryFundCondition_Ack));
  INF_QueryPosition_Ack_descriptor_ = file->message_type(24);
  static const int INF_QueryPosition_Ack_offsets_[21] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Ack, marketid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Ack, securitycode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Ack, securityname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Ack, securitynum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Ack, marketvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Ack, costprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Ack, yesterdayposition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Ack, validsecuritynum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Ack, respflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Ack, stockholderaccount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Ack, floatprofitloss_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Ack, lastestprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Ack, stockmarketvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Ack, commentdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Ack, sentencecommentmsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Ack, nationaldebtnetprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Ack, interest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Ack, averagebuyprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Ack, liquidcostprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Ack, beginstock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Ack, overpositionbalances_),
  };
  INF_QueryPosition_Ack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_QueryPosition_Ack_descriptor_,
      INF_QueryPosition_Ack::default_instance_,
      INF_QueryPosition_Ack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Ack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryPosition_Ack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_QueryPosition_Ack));
  INF_QueryCJMX_Ack_descriptor_ = file->message_type(25);
  static const int INF_QueryCJMX_Ack_offsets_[22] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Ack, marketid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Ack, bsflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Ack, cjtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Ack, securitycode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Ack, securityname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Ack, cjnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Ack, cjprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Ack, cjfund_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Ack, entrustserial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Ack, cjdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Ack, pagestartpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Ack, cjserial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Ack, valid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Ack, respflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Ack, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Ack, serialno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Ack, stockholderaccount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Ack, bsname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Ack, cjtypename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Ack, cjpennum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Ack, entrusttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Ack, declareno_),
  };
  INF_QueryCJMX_Ack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_QueryCJMX_Ack_descriptor_,
      INF_QueryCJMX_Ack::default_instance_,
      INF_QueryCJMX_Ack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Ack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_QueryCJMX_Ack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_QueryCJMX_Ack));
  INF_ETFPurRedem_Ack_descriptor_ = file->message_type(26);
  static const int INF_ETFPurRedem_Ack_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_ETFPurRedem_Ack, entrustserial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_ETFPurRedem_Ack, valid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_ETFPurRedem_Ack, respflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_ETFPurRedem_Ack, issuccess_),
  };
  INF_ETFPurRedem_Ack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_ETFPurRedem_Ack_descriptor_,
      INF_ETFPurRedem_Ack::default_instance_,
      INF_ETFPurRedem_Ack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_ETFPurRedem_Ack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_ETFPurRedem_Ack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_ETFPurRedem_Ack));
  StockLoginResp_descriptor_ = file->message_type(27);
  static const int StockLoginResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockLoginResp, funcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockLoginResp, fund_account_),
  };
  StockLoginResp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StockLoginResp_descriptor_,
      StockLoginResp::default_instance_,
      StockLoginResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockLoginResp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockLoginResp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StockLoginResp));
  ACCOUNT_INFO_descriptor_ = file->message_type(28);
  static const int ACCOUNT_INFO_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ACCOUNT_INFO, acc_ava_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ACCOUNT_INFO, acc_prelock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ACCOUNT_INFO, acc_lock_),
  };
  ACCOUNT_INFO_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ACCOUNT_INFO_descriptor_,
      ACCOUNT_INFO::default_instance_,
      ACCOUNT_INFO_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ACCOUNT_INFO, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ACCOUNT_INFO, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ACCOUNT_INFO));
  STOCK_INFO_descriptor_ = file->message_type(29);
  static const int STOCK_INFO_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(STOCK_INFO, stk_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(STOCK_INFO, stk_ava_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(STOCK_INFO, stk_prelock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(STOCK_INFO, stk_lock_),
  };
  STOCK_INFO_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      STOCK_INFO_descriptor_,
      STOCK_INFO::default_instance_,
      STOCK_INFO_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(STOCK_INFO, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(STOCK_INFO, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(STOCK_INFO));
  ETF_INFO_descriptor_ = file->message_type(30);
  static const int ETF_INFO_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ETF_INFO, etf_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ETF_INFO, etf_ava_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ETF_INFO, etf_prelock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ETF_INFO, etf_lock_),
  };
  ETF_INFO_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ETF_INFO_descriptor_,
      ETF_INFO::default_instance_,
      ETF_INFO_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ETF_INFO, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ETF_INFO, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ETF_INFO));
  LOGIN_REQ_descriptor_ = file->message_type(31);
  static const int LOGIN_REQ_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOGIN_REQ, funcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOGIN_REQ, password_),
  };
  LOGIN_REQ_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LOGIN_REQ_descriptor_,
      LOGIN_REQ::default_instance_,
      LOGIN_REQ_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOGIN_REQ, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOGIN_REQ, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LOGIN_REQ));
  LOGIN_ACK_descriptor_ = file->message_type(32);
  static const int LOGIN_ACK_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOGIN_ACK, funcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOGIN_ACK, fund_account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOGIN_ACK, sesstion_id_),
  };
  LOGIN_ACK_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LOGIN_ACK_descriptor_,
      LOGIN_ACK::default_instance_,
      LOGIN_ACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOGIN_ACK, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOGIN_ACK, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LOGIN_ACK));
  INF_Account_descriptor_ = file->message_type(33);
  static const int INF_Account_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Account, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Account, query_update_flg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Account, acc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Account, stk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Account, etf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Account, login_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Account, login_req_),
  };
  INF_Account_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_Account_descriptor_,
      INF_Account::default_instance_,
      INF_Account_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Account, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_Account, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_Account));
  INF_ETF_Message_descriptor_ = file->message_type(34);
  static const int INF_ETF_Message_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_ETF_Message, etf_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_ETF_Message, etf_ack_),
  };
  INF_ETF_Message_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      INF_ETF_Message_descriptor_,
      INF_ETF_Message::default_instance_,
      INF_ETF_Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_ETF_Message, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(INF_ETF_Message, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(INF_ETF_Message));
  ETF_Message_req_descriptor_ = file->message_type(35);
  static const int ETF_Message_req_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ETF_Message_req, etf_wt_no_),
  };
  ETF_Message_req_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ETF_Message_req_descriptor_,
      ETF_Message_req::default_instance_,
      ETF_Message_req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ETF_Message_req, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ETF_Message_req, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ETF_Message_req));
  ETF_Message_ack_descriptor_ = file->message_type(36);
  static const int ETF_Message_ack_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ETF_Message_ack, valid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ETF_Message_ack, etfcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ETF_Message_ack, etfname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ETF_Message_ack, etf_wt_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ETF_Message_ack, etf_wt_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ETF_Message_ack, etf_wt_serial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ETF_Message_ack, etf_cj_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ETF_Message_ack, etf_wt_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ETF_Message_ack, marketid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ETF_Message_ack, bsflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ETF_Message_ack, etf_wt_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ETF_Message_ack, cjpricesum_),
  };
  ETF_Message_ack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ETF_Message_ack_descriptor_,
      ETF_Message_ack::default_instance_,
      ETF_Message_ack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ETF_Message_ack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ETF_Message_ack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ETF_Message_ack));
  StockServer_descriptor_ = file->message_type(37);
  static const int StockServer_offsets_[36] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, funcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, isackflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, destmodule_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, srcmodule_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, requestid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, packsum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, packseq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, oneentrust_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, onecancel_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, queryoneentrust_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, querycjmx_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, queryposition_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, queryetfbaseinfo_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, queryetflistinfo_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, queryetfdynamicinfo_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, queryfundcondition_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, etfpurredem_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, querybatchentrust_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, batchentrust_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, batchcancel_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, queryvaildredemnum_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, oneentrust_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, onecancel_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, queryoneentrust_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, querycjmx_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, queryposition_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, queryetfbaseinfo_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, queryetflistinfo_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, queryetfdynamicinfo_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, queryfundcondition_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, etfpurredem_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, querybatchentrust_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, batchentrust_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, batchcancel_ack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, etf_message_),
  };
  StockServer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StockServer_descriptor_,
      StockServer::default_instance_,
      StockServer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockServer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StockServer));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CQconnection_2eprotoc);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_OneEntrust_Req_descriptor_, &INF_OneEntrust_Req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_OneCancel_Req_descriptor_, &INF_OneCancel_Req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_QueryOneEntrust_Req_descriptor_, &INF_QueryOneEntrust_Req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_QueryCJMX_Req_descriptor_, &INF_QueryCJMX_Req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_QueryPosition_Req_descriptor_, &INF_QueryPosition_Req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_QueryETFbaseInfo_Req_descriptor_, &INF_QueryETFbaseInfo_Req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_QueryETFlistInfo_Req_descriptor_, &INF_QueryETFlistInfo_Req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_QueryETFdynamicInfo_Req_descriptor_, &INF_QueryETFdynamicInfo_Req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_QueryFundCondition_Req_descriptor_, &INF_QueryFundCondition_Req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_ETFPurRedem_Req_descriptor_, &INF_ETFPurRedem_Req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_QueryBatchEntrust_Req_descriptor_, &INF_QueryBatchEntrust_Req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_BatchEntrust_Req_descriptor_, &INF_BatchEntrust_Req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_BatchCancel_Req_descriptor_, &INF_BatchCancel_Req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_QueryVaildRedemNum_Req_descriptor_, &INF_QueryVaildRedemNum_Req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_OneEntrust_Ack_descriptor_, &INF_OneEntrust_Ack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_BatchEntrust_Ack_descriptor_, &INF_BatchEntrust_Ack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_QueryOneEntrust_Ack_descriptor_, &INF_QueryOneEntrust_Ack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_QueryBatchEntrust_Ack_descriptor_, &INF_QueryBatchEntrust_Ack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_OneCancel_Ack_descriptor_, &INF_OneCancel_Ack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_BatchCancel_Ack_descriptor_, &INF_BatchCancel_Ack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_QueryETFbaseInfo_Ack_descriptor_, &INF_QueryETFbaseInfo_Ack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_QueryETFlistInfo_Ack_descriptor_, &INF_QueryETFlistInfo_Ack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_QueryETFdynamicInfo_Ack_descriptor_, &INF_QueryETFdynamicInfo_Ack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_QueryFundCondition_Ack_descriptor_, &INF_QueryFundCondition_Ack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_QueryPosition_Ack_descriptor_, &INF_QueryPosition_Ack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_QueryCJMX_Ack_descriptor_, &INF_QueryCJMX_Ack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_ETFPurRedem_Ack_descriptor_, &INF_ETFPurRedem_Ack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StockLoginResp_descriptor_, &StockLoginResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ACCOUNT_INFO_descriptor_, &ACCOUNT_INFO::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    STOCK_INFO_descriptor_, &STOCK_INFO::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ETF_INFO_descriptor_, &ETF_INFO::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LOGIN_REQ_descriptor_, &LOGIN_REQ::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LOGIN_ACK_descriptor_, &LOGIN_ACK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_Account_descriptor_, &INF_Account::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    INF_ETF_Message_descriptor_, &INF_ETF_Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ETF_Message_req_descriptor_, &ETF_Message_req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ETF_Message_ack_descriptor_, &ETF_Message_ack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StockServer_descriptor_, &StockServer::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CQconnection_2eprotoc() {
  delete INF_OneEntrust_Req::default_instance_;
  delete INF_OneEntrust_Req_reflection_;
  delete INF_OneCancel_Req::default_instance_;
  delete INF_OneCancel_Req_reflection_;
  delete INF_QueryOneEntrust_Req::default_instance_;
  delete INF_QueryOneEntrust_Req_reflection_;
  delete INF_QueryCJMX_Req::default_instance_;
  delete INF_QueryCJMX_Req_reflection_;
  delete INF_QueryPosition_Req::default_instance_;
  delete INF_QueryPosition_Req_reflection_;
  delete INF_QueryETFbaseInfo_Req::default_instance_;
  delete INF_QueryETFbaseInfo_Req_reflection_;
  delete INF_QueryETFlistInfo_Req::default_instance_;
  delete INF_QueryETFlistInfo_Req_reflection_;
  delete INF_QueryETFdynamicInfo_Req::default_instance_;
  delete INF_QueryETFdynamicInfo_Req_reflection_;
  delete INF_QueryFundCondition_Req::default_instance_;
  delete INF_QueryFundCondition_Req_reflection_;
  delete INF_ETFPurRedem_Req::default_instance_;
  delete INF_ETFPurRedem_Req_reflection_;
  delete INF_QueryBatchEntrust_Req::default_instance_;
  delete INF_QueryBatchEntrust_Req_reflection_;
  delete INF_BatchEntrust_Req::default_instance_;
  delete INF_BatchEntrust_Req_reflection_;
  delete INF_BatchCancel_Req::default_instance_;
  delete INF_BatchCancel_Req_reflection_;
  delete INF_QueryVaildRedemNum_Req::default_instance_;
  delete INF_QueryVaildRedemNum_Req_reflection_;
  delete INF_OneEntrust_Ack::default_instance_;
  delete INF_OneEntrust_Ack_reflection_;
  delete INF_BatchEntrust_Ack::default_instance_;
  delete INF_BatchEntrust_Ack_reflection_;
  delete INF_QueryOneEntrust_Ack::default_instance_;
  delete INF_QueryOneEntrust_Ack_reflection_;
  delete INF_QueryBatchEntrust_Ack::default_instance_;
  delete INF_QueryBatchEntrust_Ack_reflection_;
  delete INF_OneCancel_Ack::default_instance_;
  delete INF_OneCancel_Ack_reflection_;
  delete INF_BatchCancel_Ack::default_instance_;
  delete INF_BatchCancel_Ack_reflection_;
  delete INF_QueryETFbaseInfo_Ack::default_instance_;
  delete INF_QueryETFbaseInfo_Ack_reflection_;
  delete INF_QueryETFlistInfo_Ack::default_instance_;
  delete INF_QueryETFlistInfo_Ack_reflection_;
  delete INF_QueryETFdynamicInfo_Ack::default_instance_;
  delete INF_QueryETFdynamicInfo_Ack_reflection_;
  delete INF_QueryFundCondition_Ack::default_instance_;
  delete INF_QueryFundCondition_Ack_reflection_;
  delete INF_QueryPosition_Ack::default_instance_;
  delete INF_QueryPosition_Ack_reflection_;
  delete INF_QueryCJMX_Ack::default_instance_;
  delete INF_QueryCJMX_Ack_reflection_;
  delete INF_ETFPurRedem_Ack::default_instance_;
  delete INF_ETFPurRedem_Ack_reflection_;
  delete StockLoginResp::default_instance_;
  delete StockLoginResp_reflection_;
  delete ACCOUNT_INFO::default_instance_;
  delete ACCOUNT_INFO_reflection_;
  delete STOCK_INFO::default_instance_;
  delete STOCK_INFO_reflection_;
  delete ETF_INFO::default_instance_;
  delete ETF_INFO_reflection_;
  delete LOGIN_REQ::default_instance_;
  delete LOGIN_REQ_reflection_;
  delete LOGIN_ACK::default_instance_;
  delete LOGIN_ACK_reflection_;
  delete INF_Account::default_instance_;
  delete INF_Account_reflection_;
  delete INF_ETF_Message::default_instance_;
  delete INF_ETF_Message_reflection_;
  delete ETF_Message_req::default_instance_;
  delete ETF_Message_req_reflection_;
  delete ETF_Message_ack::default_instance_;
  delete ETF_Message_ack_reflection_;
  delete StockServer::default_instance_;
  delete StockServer_reflection_;
}

void protobuf_AddDesc_CQconnection_2eprotoc() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023CQconnection.protoc\"\216\004\n\022INF_OneEntrust"
    "_Req\022\013\n\003RT0\030\001 \001(\t\022\021\n\tLocalhost\030\002 \001(\t\022\r\n\005"
    "ReqID\030\003 \001(\t\022\016\n\006FuncID\030\004 \001(\t\022\024\n\014Departmen"
    "tID\030\005 \001(\t\022\020\n\010MarketID\030\006 \001(\t\022\013\n\003RT6\030\007 \001(\t"
    "\022\023\n\013ETFserialNO\030\010 \001(\t\022\024\n\014SecurityCode\030\t "
    "\001(\t\022\016\n\006BSflag\030\n \001(\t\022\022\n\nEntrustNum\030\013 \001(\t\022"
    "\024\n\014EntrustPrice\030\014 \001(\t\022\023\n\013EntrustType\030\r \001"
    "(\t\022\020\n\010BandCode\030\016 \001(\t\022\023\n\013BandAccount\030\017 \001("
    "\t\022\035\n\025FinancingSecurityMode\030\020 \001(\t\022\026\n\016Entr"
    "ustBatchNO\030\021 \001(\t\022\035\n\025EntrustRiskAssessFla"
    "g\030\022 \001(\t\022\031\n\021EntrustToBusiness\030\023 \001(\t\022\023\n\013Ag"
    "reementNO\030\024 \001(\t\022\031\n\021OppositeTradeUnit\030\025 \001"
    "(\t\022\021\n\tBargainNO\030\026 \001(\t\022\024\n\014BsettleVipNO\030\027 "
    "\001(\t\022\031\n\021IsLowPriceEntrust\030\030 \001(\t\"\305\001\n\021INF_O"
    "neCancel_Req\022\013\n\003RT0\030\001 \001(\t\022\021\n\tLocalhost\030\002"
    " \001(\t\022\r\n\005ReqID\030\003 \001(\t\022\016\n\006FuncID\030\004 \001(\t\022\024\n\014D"
    "epartmentID\030\005 \001(\t\022\020\n\010MarketID\030\006 \001(\t\022\013\n\003R"
    "T6\030\007 \001(\t\022\020\n\010CustomID\030\010 \001(\t\022\025\n\rEntrustSer"
    "ial\030\t \001(\t\022\023\n\013EntrustType\030\n \001(\t\"\376\002\n\027INF_Q"
    "ueryOneEntrust_Req\022\013\n\003RT0\030\001 \001(\t\022\021\n\tLocal"
    "host\030\002 \001(\t\022\r\n\005ReqID\030\003 \001(\t\022\016\n\006FuncID\030\004 \001("
    "\t\022\024\n\014DepartmentID\030\005 \001(\t\022\013\n\003RT5\030\006 \001(\t\022\013\n\003"
    "RT6\030\007 \001(\t\022\020\n\010CustomID\030\010 \001(\t\022\013\n\003RT8\030\t \001(\t"
    "\022\013\n\003RT9\030\n \001(\t\022\025\n\rEntrustSerial\030\013 \001(\t\022\014\n\004"
    "RT11\030\014 \001(\t\022\014\n\004RT12\030\r \001(\t\022\014\n\004RT13\030\016 \001(\t\022\014"
    "\n\004RT14\030\017 \001(\t\022\023\n\013EntrustType\030\020 \001(\t\022\014\n\004RT1"
    "6\030\021 \001(\t\022\014\n\004RT17\030\022 \001(\t\022\014\n\004RT18\030\023 \001(\t\022\014\n\004R"
    "T19\030\024 \001(\t\022\014\n\004RT20\030\025 \001(\t\022\014\n\004RT21\030\026 \001(\t\022\020\n"
    "\010IsCancel\030\027 \001(\t\"\243\002\n\021INF_QueryCJMX_Req\022\013\n"
    "\003RT0\030\001 \001(\t\022\021\n\tLocalhost\030\002 \001(\t\022\r\n\005ReqID\030\003"
    " \001(\t\022\016\n\006FuncID\030\004 \001(\t\022\024\n\014DepartmentID\030\005 \001"
    "(\t\022\013\n\003RT5\030\006 \001(\t\022\013\n\003RT6\030\007 \001(\t\022\020\n\010CustomID"
    "\030\010 \001(\t\022\013\n\003RT8\030\t \001(\t\022\013\n\003RT9\030\n \001(\t\022\021\n\tDIRE"
    "CTION\030\013 \001(\t\022\017\n\007CJMXmax\030\014 \001(\t\022\020\n\010CJMXmode"
    "\030\r \001(\t\022\025\n\rQueryStartPos\030\016 \001(\t\022\023\n\013Entrust"
    "Type\030\017 \001(\t\022\021\n\tQueryType\030\020 \001(\t\"\325\002\n\025INF_Qu"
    "eryPosition_Req\022\013\n\003RT0\030\001 \001(\t\022\021\n\tLocalhos"
    "t\030\002 \001(\t\022\r\n\005ReqID\030\003 \001(\t\022\016\n\006FuncID\030\004 \001(\t\022\024"
    "\n\014DepartmentID\030\005 \001(\t\022\013\n\003RT5\030\006 \001(\t\022\013\n\003RT6"
    "\030\007 \001(\t\022\020\n\010CustomID\030\010 \001(\t\022\013\n\003RT8\030\t \001(\t\022\024\n"
    "\014SecurityCode\030\n \001(\t\022\014\n\004RT10\030\013 \001(\t\022\014\n\004RT1"
    "1\030\014 \001(\t\022\014\n\004RT12\030\r \001(\t\022\014\n\004RT13\030\016 \001(\t\022\014\n\004R"
    "T14\030\017 \001(\t\022\023\n\013OperateFunc\030\020 \001(\t\022\023\n\013Entrus"
    "tType\030\021 \001(\t\022\014\n\004RT17\030\022 \001(\t\022\014\n\004RT18\030\023 \001(\t\022"
    "\014\n\004RT19\030\024 \001(\t\"\313\001\n\030INF_QueryETFbaseInfo_R"
    "eq\022\013\n\003RT0\030\001 \001(\t\022\021\n\tLocalhost\030\002 \001(\t\022\r\n\005Re"
    "qID\030\003 \001(\t\022\016\n\006FuncID\030\004 \001(\t\022\024\n\014DepartmentI"
    "D\030\005 \001(\t\022\020\n\010MarketID\030\006 \001(\t\022\013\n\003RT6\030\007 \001(\t\022\020"
    "\n\010CustomID\030\010 \001(\t\022\024\n\014SecurityCode\030\t \001(\t\022\023"
    "\n\013EntrustType\030\n \001(\t\"\335\001\n\030INF_QueryETFlist"
    "Info_Req\022\013\n\003RT0\030\001 \001(\t\022\021\n\tLocalhost\030\002 \001(\t"
    "\022\r\n\005ReqID\030\003 \001(\t\022\016\n\006FuncID\030\004 \001(\t\022\024\n\014Depar"
    "tmentID\030\005 \001(\t\022\020\n\010MarketID\030\006 \001(\t\022\013\n\003RT6\030\007"
    " \001(\t\022\020\n\010CustomID\030\010 \001(\t\022\024\n\014SecurityCode\030\t"
    " \001(\t\022\020\n\010SortType\030\n \001(\t\022\023\n\013EntrustType\030\013 "
    "\001(\t\"\202\002\n\033INF_QueryETFdynamicInfo_Req\022\013\n\003R"
    "T0\030\001 \001(\t\022\021\n\tLocalhost\030\002 \001(\t\022\r\n\005ReqID\030\003 \001"
    "(\t\022\016\n\006FuncID\030\004 \001(\t\022\024\n\014DepartmentID\030\005 \001(\t"
    "\022\020\n\010MarketID\030\006 \001(\t\022\013\n\003RT6\030\007 \001(\t\022\020\n\010Custo"
    "mID\030\010 \001(\t\022\026\n\016EntrustBatchNO\030\t \001(\t\022\024\n\014Sec"
    "urityCode\030\n \001(\t\022\032\n\022ETFminPurRedemUint\030\013 "
    "\001(\t\022\023\n\013EntrustType\030\014 \001(\t\"\316\001\n\032INF_QueryFu"
    "ndCondition_Req\022\013\n\003RT0\030\001 \001(\t\022\021\n\tLocalhos"
    "t\030\002 \001(\t\022\r\n\005ReqID\030\003 \001(\t\022\016\n\006FuncID\030\004 \001(\t\022\024"
    "\n\014DepartmentID\030\005 \001(\t\022\021\n\tMoneyType\030\006 \001(\t\022"
    "\013\n\003RT6\030\007 \001(\t\022\020\n\010CustomID\030\010 \001(\t\022\023\n\013Entrus"
    "tType\030\t \001(\t\022\024\n\014PropertyDebt\030\n \001(\t\"\206\002\n\023IN"
    "F_ETFPurRedem_Req\022\013\n\003RT0\030\001 \001(\t\022\021\n\tLocalh"
    "ost\030\002 \001(\t\022\r\n\005ReqID\030\003 \001(\t\022\016\n\006FuncID\030\004 \001(\t"
    "\022\024\n\014DepartmentID\030\005 \001(\t\022\017\n\007MoneyID\030\006 \001(\t\022"
    "\013\n\003RT6\030\007 \001(\t\022\020\n\010CustomID\030\010 \001(\t\022\026\n\016Entrus"
    "tBatchNO\030\t \001(\t\022\023\n\013OperateFunc\030\n \001(\t\022\024\n\014S"
    "ecurityCode\030\013 \001(\t\022\022\n\nEntrustNum\030\014 \001(\t\022\023\n"
    "\013EntrustType\030\r \001(\t\"\264\002\n\031INF_QueryBatchEnt"
    "rust_Req\022\013\n\003RT0\030\001 \001(\t\022\021\n\tLocalhost\030\002 \001(\t"
    "\022\r\n\005ReqID\030\003 \001(\t\022\016\n\006FuncID\030\004 \001(\t\022\024\n\014Depar"
    "tmentID\030\005 \001(\t\022\013\n\003RT5\030\006 \001(\t\022\013\n\003RT6\030\007 \001(\t\022"
    "\020\n\010CustomID\030\010 \001(\t\022\013\n\003RT8\030\t \001(\t\022\013\n\003RT9\030\n "
    "\001(\t\022\026\n\016EntrustBatchNO\030\013 \001(\t\022\014\n\004RT11\030\014 \001("
    "\t\022\023\n\013CombineMode\030\r \001(\t\022\020\n\010QueryDir\030\016 \001(\t"
    "\022\014\n\004RT14\030\017 \001(\t\022\014\n\004RT15\030\020 \001(\t\022\023\n\013EntrustT"
    "ype\030\021 \001(\t\"\235\002\n\024INF_BatchEntrust_Req\022\013\n\003RT"
    "0\030\001 \001(\t\022\021\n\tLocalhost\030\002 \001(\t\022\r\n\005ReqID\030\003 \001("
    "\t\022\016\n\006FuncID\030\004 \001(\t\022\024\n\014DepartmentID\030\005 \001(\t\022"
    "\013\n\003RT5\030\006 \001(\t\022\013\n\003RT6\030\007 \001(\t\022\020\n\010CustomID\030\010 "
    "\001(\t\022\023\n\013ETFserialNO\030\t \001(\t\022\022\n\nControlArg\030\n"
    " \001(\t\022\023\n\013EntrustType\030\013 \001(\t\022\026\n\016EntrustBatc"
    "hNO\030\014 \001(\t\022\031\n\021EntrustHistoryNum\030\r \001(\t\022\023\n\013"
    "EntrustData\030\016 \001(\t\"\303\001\n\023INF_BatchCancel_Re"
    "q\022\013\n\003RT0\030\001 \001(\t\022\021\n\tLocalhost\030\002 \001(\t\022\r\n\005Req"
    "ID\030\003 \001(\t\022\016\n\006FuncID\030\004 \001(\t\022\024\n\014DepartmentID"
    "\030\005 \001(\t\022\013\n\003RT5\030\006 \001(\t\022\013\n\003RT6\030\007 \001(\t\022\020\n\010Cust"
    "omID\030\010 \001(\t\022\026\n\016EntrustBatchNO\030\t \001(\t\022\023\n\013En"
    "trustType\030\n \001(\t\"\367\001\n\032INF_QueryVaildRedemN"
    "um_Req\022\013\n\003RT0\030\001 \001(\t\022\021\n\tLocalhost\030\002 \001(\t\022\r"
    "\n\005ReqID\030\003 \001(\t\022\016\n\006FuncID\030\004 \001(\t\022\024\n\014Departm"
    "entID\030\005 \001(\t\022\013\n\003RT5\030\006 \001(\t\022\013\n\003RT6\030\007 \001(\t\022\020\n"
    "\010CustomID\030\010 \001(\t\022\027\n\017ETFserialNumber\030\t \001(\t"
    "\022\024\n\014SecurityCode\030\n \001(\t\022\024\n\014PurRedemFlag\030\013"
    " \001(\t\022\023\n\013EntrustType\030\014 \001(\t\"\237\001\n\022INF_OneEnt"
    "rust_Ack\022\025\n\rEntrustSerial\030\001 \001(\t\022\r\n\005Valid"
    "\030\002 \001(\t\022\020\n\010RespFlag\030\003 \001(\t\022\021\n\tIsSuccess\030\004 "
    "\001(\t\022\022\n\nEntrustSeq\030\005 \001(\t\022\026\n\016EntrustBatchN"
    "O\030\006 \001(\t\022\022\n\nSuccessNum\030\007 \001(\t\"\313\001\n\024INF_Batc"
    "hEntrust_Ack\022\025\n\rEntrustSerial\030\001 \001(\t\022\r\n\005V"
    "alid\030\002 \001(\t\022\020\n\010RespFlag\030\003 \001(\t\022\021\n\tIsSucces"
    "s\030\004 \001(\t\022\021\n\tRecordNum\030\005 \001(\t\022\026\n\016TradingRes"
    "ults\030\006 \001(\t\022\026\n\016EntrustBatchNO\030\007 \001(\t\022\021\n\tBa"
    "rgainNO\030\010 \001(\t\022\022\n\nEntrustSeq\030\t \001(\t\"\336\004\n\027IN"
    "F_QueryOneEntrust_Ack\022\r\n\005Valid\030\001 \001(\t\022\024\n\014"
    "SecurityCode\030\002 \001(\t\022\024\n\014SecurityName\030\003 \001(\t"
    "\022\022\n\nEntrustNum\030\004 \001(\t\022\024\n\014EntrustPrice\030\005 \001"
    "(\t\022\025\n\rEntrustSerial\030\006 \001(\t\022\r\n\005CjNum\030\007 \001(\t"
    "\022\023\n\013EntrustTime\030\010 \001(\t\022\020\n\010MarketID\030\t \001(\t\022"
    "\016\n\006BSflag\030\n \001(\t\022\025\n\rEntrustStatus\030\013 \001(\t\022\022"
    "\n\nCjPriceSum\030\014 \001(\t\022\020\n\010RespFlag\030\r \001(\t\022\021\n\t"
    "IsSuccess\030\016 \001(\t\022\021\n\tRecordNum\030\017 \001(\t\022\032\n\022St"
    "ockholderAccount\030\020 \001(\t\022\022\n\nBSTypeName\030\021 \001"
    "(\t\022\022\n\nBSTypeFlag\030\022 \001(\t\022\021\n\tBargainNO\030\023 \001("
    "\t\022\017\n\007CjPrice\030\024 \001(\t\022\024\n\014CjStatusName\030\025 \001(\t"
    "\022\014\n\004Date\030\026 \001(\t\022\020\n\010ErrorMsg\030\027 \001(\t\022\021\n\tErro"
    "rCode\030\030 \001(\t\022\020\n\010CjStatus\030\031 \001(\t\022\031\n\021Entrust"
    "StatusFlag\030\032 \001(\t\022\026\n\016CancelOrderNum\030\033 \001(\t"
    "\022\023\n\013EntrustAttr\030\034 \001(\t\022\023\n\013EntrustType\030\035 \001"
    "(\t\"\365\004\n\031INF_QueryBatchEntrust_Ack\022\026\n\016Entr"
    "ustBatchNO\030\001 \001(\t\022\022\n\nEntrustSeq\030\002 \001(\t\022\020\n\010"
    "MarketID\030\003 \001(\t\022\024\n\014SecurityCode\030\004 \001(\t\022\016\n\006"
    "BSflag\030\005 \001(\t\022\022\n\nEntrustNum\030\006 \001(\t\022\024\n\014Entr"
    "ustPrice\030\007 \001(\t\022\025\n\rEntrustStatus\030\010 \001(\t\022\r\n"
    "\005CjNum\030\t \001(\t\022\017\n\007CjPrice\030\n \001(\t\022\023\n\013Entrust"
    "Time\030\013 \001(\t\022\r\n\005Valid\030\014 \001(\t\022\020\n\010RespFlag\030\r "
    "\001(\t\022\021\n\tIsSuccess\030\016 \001(\t\022\021\n\tRecordNum\030\017 \001("
    "\t\022\023\n\013CurrentDate\030\020 \001(\t\022\021\n\tEntrustNo\030\021 \001("
    "\t\022\021\n\tDeclareNo\030\022 \001(\t\022\020\n\010ClientNo\030\023 \001(\t\022\032"
    "\n\022StockholderAccount\030\024 \001(\t\022\024\n\014SecurityNa"
    "me\030\025 \001(\t\022\023\n\013EntrustType\030\026 \001(\t\022\022\n\nBSflagN"
    "ame\030\027 \001(\t\022\020\n\010CjStatus\030\030 \001(\t\022\024\n\014CjStatusN"
    "ame\030\031 \001(\t\022\016\n\006CjDate\030\032 \001(\t\022\023\n\013DeclareTime"
    "\030\033 \001(\t\022\025\n\rEntrustPenNum\030\034 \001(\t\022\024\n\014PageSta"
    "rtPos\030\035 \001(\t\022\025\n\rHaveCancelNum\030\036 \001(\t\"G\n\021IN"
    "F_OneCancel_Ack\022\r\n\005Valid\030\001 \001(\t\022\020\n\010RespFl"
    "ag\030\002 \001(\t\022\021\n\tIsSuccess\030\003 \001(\t\"r\n\023INF_Batch"
    "Cancel_Ack\022\r\n\005Valid\030\001 \001(\t\022\020\n\010RespFlag\030\002 "
    "\001(\t\022\021\n\tIsSuccess\030\003 \001(\t\022\024\n\014CancelPenNum\030\004"
    " \001(\t\022\021\n\tCancelNum\030\005 \001(\t\"\346\003\n\030INF_QueryETF"
    "baseInfo_Ack\022\017\n\007ETFName\030\001 \001(\t\022\025\n\rOneMark"
    "etCode\030\002 \001(\t\022\025\n\rTwoMarketCode\030\003 \001(\t\022\032\n\022E"
    "TFminPurRedemUnit\030\004 \001(\t\022\022\n\nCashDiffer\030\005 "
    "\001(\t\022\030\n\020CastReplaceRatio\030\006 \001(\t\022\026\n\016PurRede"
    "mStatus\030\007 \001(\t\022\023\n\013EstimDiffer\030\010 \001(\t\022\024\n\014Un"
    "itNetValue\030\t \001(\t\022\024\n\014AllStocksNum\030\n \001(\t\022\020"
    "\n\010RespFlag\030\013 \001(\t\022\021\n\tIsSuccess\030\014 \001(\t\022\021\n\tR"
    "ecordNum\030\r \001(\t\022\025\n\rsubscriptCode\030\016 \001(\t\022\016\n"
    "\006ETFNum\030\017 \001(\t\022\024\n\014CashBalances\030\020 \001(\t\022\023\n\013I"
    "sPurRedeem\030\021 \001(\t\022\023\n\013TrailerDate\030\022 \001(\t\022\025\n"
    "\rPreCashDiffer\030\023 \001(\t\022\017\n\007FundNet\030\024 \001(\t\022\020\n"
    "\010StockNum\030\025 \001(\t\022\017\n\007ETFAttr\030\026 \001(\t\"\363\001\n\030INF"
    "_QueryETFlistInfo_Ack\022\020\n\010MarketID\030\001 \001(\t\022"
    "\024\n\014SecurityCode\030\002 \001(\t\022\024\n\014SecurityName\030\003 "
    "\001(\t\022\023\n\013SecurityNum\030\004 \001(\t\022\027\n\017CastReplaceF"
    "lag\030\005 \001(\t\022\027\n\017CastReplaceRate\030\006 \001(\t\022\026\n\016Fu"
    "ndReplaceSum\030\007 \001(\t\022\020\n\010RespFlag\030\010 \001(\t\022\021\n\t"
    "DisplayNo\030\t \001(\t\022\025\n\rStockOfMarket\030\n \001(\t\"\211"
    "\002\n\033INF_QueryETFdynamicInfo_Ack\022\020\n\010Market"
    "ID\030\001 \001(\t\022\017\n\007ETFCode\030\002 \001(\t\022\030\n\020ValidPurRed"
    "emNum\030\003 \001(\t\022\020\n\010RespFlag\030\004 \001(\t\022\017\n\007ETFName"
    "\030\005 \001(\t\022\023\n\013BaskeAskNum\030\006 \001(\t\022\022\n\nNeedBuyNu"
    "m\030\007 \001(\t\022\026\n\016CanReplaceFund\030\010 \001(\t\022\027\n\017MustR"
    "eplaceFund\030\t \001(\t\022\030\n\020PositionOfUndeal\030\n \001"
    "(\t\022\026\n\016MaxPurRedemNum\030\013 \001(\t\"\240\003\n\032INF_Query"
    "FundCondition_Ack\022\r\n\005Valid\030\001 \001(\t\022\022\n\nFund"
    "Remain\030\002 \001(\t\022\021\n\tValidfund\030\003 \001(\t\022\023\n\013Marke"
    "tValue\030\004 \001(\t\022\020\n\010RespFlag\030\005 \001(\t\022\021\n\tIsSucc"
    "ess\030\006 \001(\t\022\017\n\007FundSum\030\007 \001(\t\022\022\n\nTodayBuyCj"
    "\030\010 \001(\t\022\023\n\013TodaySellCj\030\t \001(\t\022\032\n\022SumFloatP"
    "rofitLoss\030\n \001(\t\022\034\n\024FundOfTodayBuyUndeal\030"
    "\013 \001(\t\022\032\n\022FundOfBuyUnsettled\030\014 \001(\t\022\033\n\023Fun"
    "dOfSellUnsettled\030\r \001(\t\022\021\n\tMoneyName\030\016 \001("
    "\t\022\030\n\020FundOfExceptLock\030\017 \001(\t\022\017\n\007MoneyID\030\020"
    " \001(\t\022\024\n\014PositionRate\030\021 \001(\t\022\021\n\tNetAssets\030"
    "\022 \001(\t\"\203\004\n\025INF_QueryPosition_Ack\022\020\n\010Marke"
    "tID\030\001 \001(\t\022\024\n\014SecurityCode\030\002 \001(\t\022\024\n\014Secur"
    "ityName\030\003 \001(\t\022\023\n\013SecurityNum\030\004 \001(\t\022\023\n\013Ma"
    "rketValue\030\005 \001(\t\022\021\n\tCostPrice\030\006 \001(\t\022\031\n\021Ye"
    "sterdayPosition\030\007 \001(\t\022\030\n\020ValidSecurityNu"
    "m\030\010 \001(\t\022\020\n\010RespFlag\030\t \001(\t\022\032\n\022Stockholder"
    "Account\030\n \001(\t\022\027\n\017FloatProfitLoss\030\013 \001(\t\022\024"
    "\n\014LastestPrice\030\014 \001(\t\022\030\n\020StockMarketValue"
    "\030\r \001(\t\022\023\n\013CommentDate\030\016 \001(\t\022\032\n\022SentenceC"
    "ommentMsg\030\017 \001(\t\022\034\n\024NationalDebtNetPrice\030"
    "\020 \001(\t\022\020\n\010Interest\030\021 \001(\t\022\027\n\017AverageBuyPri"
    "ce\030\022 \001(\t\022\027\n\017LiquidCostPrice\030\023 \001(\t\022\022\n\nBeg"
    "inStock\030\024 \001(\t\022\034\n\024OverPositionBalances\030\025 "
    "\001(\t\"\253\003\n\021INF_QueryCJMX_Ack\022\020\n\010MarketID\030\001 "
    "\001(\t\022\016\n\006BSflag\030\002 \001(\t\022\016\n\006CjType\030\003 \001(\t\022\024\n\014S"
    "ecurityCode\030\004 \001(\t\022\024\n\014SecurityName\030\005 \001(\t\022"
    "\r\n\005CjNum\030\006 \001(\t\022\017\n\007CjPrice\030\007 \001(\t\022\016\n\006CjFun"
    "d\030\010 \001(\t\022\025\n\rEntrustSerial\030\t \001(\t\022\016\n\006CjDate"
    "\030\n \001(\t\022\024\n\014PageStartPos\030\013 \001(\t\022\020\n\010CjSerial"
    "\030\014 \001(\t\022\r\n\005Valid\030\r \001(\t\022\020\n\010RespFlag\030\016 \001(\t\022"
    "\014\n\004Date\030\017 \001(\t\022\020\n\010SerialNo\030\020 \001(\t\022\032\n\022Stock"
    "holderAccount\030\021 \001(\t\022\016\n\006BSName\030\022 \001(\t\022\022\n\nC"
    "jTypeName\030\023 \001(\t\022\020\n\010CjPenNum\030\024 \001(\t\022\023\n\013Ent"
    "rustType\030\025 \001(\t\022\021\n\tDeclareNo\030\026 \001(\t\"`\n\023INF"
    "_ETFPurRedem_Ack\022\025\n\rEntrustSerial\030\001 \001(\t\022"
    "\r\n\005Valid\030\002 \001(\t\022\020\n\010RespFlag\030\003 \001(\t\022\021\n\tIsSu"
    "ccess\030\004 \001(\t\"@\n\016StockLoginResp\022\030\n\006funcid\030"
    "\001 \001(\005:\01011100001\022\024\n\014fund_account\030\002 \002(\t\"F\n"
    "\014ACCOUNT_INFO\022\017\n\007acc_ava\030\001 \001(\001\022\023\n\013acc_pr"
    "elock\030\002 \001(\001\022\020\n\010acc_lock\030\003 \001(\001\"V\n\nSTOCK_I"
    "NFO\022\020\n\010stk_code\030\001 \001(\t\022\017\n\007stk_ava\030\002 \001(\003\022\023"
    "\n\013stk_prelock\030\003 \001(\003\022\020\n\010stk_lock\030\004 \001(\003\"T\n"
    "\010ETF_INFO\022\020\n\010etf_code\030\001 \001(\t\022\017\n\007etf_ava\030\002"
    " \001(\003\022\023\n\013etf_prelock\030\003 \001(\003\022\020\n\010etf_lock\030\004 "
    "\001(\003\"7\n\tLOGIN_REQ\022\030\n\006funcid\030\001 \001(\005:\010130000"
    "01\022\020\n\010password\030\002 \001(\t\"P\n\tLOGIN_ACK\022\030\n\006fun"
    "cid\030\001 \001(\005:\01013100001\022\024\n\014fund_account\030\002 \002("
    "\t\022\023\n\013sesstion_id\030\003 \001(\t\"\307\001\n\013INF_Account\022\022"
    "\n\naccount_id\030\001 \001(\t\022\030\n\020query_update_flg\030\002"
    " \001(\005\022\032\n\003acc\030\003 \001(\0132\r.ACCOUNT_INFO\022\030\n\003stk\030"
    "\004 \001(\0132\013.STOCK_INFO\022\026\n\003etf\030\005 \001(\0132\t.ETF_IN"
    "FO\022\035\n\tlogin_ack\030\006 \001(\0132\n.LOGIN_ACK\022\035\n\tlog"
    "in_req\030\007 \001(\0132\n.LOGIN_REQ\"W\n\017INF_ETF_Mess"
    "age\022!\n\007Etf_req\030\001 \001(\0132\020.ETF_Message_req\022!"
    "\n\007Etf_ack\030\002 \001(\0132\020.ETF_Message_ack\"$\n\017ETF"
    "_Message_req\022\021\n\tETF_WT_NO\030\001 \001(\t\"\371\001\n\017ETF_"
    "Message_ack\022\r\n\005Valid\030\001 \001(\t\022\017\n\007ETFCode\030\002 "
    "\001(\t\022\017\n\007ETFName\030\003 \001(\t\022\022\n\nETF_WT_Num\030\004 \001(\t"
    "\022\024\n\014ETF_WT_Price\030\005 \001(\t\022\025\n\rETF_WT_Serial\030"
    "\006 \001(\t\022\022\n\nETF_CJ_Num\030\007 \001(\t\022\023\n\013ETF_WT_Time"
    "\030\010 \001(\t\022\020\n\010MarketID\030\t \001(\t\022\016\n\006BSflag\030\n \001(\t"
    "\022\025\n\rETF_WT_Status\030\013 \001(\t\022\022\n\nCjPriceSum\030\014 "
    "\001(\t\"\331\014\n\013StockServer\022\016\n\006FuncID\030\001 \002(\t\022\021\n\tI"
    "sAckFlag\030\002 \002(\t\022\022\n\nDestModule\030\003 \002(\t\022\021\n\tSr"
    "cModule\030\004 \002(\t\022\021\n\tRequestID\030\005 \002(\t\022\017\n\007Pack"
    "Sum\030$ \002(\t\022\017\n\007PackSeq\030% \002(\t\022+\n\016OneEntrust"
    "_Req\030\006 \001(\0132\023.INF_OneEntrust_Req\022)\n\rOneCa"
    "ncel_Req\030\007 \001(\0132\022.INF_OneCancel_Req\0225\n\023Qu"
    "eryOneEntrust_Req\030\010 \001(\0132\030.INF_QueryOneEn"
    "trust_Req\022)\n\rQueryCJMX_Req\030\t \001(\0132\022.INF_Q"
    "ueryCJMX_Req\0221\n\021QueryPosition_Req\030\n \001(\0132"
    "\026.INF_QueryPosition_Req\0227\n\024QueryETFbaseI"
    "nfo_Req\030\013 \001(\0132\031.INF_QueryETFbaseInfo_Req"
    "\0227\n\024QueryETFlistInfo_Req\030\014 \001(\0132\031.INF_Que"
    "ryETFlistInfo_Req\022=\n\027QueryETFdynamicInfo"
    "_Req\030\r \001(\0132\034.INF_QueryETFdynamicInfo_Req"
    "\022;\n\026QueryFundCondition_Req\030\016 \001(\0132\033.INF_Q"
    "ueryFundCondition_Req\022-\n\017ETFPurRedem_Req"
    "\030\017 \001(\0132\024.INF_ETFPurRedem_Req\0229\n\025QueryBat"
    "chEntrust_Req\030\020 \001(\0132\032.INF_QueryBatchEntr"
    "ust_Req\022/\n\020BatchEntrust_Req\030\021 \001(\0132\025.INF_"
    "BatchEntrust_Req\022-\n\017BatchCancel_Req\030\022 \001("
    "\0132\024.INF_BatchCancel_Req\022;\n\026QueryVaildRed"
    "emNum_Req\030\023 \001(\0132\033.INF_QueryVaildRedemNum"
    "_Req\022+\n\016OneEntrust_Ack\030\024 \001(\0132\023.INF_OneEn"
    "trust_Ack\022)\n\rOneCancel_Ack\030\025 \001(\0132\022.INF_O"
    "neCancel_Ack\0225\n\023QueryOneEntrust_Ack\030\026 \001("
    "\0132\030.INF_QueryOneEntrust_Ack\022)\n\rQueryCJMX"
    "_Ack\030\027 \001(\0132\022.INF_QueryCJMX_Ack\0221\n\021QueryP"
    "osition_Ack\030\030 \001(\0132\026.INF_QueryPosition_Ac"
    "k\0227\n\024QueryETFbaseInfo_Ack\030\031 \001(\0132\031.INF_Qu"
    "eryETFbaseInfo_Ack\0227\n\024QueryETFlistInfo_A"
    "ck\030\032 \001(\0132\031.INF_QueryETFlistInfo_Ack\022=\n\027Q"
    "ueryETFdynamicInfo_Ack\030\033 \001(\0132\034.INF_Query"
    "ETFdynamicInfo_Ack\022;\n\026QueryFundCondition"
    "_Ack\030\034 \001(\0132\033.INF_QueryFundCondition_Ack\022"
    "-\n\017ETFPurRedem_Ack\030\035 \001(\0132\024.INF_ETFPurRed"
    "em_Ack\0229\n\025QueryBatchEntrust_Ack\030\036 \001(\0132\032."
    "INF_QueryBatchEntrust_Ack\022/\n\020BatchEntrus"
    "t_Ack\030\037 \001(\0132\025.INF_BatchEntrust_Ack\022-\n\017Ba"
    "tchCancel_Ack\030  \001(\0132\024.INF_BatchCancel_Ac"
    "k\022\035\n\007Account\030\" \001(\0132\014.INF_Account\022%\n\013ETF_"
    "Message\030# \001(\0132\020.INF_ETF_Message", 10911);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CQconnection.protoc", &protobuf_RegisterTypes);
  INF_OneEntrust_Req::default_instance_ = new INF_OneEntrust_Req();
  INF_OneCancel_Req::default_instance_ = new INF_OneCancel_Req();
  INF_QueryOneEntrust_Req::default_instance_ = new INF_QueryOneEntrust_Req();
  INF_QueryCJMX_Req::default_instance_ = new INF_QueryCJMX_Req();
  INF_QueryPosition_Req::default_instance_ = new INF_QueryPosition_Req();
  INF_QueryETFbaseInfo_Req::default_instance_ = new INF_QueryETFbaseInfo_Req();
  INF_QueryETFlistInfo_Req::default_instance_ = new INF_QueryETFlistInfo_Req();
  INF_QueryETFdynamicInfo_Req::default_instance_ = new INF_QueryETFdynamicInfo_Req();
  INF_QueryFundCondition_Req::default_instance_ = new INF_QueryFundCondition_Req();
  INF_ETFPurRedem_Req::default_instance_ = new INF_ETFPurRedem_Req();
  INF_QueryBatchEntrust_Req::default_instance_ = new INF_QueryBatchEntrust_Req();
  INF_BatchEntrust_Req::default_instance_ = new INF_BatchEntrust_Req();
  INF_BatchCancel_Req::default_instance_ = new INF_BatchCancel_Req();
  INF_QueryVaildRedemNum_Req::default_instance_ = new INF_QueryVaildRedemNum_Req();
  INF_OneEntrust_Ack::default_instance_ = new INF_OneEntrust_Ack();
  INF_BatchEntrust_Ack::default_instance_ = new INF_BatchEntrust_Ack();
  INF_QueryOneEntrust_Ack::default_instance_ = new INF_QueryOneEntrust_Ack();
  INF_QueryBatchEntrust_Ack::default_instance_ = new INF_QueryBatchEntrust_Ack();
  INF_OneCancel_Ack::default_instance_ = new INF_OneCancel_Ack();
  INF_BatchCancel_Ack::default_instance_ = new INF_BatchCancel_Ack();
  INF_QueryETFbaseInfo_Ack::default_instance_ = new INF_QueryETFbaseInfo_Ack();
  INF_QueryETFlistInfo_Ack::default_instance_ = new INF_QueryETFlistInfo_Ack();
  INF_QueryETFdynamicInfo_Ack::default_instance_ = new INF_QueryETFdynamicInfo_Ack();
  INF_QueryFundCondition_Ack::default_instance_ = new INF_QueryFundCondition_Ack();
  INF_QueryPosition_Ack::default_instance_ = new INF_QueryPosition_Ack();
  INF_QueryCJMX_Ack::default_instance_ = new INF_QueryCJMX_Ack();
  INF_ETFPurRedem_Ack::default_instance_ = new INF_ETFPurRedem_Ack();
  StockLoginResp::default_instance_ = new StockLoginResp();
  ACCOUNT_INFO::default_instance_ = new ACCOUNT_INFO();
  STOCK_INFO::default_instance_ = new STOCK_INFO();
  ETF_INFO::default_instance_ = new ETF_INFO();
  LOGIN_REQ::default_instance_ = new LOGIN_REQ();
  LOGIN_ACK::default_instance_ = new LOGIN_ACK();
  INF_Account::default_instance_ = new INF_Account();
  INF_ETF_Message::default_instance_ = new INF_ETF_Message();
  ETF_Message_req::default_instance_ = new ETF_Message_req();
  ETF_Message_ack::default_instance_ = new ETF_Message_ack();
  StockServer::default_instance_ = new StockServer();
  INF_OneEntrust_Req::default_instance_->InitAsDefaultInstance();
  INF_OneCancel_Req::default_instance_->InitAsDefaultInstance();
  INF_QueryOneEntrust_Req::default_instance_->InitAsDefaultInstance();
  INF_QueryCJMX_Req::default_instance_->InitAsDefaultInstance();
  INF_QueryPosition_Req::default_instance_->InitAsDefaultInstance();
  INF_QueryETFbaseInfo_Req::default_instance_->InitAsDefaultInstance();
  INF_QueryETFlistInfo_Req::default_instance_->InitAsDefaultInstance();
  INF_QueryETFdynamicInfo_Req::default_instance_->InitAsDefaultInstance();
  INF_QueryFundCondition_Req::default_instance_->InitAsDefaultInstance();
  INF_ETFPurRedem_Req::default_instance_->InitAsDefaultInstance();
  INF_QueryBatchEntrust_Req::default_instance_->InitAsDefaultInstance();
  INF_BatchEntrust_Req::default_instance_->InitAsDefaultInstance();
  INF_BatchCancel_Req::default_instance_->InitAsDefaultInstance();
  INF_QueryVaildRedemNum_Req::default_instance_->InitAsDefaultInstance();
  INF_OneEntrust_Ack::default_instance_->InitAsDefaultInstance();
  INF_BatchEntrust_Ack::default_instance_->InitAsDefaultInstance();
  INF_QueryOneEntrust_Ack::default_instance_->InitAsDefaultInstance();
  INF_QueryBatchEntrust_Ack::default_instance_->InitAsDefaultInstance();
  INF_OneCancel_Ack::default_instance_->InitAsDefaultInstance();
  INF_BatchCancel_Ack::default_instance_->InitAsDefaultInstance();
  INF_QueryETFbaseInfo_Ack::default_instance_->InitAsDefaultInstance();
  INF_QueryETFlistInfo_Ack::default_instance_->InitAsDefaultInstance();
  INF_QueryETFdynamicInfo_Ack::default_instance_->InitAsDefaultInstance();
  INF_QueryFundCondition_Ack::default_instance_->InitAsDefaultInstance();
  INF_QueryPosition_Ack::default_instance_->InitAsDefaultInstance();
  INF_QueryCJMX_Ack::default_instance_->InitAsDefaultInstance();
  INF_ETFPurRedem_Ack::default_instance_->InitAsDefaultInstance();
  StockLoginResp::default_instance_->InitAsDefaultInstance();
  ACCOUNT_INFO::default_instance_->InitAsDefaultInstance();
  STOCK_INFO::default_instance_->InitAsDefaultInstance();
  ETF_INFO::default_instance_->InitAsDefaultInstance();
  LOGIN_REQ::default_instance_->InitAsDefaultInstance();
  LOGIN_ACK::default_instance_->InitAsDefaultInstance();
  INF_Account::default_instance_->InitAsDefaultInstance();
  INF_ETF_Message::default_instance_->InitAsDefaultInstance();
  ETF_Message_req::default_instance_->InitAsDefaultInstance();
  ETF_Message_ack::default_instance_->InitAsDefaultInstance();
  StockServer::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CQconnection_2eprotoc);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CQconnection_2eprotoc {
  StaticDescriptorInitializer_CQconnection_2eprotoc() {
    protobuf_AddDesc_CQconnection_2eprotoc();
  }
} static_descriptor_initializer_CQconnection_2eprotoc_;


// ===================================================================

#ifndef _MSC_VER
const int INF_OneEntrust_Req::kRT0FieldNumber;
const int INF_OneEntrust_Req::kLocalhostFieldNumber;
const int INF_OneEntrust_Req::kReqIDFieldNumber;
const int INF_OneEntrust_Req::kFuncIDFieldNumber;
const int INF_OneEntrust_Req::kDepartmentIDFieldNumber;
const int INF_OneEntrust_Req::kMarketIDFieldNumber;
const int INF_OneEntrust_Req::kRT6FieldNumber;
const int INF_OneEntrust_Req::kETFserialNOFieldNumber;
const int INF_OneEntrust_Req::kSecurityCodeFieldNumber;
const int INF_OneEntrust_Req::kBSflagFieldNumber;
const int INF_OneEntrust_Req::kEntrustNumFieldNumber;
const int INF_OneEntrust_Req::kEntrustPriceFieldNumber;
const int INF_OneEntrust_Req::kEntrustTypeFieldNumber;
const int INF_OneEntrust_Req::kBandCodeFieldNumber;
const int INF_OneEntrust_Req::kBandAccountFieldNumber;
const int INF_OneEntrust_Req::kFinancingSecurityModeFieldNumber;
const int INF_OneEntrust_Req::kEntrustBatchNOFieldNumber;
const int INF_OneEntrust_Req::kEntrustRiskAssessFlagFieldNumber;
const int INF_OneEntrust_Req::kEntrustToBusinessFieldNumber;
const int INF_OneEntrust_Req::kAgreementNOFieldNumber;
const int INF_OneEntrust_Req::kOppositeTradeUnitFieldNumber;
const int INF_OneEntrust_Req::kBargainNOFieldNumber;
const int INF_OneEntrust_Req::kBsettleVipNOFieldNumber;
const int INF_OneEntrust_Req::kIsLowPriceEntrustFieldNumber;
#endif  // !_MSC_VER

INF_OneEntrust_Req::INF_OneEntrust_Req()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_OneEntrust_Req::InitAsDefaultInstance() {
}

INF_OneEntrust_Req::INF_OneEntrust_Req(const INF_OneEntrust_Req& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_OneEntrust_Req::SharedCtor() {
  _cached_size_ = 0;
  rt0_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  localhost_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  reqid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  funcid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  departmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  marketid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt6_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  etfserialno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  securitycode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bsflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustprice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrusttype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bandcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bandaccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  financingsecuritymode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustbatchno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustriskassessflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrusttobusiness_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  agreementno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  oppositetradeunit_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bargainno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bsettlevipno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  islowpriceentrust_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_OneEntrust_Req::~INF_OneEntrust_Req() {
  SharedDtor();
}

void INF_OneEntrust_Req::SharedDtor() {
  if (rt0_ != &::google::protobuf::internal::kEmptyString) {
    delete rt0_;
  }
  if (localhost_ != &::google::protobuf::internal::kEmptyString) {
    delete localhost_;
  }
  if (reqid_ != &::google::protobuf::internal::kEmptyString) {
    delete reqid_;
  }
  if (funcid_ != &::google::protobuf::internal::kEmptyString) {
    delete funcid_;
  }
  if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
    delete departmentid_;
  }
  if (marketid_ != &::google::protobuf::internal::kEmptyString) {
    delete marketid_;
  }
  if (rt6_ != &::google::protobuf::internal::kEmptyString) {
    delete rt6_;
  }
  if (etfserialno_ != &::google::protobuf::internal::kEmptyString) {
    delete etfserialno_;
  }
  if (securitycode_ != &::google::protobuf::internal::kEmptyString) {
    delete securitycode_;
  }
  if (bsflag_ != &::google::protobuf::internal::kEmptyString) {
    delete bsflag_;
  }
  if (entrustnum_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustnum_;
  }
  if (entrustprice_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustprice_;
  }
  if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
    delete entrusttype_;
  }
  if (bandcode_ != &::google::protobuf::internal::kEmptyString) {
    delete bandcode_;
  }
  if (bandaccount_ != &::google::protobuf::internal::kEmptyString) {
    delete bandaccount_;
  }
  if (financingsecuritymode_ != &::google::protobuf::internal::kEmptyString) {
    delete financingsecuritymode_;
  }
  if (entrustbatchno_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustbatchno_;
  }
  if (entrustriskassessflag_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustriskassessflag_;
  }
  if (entrusttobusiness_ != &::google::protobuf::internal::kEmptyString) {
    delete entrusttobusiness_;
  }
  if (agreementno_ != &::google::protobuf::internal::kEmptyString) {
    delete agreementno_;
  }
  if (oppositetradeunit_ != &::google::protobuf::internal::kEmptyString) {
    delete oppositetradeunit_;
  }
  if (bargainno_ != &::google::protobuf::internal::kEmptyString) {
    delete bargainno_;
  }
  if (bsettlevipno_ != &::google::protobuf::internal::kEmptyString) {
    delete bsettlevipno_;
  }
  if (islowpriceentrust_ != &::google::protobuf::internal::kEmptyString) {
    delete islowpriceentrust_;
  }
  if (this != default_instance_) {
  }
}

void INF_OneEntrust_Req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_OneEntrust_Req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_OneEntrust_Req_descriptor_;
}

const INF_OneEntrust_Req& INF_OneEntrust_Req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_OneEntrust_Req* INF_OneEntrust_Req::default_instance_ = NULL;

INF_OneEntrust_Req* INF_OneEntrust_Req::New() const {
  return new INF_OneEntrust_Req;
}

void INF_OneEntrust_Req::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_rt0()) {
      if (rt0_ != &::google::protobuf::internal::kEmptyString) {
        rt0_->clear();
      }
    }
    if (has_localhost()) {
      if (localhost_ != &::google::protobuf::internal::kEmptyString) {
        localhost_->clear();
      }
    }
    if (has_reqid()) {
      if (reqid_ != &::google::protobuf::internal::kEmptyString) {
        reqid_->clear();
      }
    }
    if (has_funcid()) {
      if (funcid_ != &::google::protobuf::internal::kEmptyString) {
        funcid_->clear();
      }
    }
    if (has_departmentid()) {
      if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
        departmentid_->clear();
      }
    }
    if (has_marketid()) {
      if (marketid_ != &::google::protobuf::internal::kEmptyString) {
        marketid_->clear();
      }
    }
    if (has_rt6()) {
      if (rt6_ != &::google::protobuf::internal::kEmptyString) {
        rt6_->clear();
      }
    }
    if (has_etfserialno()) {
      if (etfserialno_ != &::google::protobuf::internal::kEmptyString) {
        etfserialno_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_securitycode()) {
      if (securitycode_ != &::google::protobuf::internal::kEmptyString) {
        securitycode_->clear();
      }
    }
    if (has_bsflag()) {
      if (bsflag_ != &::google::protobuf::internal::kEmptyString) {
        bsflag_->clear();
      }
    }
    if (has_entrustnum()) {
      if (entrustnum_ != &::google::protobuf::internal::kEmptyString) {
        entrustnum_->clear();
      }
    }
    if (has_entrustprice()) {
      if (entrustprice_ != &::google::protobuf::internal::kEmptyString) {
        entrustprice_->clear();
      }
    }
    if (has_entrusttype()) {
      if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
        entrusttype_->clear();
      }
    }
    if (has_bandcode()) {
      if (bandcode_ != &::google::protobuf::internal::kEmptyString) {
        bandcode_->clear();
      }
    }
    if (has_bandaccount()) {
      if (bandaccount_ != &::google::protobuf::internal::kEmptyString) {
        bandaccount_->clear();
      }
    }
    if (has_financingsecuritymode()) {
      if (financingsecuritymode_ != &::google::protobuf::internal::kEmptyString) {
        financingsecuritymode_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_entrustbatchno()) {
      if (entrustbatchno_ != &::google::protobuf::internal::kEmptyString) {
        entrustbatchno_->clear();
      }
    }
    if (has_entrustriskassessflag()) {
      if (entrustriskassessflag_ != &::google::protobuf::internal::kEmptyString) {
        entrustriskassessflag_->clear();
      }
    }
    if (has_entrusttobusiness()) {
      if (entrusttobusiness_ != &::google::protobuf::internal::kEmptyString) {
        entrusttobusiness_->clear();
      }
    }
    if (has_agreementno()) {
      if (agreementno_ != &::google::protobuf::internal::kEmptyString) {
        agreementno_->clear();
      }
    }
    if (has_oppositetradeunit()) {
      if (oppositetradeunit_ != &::google::protobuf::internal::kEmptyString) {
        oppositetradeunit_->clear();
      }
    }
    if (has_bargainno()) {
      if (bargainno_ != &::google::protobuf::internal::kEmptyString) {
        bargainno_->clear();
      }
    }
    if (has_bsettlevipno()) {
      if (bsettlevipno_ != &::google::protobuf::internal::kEmptyString) {
        bsettlevipno_->clear();
      }
    }
    if (has_islowpriceentrust()) {
      if (islowpriceentrust_ != &::google::protobuf::internal::kEmptyString) {
        islowpriceentrust_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_OneEntrust_Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string RT0 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt0()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt0().data(), this->rt0().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Localhost;
        break;
      }
      
      // optional string Localhost = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Localhost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localhost()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->localhost().data(), this->localhost().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_ReqID;
        break;
      }
      
      // optional string ReqID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ReqID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reqid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->reqid().data(), this->reqid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_FuncID;
        break;
      }
      
      // optional string FuncID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_FuncID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_funcid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->funcid().data(), this->funcid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_DepartmentID;
        break;
      }
      
      // optional string DepartmentID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DepartmentID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_departmentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->departmentid().data(), this->departmentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_MarketID;
        break;
      }
      
      // optional string MarketID = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_MarketID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_marketid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->marketid().data(), this->marketid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_RT6;
        break;
      }
      
      // optional string RT6 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT6:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt6()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt6().data(), this->rt6().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_ETFserialNO;
        break;
      }
      
      // optional string ETFserialNO = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ETFserialNO:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etfserialno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->etfserialno().data(), this->etfserialno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_SecurityCode;
        break;
      }
      
      // optional string SecurityCode = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SecurityCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_securitycode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->securitycode().data(), this->securitycode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_BSflag;
        break;
      }
      
      // optional string BSflag = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_BSflag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bsflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bsflag().data(), this->bsflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_EntrustNum;
        break;
      }
      
      // optional string EntrustNum = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustnum().data(), this->entrustnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_EntrustPrice;
        break;
      }
      
      // optional string EntrustPrice = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustPrice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustprice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustprice().data(), this->entrustprice().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_EntrustType;
        break;
      }
      
      // optional string EntrustType = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrusttype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrusttype().data(), this->entrusttype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_BandCode;
        break;
      }
      
      // optional string BandCode = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_BandCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bandcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bandcode().data(), this->bandcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_BandAccount;
        break;
      }
      
      // optional string BandAccount = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_BandAccount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bandaccount()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bandaccount().data(), this->bandaccount().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_FinancingSecurityMode;
        break;
      }
      
      // optional string FinancingSecurityMode = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_FinancingSecurityMode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_financingsecuritymode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->financingsecuritymode().data(), this->financingsecuritymode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_EntrustBatchNO;
        break;
      }
      
      // optional string EntrustBatchNO = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustBatchNO:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustbatchno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustbatchno().data(), this->entrustbatchno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_EntrustRiskAssessFlag;
        break;
      }
      
      // optional string EntrustRiskAssessFlag = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustRiskAssessFlag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustriskassessflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustriskassessflag().data(), this->entrustriskassessflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_EntrustToBusiness;
        break;
      }
      
      // optional string EntrustToBusiness = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustToBusiness:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrusttobusiness()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrusttobusiness().data(), this->entrusttobusiness().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_AgreementNO;
        break;
      }
      
      // optional string AgreementNO = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_AgreementNO:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_agreementno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->agreementno().data(), this->agreementno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_OppositeTradeUnit;
        break;
      }
      
      // optional string OppositeTradeUnit = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OppositeTradeUnit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oppositetradeunit()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->oppositetradeunit().data(), this->oppositetradeunit().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_BargainNO;
        break;
      }
      
      // optional string BargainNO = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_BargainNO:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bargainno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bargainno().data(), this->bargainno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_BsettleVipNO;
        break;
      }
      
      // optional string BsettleVipNO = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_BsettleVipNO:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bsettlevipno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bsettlevipno().data(), this->bsettlevipno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(194)) goto parse_IsLowPriceEntrust;
        break;
      }
      
      // optional string IsLowPriceEntrust = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_IsLowPriceEntrust:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_islowpriceentrust()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->islowpriceentrust().data(), this->islowpriceentrust().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_OneEntrust_Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->rt0(), output);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->localhost(), output);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->reqid(), output);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->funcid(), output);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->departmentid(), output);
  }
  
  // optional string MarketID = 6;
  if (has_marketid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketid().data(), this->marketid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->marketid(), output);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->rt6(), output);
  }
  
  // optional string ETFserialNO = 8;
  if (has_etfserialno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etfserialno().data(), this->etfserialno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->etfserialno(), output);
  }
  
  // optional string SecurityCode = 9;
  if (has_securitycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitycode().data(), this->securitycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->securitycode(), output);
  }
  
  // optional string BSflag = 10;
  if (has_bsflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bsflag().data(), this->bsflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->bsflag(), output);
  }
  
  // optional string EntrustNum = 11;
  if (has_entrustnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustnum().data(), this->entrustnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->entrustnum(), output);
  }
  
  // optional string EntrustPrice = 12;
  if (has_entrustprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustprice().data(), this->entrustprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->entrustprice(), output);
  }
  
  // optional string EntrustType = 13;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->entrusttype(), output);
  }
  
  // optional string BandCode = 14;
  if (has_bandcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bandcode().data(), this->bandcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->bandcode(), output);
  }
  
  // optional string BandAccount = 15;
  if (has_bandaccount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bandaccount().data(), this->bandaccount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->bandaccount(), output);
  }
  
  // optional string FinancingSecurityMode = 16;
  if (has_financingsecuritymode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->financingsecuritymode().data(), this->financingsecuritymode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->financingsecuritymode(), output);
  }
  
  // optional string EntrustBatchNO = 17;
  if (has_entrustbatchno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustbatchno().data(), this->entrustbatchno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->entrustbatchno(), output);
  }
  
  // optional string EntrustRiskAssessFlag = 18;
  if (has_entrustriskassessflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustriskassessflag().data(), this->entrustriskassessflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->entrustriskassessflag(), output);
  }
  
  // optional string EntrustToBusiness = 19;
  if (has_entrusttobusiness()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttobusiness().data(), this->entrusttobusiness().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->entrusttobusiness(), output);
  }
  
  // optional string AgreementNO = 20;
  if (has_agreementno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->agreementno().data(), this->agreementno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->agreementno(), output);
  }
  
  // optional string OppositeTradeUnit = 21;
  if (has_oppositetradeunit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->oppositetradeunit().data(), this->oppositetradeunit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      21, this->oppositetradeunit(), output);
  }
  
  // optional string BargainNO = 22;
  if (has_bargainno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bargainno().data(), this->bargainno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      22, this->bargainno(), output);
  }
  
  // optional string BsettleVipNO = 23;
  if (has_bsettlevipno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bsettlevipno().data(), this->bsettlevipno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      23, this->bsettlevipno(), output);
  }
  
  // optional string IsLowPriceEntrust = 24;
  if (has_islowpriceentrust()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->islowpriceentrust().data(), this->islowpriceentrust().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      24, this->islowpriceentrust(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_OneEntrust_Req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rt0(), target);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->localhost(), target);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reqid(), target);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->funcid(), target);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->departmentid(), target);
  }
  
  // optional string MarketID = 6;
  if (has_marketid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketid().data(), this->marketid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->marketid(), target);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->rt6(), target);
  }
  
  // optional string ETFserialNO = 8;
  if (has_etfserialno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etfserialno().data(), this->etfserialno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->etfserialno(), target);
  }
  
  // optional string SecurityCode = 9;
  if (has_securitycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitycode().data(), this->securitycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->securitycode(), target);
  }
  
  // optional string BSflag = 10;
  if (has_bsflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bsflag().data(), this->bsflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->bsflag(), target);
  }
  
  // optional string EntrustNum = 11;
  if (has_entrustnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustnum().data(), this->entrustnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->entrustnum(), target);
  }
  
  // optional string EntrustPrice = 12;
  if (has_entrustprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustprice().data(), this->entrustprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->entrustprice(), target);
  }
  
  // optional string EntrustType = 13;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->entrusttype(), target);
  }
  
  // optional string BandCode = 14;
  if (has_bandcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bandcode().data(), this->bandcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->bandcode(), target);
  }
  
  // optional string BandAccount = 15;
  if (has_bandaccount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bandaccount().data(), this->bandaccount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->bandaccount(), target);
  }
  
  // optional string FinancingSecurityMode = 16;
  if (has_financingsecuritymode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->financingsecuritymode().data(), this->financingsecuritymode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->financingsecuritymode(), target);
  }
  
  // optional string EntrustBatchNO = 17;
  if (has_entrustbatchno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustbatchno().data(), this->entrustbatchno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->entrustbatchno(), target);
  }
  
  // optional string EntrustRiskAssessFlag = 18;
  if (has_entrustriskassessflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustriskassessflag().data(), this->entrustriskassessflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->entrustriskassessflag(), target);
  }
  
  // optional string EntrustToBusiness = 19;
  if (has_entrusttobusiness()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttobusiness().data(), this->entrusttobusiness().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->entrusttobusiness(), target);
  }
  
  // optional string AgreementNO = 20;
  if (has_agreementno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->agreementno().data(), this->agreementno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->agreementno(), target);
  }
  
  // optional string OppositeTradeUnit = 21;
  if (has_oppositetradeunit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->oppositetradeunit().data(), this->oppositetradeunit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->oppositetradeunit(), target);
  }
  
  // optional string BargainNO = 22;
  if (has_bargainno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bargainno().data(), this->bargainno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->bargainno(), target);
  }
  
  // optional string BsettleVipNO = 23;
  if (has_bsettlevipno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bsettlevipno().data(), this->bsettlevipno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->bsettlevipno(), target);
  }
  
  // optional string IsLowPriceEntrust = 24;
  if (has_islowpriceentrust()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->islowpriceentrust().data(), this->islowpriceentrust().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->islowpriceentrust(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_OneEntrust_Req::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string RT0 = 1;
    if (has_rt0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt0());
    }
    
    // optional string Localhost = 2;
    if (has_localhost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localhost());
    }
    
    // optional string ReqID = 3;
    if (has_reqid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reqid());
    }
    
    // optional string FuncID = 4;
    if (has_funcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->funcid());
    }
    
    // optional string DepartmentID = 5;
    if (has_departmentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->departmentid());
    }
    
    // optional string MarketID = 6;
    if (has_marketid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->marketid());
    }
    
    // optional string RT6 = 7;
    if (has_rt6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt6());
    }
    
    // optional string ETFserialNO = 8;
    if (has_etfserialno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->etfserialno());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string SecurityCode = 9;
    if (has_securitycode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->securitycode());
    }
    
    // optional string BSflag = 10;
    if (has_bsflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bsflag());
    }
    
    // optional string EntrustNum = 11;
    if (has_entrustnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustnum());
    }
    
    // optional string EntrustPrice = 12;
    if (has_entrustprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustprice());
    }
    
    // optional string EntrustType = 13;
    if (has_entrusttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrusttype());
    }
    
    // optional string BandCode = 14;
    if (has_bandcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bandcode());
    }
    
    // optional string BandAccount = 15;
    if (has_bandaccount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bandaccount());
    }
    
    // optional string FinancingSecurityMode = 16;
    if (has_financingsecuritymode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->financingsecuritymode());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string EntrustBatchNO = 17;
    if (has_entrustbatchno()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustbatchno());
    }
    
    // optional string EntrustRiskAssessFlag = 18;
    if (has_entrustriskassessflag()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustriskassessflag());
    }
    
    // optional string EntrustToBusiness = 19;
    if (has_entrusttobusiness()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrusttobusiness());
    }
    
    // optional string AgreementNO = 20;
    if (has_agreementno()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->agreementno());
    }
    
    // optional string OppositeTradeUnit = 21;
    if (has_oppositetradeunit()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->oppositetradeunit());
    }
    
    // optional string BargainNO = 22;
    if (has_bargainno()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bargainno());
    }
    
    // optional string BsettleVipNO = 23;
    if (has_bsettlevipno()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bsettlevipno());
    }
    
    // optional string IsLowPriceEntrust = 24;
    if (has_islowpriceentrust()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->islowpriceentrust());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_OneEntrust_Req::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_OneEntrust_Req* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_OneEntrust_Req*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_OneEntrust_Req::MergeFrom(const INF_OneEntrust_Req& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rt0()) {
      set_rt0(from.rt0());
    }
    if (from.has_localhost()) {
      set_localhost(from.localhost());
    }
    if (from.has_reqid()) {
      set_reqid(from.reqid());
    }
    if (from.has_funcid()) {
      set_funcid(from.funcid());
    }
    if (from.has_departmentid()) {
      set_departmentid(from.departmentid());
    }
    if (from.has_marketid()) {
      set_marketid(from.marketid());
    }
    if (from.has_rt6()) {
      set_rt6(from.rt6());
    }
    if (from.has_etfserialno()) {
      set_etfserialno(from.etfserialno());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_securitycode()) {
      set_securitycode(from.securitycode());
    }
    if (from.has_bsflag()) {
      set_bsflag(from.bsflag());
    }
    if (from.has_entrustnum()) {
      set_entrustnum(from.entrustnum());
    }
    if (from.has_entrustprice()) {
      set_entrustprice(from.entrustprice());
    }
    if (from.has_entrusttype()) {
      set_entrusttype(from.entrusttype());
    }
    if (from.has_bandcode()) {
      set_bandcode(from.bandcode());
    }
    if (from.has_bandaccount()) {
      set_bandaccount(from.bandaccount());
    }
    if (from.has_financingsecuritymode()) {
      set_financingsecuritymode(from.financingsecuritymode());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_entrustbatchno()) {
      set_entrustbatchno(from.entrustbatchno());
    }
    if (from.has_entrustriskassessflag()) {
      set_entrustriskassessflag(from.entrustriskassessflag());
    }
    if (from.has_entrusttobusiness()) {
      set_entrusttobusiness(from.entrusttobusiness());
    }
    if (from.has_agreementno()) {
      set_agreementno(from.agreementno());
    }
    if (from.has_oppositetradeunit()) {
      set_oppositetradeunit(from.oppositetradeunit());
    }
    if (from.has_bargainno()) {
      set_bargainno(from.bargainno());
    }
    if (from.has_bsettlevipno()) {
      set_bsettlevipno(from.bsettlevipno());
    }
    if (from.has_islowpriceentrust()) {
      set_islowpriceentrust(from.islowpriceentrust());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_OneEntrust_Req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_OneEntrust_Req::CopyFrom(const INF_OneEntrust_Req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_OneEntrust_Req::IsInitialized() const {
  
  return true;
}

void INF_OneEntrust_Req::Swap(INF_OneEntrust_Req* other) {
  if (other != this) {
    std::swap(rt0_, other->rt0_);
    std::swap(localhost_, other->localhost_);
    std::swap(reqid_, other->reqid_);
    std::swap(funcid_, other->funcid_);
    std::swap(departmentid_, other->departmentid_);
    std::swap(marketid_, other->marketid_);
    std::swap(rt6_, other->rt6_);
    std::swap(etfserialno_, other->etfserialno_);
    std::swap(securitycode_, other->securitycode_);
    std::swap(bsflag_, other->bsflag_);
    std::swap(entrustnum_, other->entrustnum_);
    std::swap(entrustprice_, other->entrustprice_);
    std::swap(entrusttype_, other->entrusttype_);
    std::swap(bandcode_, other->bandcode_);
    std::swap(bandaccount_, other->bandaccount_);
    std::swap(financingsecuritymode_, other->financingsecuritymode_);
    std::swap(entrustbatchno_, other->entrustbatchno_);
    std::swap(entrustriskassessflag_, other->entrustriskassessflag_);
    std::swap(entrusttobusiness_, other->entrusttobusiness_);
    std::swap(agreementno_, other->agreementno_);
    std::swap(oppositetradeunit_, other->oppositetradeunit_);
    std::swap(bargainno_, other->bargainno_);
    std::swap(bsettlevipno_, other->bsettlevipno_);
    std::swap(islowpriceentrust_, other->islowpriceentrust_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_OneEntrust_Req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_OneEntrust_Req_descriptor_;
  metadata.reflection = INF_OneEntrust_Req_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_OneCancel_Req::kRT0FieldNumber;
const int INF_OneCancel_Req::kLocalhostFieldNumber;
const int INF_OneCancel_Req::kReqIDFieldNumber;
const int INF_OneCancel_Req::kFuncIDFieldNumber;
const int INF_OneCancel_Req::kDepartmentIDFieldNumber;
const int INF_OneCancel_Req::kMarketIDFieldNumber;
const int INF_OneCancel_Req::kRT6FieldNumber;
const int INF_OneCancel_Req::kCustomIDFieldNumber;
const int INF_OneCancel_Req::kEntrustSerialFieldNumber;
const int INF_OneCancel_Req::kEntrustTypeFieldNumber;
#endif  // !_MSC_VER

INF_OneCancel_Req::INF_OneCancel_Req()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_OneCancel_Req::InitAsDefaultInstance() {
}

INF_OneCancel_Req::INF_OneCancel_Req(const INF_OneCancel_Req& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_OneCancel_Req::SharedCtor() {
  _cached_size_ = 0;
  rt0_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  localhost_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  reqid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  funcid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  departmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  marketid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt6_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  customid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustserial_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrusttype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_OneCancel_Req::~INF_OneCancel_Req() {
  SharedDtor();
}

void INF_OneCancel_Req::SharedDtor() {
  if (rt0_ != &::google::protobuf::internal::kEmptyString) {
    delete rt0_;
  }
  if (localhost_ != &::google::protobuf::internal::kEmptyString) {
    delete localhost_;
  }
  if (reqid_ != &::google::protobuf::internal::kEmptyString) {
    delete reqid_;
  }
  if (funcid_ != &::google::protobuf::internal::kEmptyString) {
    delete funcid_;
  }
  if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
    delete departmentid_;
  }
  if (marketid_ != &::google::protobuf::internal::kEmptyString) {
    delete marketid_;
  }
  if (rt6_ != &::google::protobuf::internal::kEmptyString) {
    delete rt6_;
  }
  if (customid_ != &::google::protobuf::internal::kEmptyString) {
    delete customid_;
  }
  if (entrustserial_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustserial_;
  }
  if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
    delete entrusttype_;
  }
  if (this != default_instance_) {
  }
}

void INF_OneCancel_Req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_OneCancel_Req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_OneCancel_Req_descriptor_;
}

const INF_OneCancel_Req& INF_OneCancel_Req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_OneCancel_Req* INF_OneCancel_Req::default_instance_ = NULL;

INF_OneCancel_Req* INF_OneCancel_Req::New() const {
  return new INF_OneCancel_Req;
}

void INF_OneCancel_Req::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_rt0()) {
      if (rt0_ != &::google::protobuf::internal::kEmptyString) {
        rt0_->clear();
      }
    }
    if (has_localhost()) {
      if (localhost_ != &::google::protobuf::internal::kEmptyString) {
        localhost_->clear();
      }
    }
    if (has_reqid()) {
      if (reqid_ != &::google::protobuf::internal::kEmptyString) {
        reqid_->clear();
      }
    }
    if (has_funcid()) {
      if (funcid_ != &::google::protobuf::internal::kEmptyString) {
        funcid_->clear();
      }
    }
    if (has_departmentid()) {
      if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
        departmentid_->clear();
      }
    }
    if (has_marketid()) {
      if (marketid_ != &::google::protobuf::internal::kEmptyString) {
        marketid_->clear();
      }
    }
    if (has_rt6()) {
      if (rt6_ != &::google::protobuf::internal::kEmptyString) {
        rt6_->clear();
      }
    }
    if (has_customid()) {
      if (customid_ != &::google::protobuf::internal::kEmptyString) {
        customid_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_entrustserial()) {
      if (entrustserial_ != &::google::protobuf::internal::kEmptyString) {
        entrustserial_->clear();
      }
    }
    if (has_entrusttype()) {
      if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
        entrusttype_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_OneCancel_Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string RT0 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt0()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt0().data(), this->rt0().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Localhost;
        break;
      }
      
      // optional string Localhost = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Localhost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localhost()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->localhost().data(), this->localhost().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_ReqID;
        break;
      }
      
      // optional string ReqID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ReqID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reqid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->reqid().data(), this->reqid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_FuncID;
        break;
      }
      
      // optional string FuncID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_FuncID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_funcid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->funcid().data(), this->funcid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_DepartmentID;
        break;
      }
      
      // optional string DepartmentID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DepartmentID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_departmentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->departmentid().data(), this->departmentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_MarketID;
        break;
      }
      
      // optional string MarketID = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_MarketID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_marketid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->marketid().data(), this->marketid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_RT6;
        break;
      }
      
      // optional string RT6 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT6:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt6()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt6().data(), this->rt6().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_CustomID;
        break;
      }
      
      // optional string CustomID = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CustomID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->customid().data(), this->customid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_EntrustSerial;
        break;
      }
      
      // optional string EntrustSerial = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustSerial:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustserial()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustserial().data(), this->entrustserial().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_EntrustType;
        break;
      }
      
      // optional string EntrustType = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrusttype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrusttype().data(), this->entrusttype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_OneCancel_Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->rt0(), output);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->localhost(), output);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->reqid(), output);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->funcid(), output);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->departmentid(), output);
  }
  
  // optional string MarketID = 6;
  if (has_marketid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketid().data(), this->marketid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->marketid(), output);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->rt6(), output);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->customid(), output);
  }
  
  // optional string EntrustSerial = 9;
  if (has_entrustserial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustserial().data(), this->entrustserial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->entrustserial(), output);
  }
  
  // optional string EntrustType = 10;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->entrusttype(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_OneCancel_Req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rt0(), target);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->localhost(), target);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reqid(), target);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->funcid(), target);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->departmentid(), target);
  }
  
  // optional string MarketID = 6;
  if (has_marketid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketid().data(), this->marketid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->marketid(), target);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->rt6(), target);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->customid(), target);
  }
  
  // optional string EntrustSerial = 9;
  if (has_entrustserial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustserial().data(), this->entrustserial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->entrustserial(), target);
  }
  
  // optional string EntrustType = 10;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->entrusttype(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_OneCancel_Req::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string RT0 = 1;
    if (has_rt0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt0());
    }
    
    // optional string Localhost = 2;
    if (has_localhost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localhost());
    }
    
    // optional string ReqID = 3;
    if (has_reqid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reqid());
    }
    
    // optional string FuncID = 4;
    if (has_funcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->funcid());
    }
    
    // optional string DepartmentID = 5;
    if (has_departmentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->departmentid());
    }
    
    // optional string MarketID = 6;
    if (has_marketid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->marketid());
    }
    
    // optional string RT6 = 7;
    if (has_rt6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt6());
    }
    
    // optional string CustomID = 8;
    if (has_customid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->customid());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string EntrustSerial = 9;
    if (has_entrustserial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustserial());
    }
    
    // optional string EntrustType = 10;
    if (has_entrusttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrusttype());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_OneCancel_Req::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_OneCancel_Req* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_OneCancel_Req*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_OneCancel_Req::MergeFrom(const INF_OneCancel_Req& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rt0()) {
      set_rt0(from.rt0());
    }
    if (from.has_localhost()) {
      set_localhost(from.localhost());
    }
    if (from.has_reqid()) {
      set_reqid(from.reqid());
    }
    if (from.has_funcid()) {
      set_funcid(from.funcid());
    }
    if (from.has_departmentid()) {
      set_departmentid(from.departmentid());
    }
    if (from.has_marketid()) {
      set_marketid(from.marketid());
    }
    if (from.has_rt6()) {
      set_rt6(from.rt6());
    }
    if (from.has_customid()) {
      set_customid(from.customid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_entrustserial()) {
      set_entrustserial(from.entrustserial());
    }
    if (from.has_entrusttype()) {
      set_entrusttype(from.entrusttype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_OneCancel_Req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_OneCancel_Req::CopyFrom(const INF_OneCancel_Req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_OneCancel_Req::IsInitialized() const {
  
  return true;
}

void INF_OneCancel_Req::Swap(INF_OneCancel_Req* other) {
  if (other != this) {
    std::swap(rt0_, other->rt0_);
    std::swap(localhost_, other->localhost_);
    std::swap(reqid_, other->reqid_);
    std::swap(funcid_, other->funcid_);
    std::swap(departmentid_, other->departmentid_);
    std::swap(marketid_, other->marketid_);
    std::swap(rt6_, other->rt6_);
    std::swap(customid_, other->customid_);
    std::swap(entrustserial_, other->entrustserial_);
    std::swap(entrusttype_, other->entrusttype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_OneCancel_Req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_OneCancel_Req_descriptor_;
  metadata.reflection = INF_OneCancel_Req_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_QueryOneEntrust_Req::kRT0FieldNumber;
const int INF_QueryOneEntrust_Req::kLocalhostFieldNumber;
const int INF_QueryOneEntrust_Req::kReqIDFieldNumber;
const int INF_QueryOneEntrust_Req::kFuncIDFieldNumber;
const int INF_QueryOneEntrust_Req::kDepartmentIDFieldNumber;
const int INF_QueryOneEntrust_Req::kRT5FieldNumber;
const int INF_QueryOneEntrust_Req::kRT6FieldNumber;
const int INF_QueryOneEntrust_Req::kCustomIDFieldNumber;
const int INF_QueryOneEntrust_Req::kRT8FieldNumber;
const int INF_QueryOneEntrust_Req::kRT9FieldNumber;
const int INF_QueryOneEntrust_Req::kEntrustSerialFieldNumber;
const int INF_QueryOneEntrust_Req::kRT11FieldNumber;
const int INF_QueryOneEntrust_Req::kRT12FieldNumber;
const int INF_QueryOneEntrust_Req::kRT13FieldNumber;
const int INF_QueryOneEntrust_Req::kRT14FieldNumber;
const int INF_QueryOneEntrust_Req::kEntrustTypeFieldNumber;
const int INF_QueryOneEntrust_Req::kRT16FieldNumber;
const int INF_QueryOneEntrust_Req::kRT17FieldNumber;
const int INF_QueryOneEntrust_Req::kRT18FieldNumber;
const int INF_QueryOneEntrust_Req::kRT19FieldNumber;
const int INF_QueryOneEntrust_Req::kRT20FieldNumber;
const int INF_QueryOneEntrust_Req::kRT21FieldNumber;
const int INF_QueryOneEntrust_Req::kIsCancelFieldNumber;
#endif  // !_MSC_VER

INF_QueryOneEntrust_Req::INF_QueryOneEntrust_Req()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_QueryOneEntrust_Req::InitAsDefaultInstance() {
}

INF_QueryOneEntrust_Req::INF_QueryOneEntrust_Req(const INF_QueryOneEntrust_Req& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_QueryOneEntrust_Req::SharedCtor() {
  _cached_size_ = 0;
  rt0_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  localhost_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  reqid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  funcid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  departmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt5_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt6_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  customid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt8_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt9_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustserial_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt11_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt12_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt13_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt14_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrusttype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt16_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt17_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt18_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt19_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt20_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt21_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  iscancel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_QueryOneEntrust_Req::~INF_QueryOneEntrust_Req() {
  SharedDtor();
}

void INF_QueryOneEntrust_Req::SharedDtor() {
  if (rt0_ != &::google::protobuf::internal::kEmptyString) {
    delete rt0_;
  }
  if (localhost_ != &::google::protobuf::internal::kEmptyString) {
    delete localhost_;
  }
  if (reqid_ != &::google::protobuf::internal::kEmptyString) {
    delete reqid_;
  }
  if (funcid_ != &::google::protobuf::internal::kEmptyString) {
    delete funcid_;
  }
  if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
    delete departmentid_;
  }
  if (rt5_ != &::google::protobuf::internal::kEmptyString) {
    delete rt5_;
  }
  if (rt6_ != &::google::protobuf::internal::kEmptyString) {
    delete rt6_;
  }
  if (customid_ != &::google::protobuf::internal::kEmptyString) {
    delete customid_;
  }
  if (rt8_ != &::google::protobuf::internal::kEmptyString) {
    delete rt8_;
  }
  if (rt9_ != &::google::protobuf::internal::kEmptyString) {
    delete rt9_;
  }
  if (entrustserial_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustserial_;
  }
  if (rt11_ != &::google::protobuf::internal::kEmptyString) {
    delete rt11_;
  }
  if (rt12_ != &::google::protobuf::internal::kEmptyString) {
    delete rt12_;
  }
  if (rt13_ != &::google::protobuf::internal::kEmptyString) {
    delete rt13_;
  }
  if (rt14_ != &::google::protobuf::internal::kEmptyString) {
    delete rt14_;
  }
  if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
    delete entrusttype_;
  }
  if (rt16_ != &::google::protobuf::internal::kEmptyString) {
    delete rt16_;
  }
  if (rt17_ != &::google::protobuf::internal::kEmptyString) {
    delete rt17_;
  }
  if (rt18_ != &::google::protobuf::internal::kEmptyString) {
    delete rt18_;
  }
  if (rt19_ != &::google::protobuf::internal::kEmptyString) {
    delete rt19_;
  }
  if (rt20_ != &::google::protobuf::internal::kEmptyString) {
    delete rt20_;
  }
  if (rt21_ != &::google::protobuf::internal::kEmptyString) {
    delete rt21_;
  }
  if (iscancel_ != &::google::protobuf::internal::kEmptyString) {
    delete iscancel_;
  }
  if (this != default_instance_) {
  }
}

void INF_QueryOneEntrust_Req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_QueryOneEntrust_Req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_QueryOneEntrust_Req_descriptor_;
}

const INF_QueryOneEntrust_Req& INF_QueryOneEntrust_Req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_QueryOneEntrust_Req* INF_QueryOneEntrust_Req::default_instance_ = NULL;

INF_QueryOneEntrust_Req* INF_QueryOneEntrust_Req::New() const {
  return new INF_QueryOneEntrust_Req;
}

void INF_QueryOneEntrust_Req::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_rt0()) {
      if (rt0_ != &::google::protobuf::internal::kEmptyString) {
        rt0_->clear();
      }
    }
    if (has_localhost()) {
      if (localhost_ != &::google::protobuf::internal::kEmptyString) {
        localhost_->clear();
      }
    }
    if (has_reqid()) {
      if (reqid_ != &::google::protobuf::internal::kEmptyString) {
        reqid_->clear();
      }
    }
    if (has_funcid()) {
      if (funcid_ != &::google::protobuf::internal::kEmptyString) {
        funcid_->clear();
      }
    }
    if (has_departmentid()) {
      if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
        departmentid_->clear();
      }
    }
    if (has_rt5()) {
      if (rt5_ != &::google::protobuf::internal::kEmptyString) {
        rt5_->clear();
      }
    }
    if (has_rt6()) {
      if (rt6_ != &::google::protobuf::internal::kEmptyString) {
        rt6_->clear();
      }
    }
    if (has_customid()) {
      if (customid_ != &::google::protobuf::internal::kEmptyString) {
        customid_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_rt8()) {
      if (rt8_ != &::google::protobuf::internal::kEmptyString) {
        rt8_->clear();
      }
    }
    if (has_rt9()) {
      if (rt9_ != &::google::protobuf::internal::kEmptyString) {
        rt9_->clear();
      }
    }
    if (has_entrustserial()) {
      if (entrustserial_ != &::google::protobuf::internal::kEmptyString) {
        entrustserial_->clear();
      }
    }
    if (has_rt11()) {
      if (rt11_ != &::google::protobuf::internal::kEmptyString) {
        rt11_->clear();
      }
    }
    if (has_rt12()) {
      if (rt12_ != &::google::protobuf::internal::kEmptyString) {
        rt12_->clear();
      }
    }
    if (has_rt13()) {
      if (rt13_ != &::google::protobuf::internal::kEmptyString) {
        rt13_->clear();
      }
    }
    if (has_rt14()) {
      if (rt14_ != &::google::protobuf::internal::kEmptyString) {
        rt14_->clear();
      }
    }
    if (has_entrusttype()) {
      if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
        entrusttype_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_rt16()) {
      if (rt16_ != &::google::protobuf::internal::kEmptyString) {
        rt16_->clear();
      }
    }
    if (has_rt17()) {
      if (rt17_ != &::google::protobuf::internal::kEmptyString) {
        rt17_->clear();
      }
    }
    if (has_rt18()) {
      if (rt18_ != &::google::protobuf::internal::kEmptyString) {
        rt18_->clear();
      }
    }
    if (has_rt19()) {
      if (rt19_ != &::google::protobuf::internal::kEmptyString) {
        rt19_->clear();
      }
    }
    if (has_rt20()) {
      if (rt20_ != &::google::protobuf::internal::kEmptyString) {
        rt20_->clear();
      }
    }
    if (has_rt21()) {
      if (rt21_ != &::google::protobuf::internal::kEmptyString) {
        rt21_->clear();
      }
    }
    if (has_iscancel()) {
      if (iscancel_ != &::google::protobuf::internal::kEmptyString) {
        iscancel_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_QueryOneEntrust_Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string RT0 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt0()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt0().data(), this->rt0().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Localhost;
        break;
      }
      
      // optional string Localhost = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Localhost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localhost()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->localhost().data(), this->localhost().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_ReqID;
        break;
      }
      
      // optional string ReqID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ReqID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reqid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->reqid().data(), this->reqid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_FuncID;
        break;
      }
      
      // optional string FuncID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_FuncID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_funcid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->funcid().data(), this->funcid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_DepartmentID;
        break;
      }
      
      // optional string DepartmentID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DepartmentID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_departmentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->departmentid().data(), this->departmentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_RT5;
        break;
      }
      
      // optional string RT5 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt5().data(), this->rt5().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_RT6;
        break;
      }
      
      // optional string RT6 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT6:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt6()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt6().data(), this->rt6().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_CustomID;
        break;
      }
      
      // optional string CustomID = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CustomID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->customid().data(), this->customid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_RT8;
        break;
      }
      
      // optional string RT8 = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT8:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt8()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt8().data(), this->rt8().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_RT9;
        break;
      }
      
      // optional string RT9 = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT9:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt9()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt9().data(), this->rt9().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_EntrustSerial;
        break;
      }
      
      // optional string EntrustSerial = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustSerial:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustserial()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustserial().data(), this->entrustserial().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_RT11;
        break;
      }
      
      // optional string RT11 = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT11:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt11()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt11().data(), this->rt11().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_RT12;
        break;
      }
      
      // optional string RT12 = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT12:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt12()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt12().data(), this->rt12().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_RT13;
        break;
      }
      
      // optional string RT13 = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT13:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt13()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt13().data(), this->rt13().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_RT14;
        break;
      }
      
      // optional string RT14 = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT14:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt14()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt14().data(), this->rt14().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_EntrustType;
        break;
      }
      
      // optional string EntrustType = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrusttype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrusttype().data(), this->entrusttype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_RT16;
        break;
      }
      
      // optional string RT16 = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT16:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt16()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt16().data(), this->rt16().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_RT17;
        break;
      }
      
      // optional string RT17 = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT17:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt17()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt17().data(), this->rt17().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_RT18;
        break;
      }
      
      // optional string RT18 = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT18:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt18()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt18().data(), this->rt18().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_RT19;
        break;
      }
      
      // optional string RT19 = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT19:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt19()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt19().data(), this->rt19().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_RT20;
        break;
      }
      
      // optional string RT20 = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT20:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt20()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt20().data(), this->rt20().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_RT21;
        break;
      }
      
      // optional string RT21 = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT21:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt21()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt21().data(), this->rt21().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_IsCancel;
        break;
      }
      
      // optional string IsCancel = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_IsCancel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iscancel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->iscancel().data(), this->iscancel().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_QueryOneEntrust_Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->rt0(), output);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->localhost(), output);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->reqid(), output);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->funcid(), output);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->departmentid(), output);
  }
  
  // optional string RT5 = 6;
  if (has_rt5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt5().data(), this->rt5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->rt5(), output);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->rt6(), output);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->customid(), output);
  }
  
  // optional string RT8 = 9;
  if (has_rt8()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt8().data(), this->rt8().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->rt8(), output);
  }
  
  // optional string RT9 = 10;
  if (has_rt9()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt9().data(), this->rt9().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->rt9(), output);
  }
  
  // optional string EntrustSerial = 11;
  if (has_entrustserial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustserial().data(), this->entrustserial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->entrustserial(), output);
  }
  
  // optional string RT11 = 12;
  if (has_rt11()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt11().data(), this->rt11().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->rt11(), output);
  }
  
  // optional string RT12 = 13;
  if (has_rt12()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt12().data(), this->rt12().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->rt12(), output);
  }
  
  // optional string RT13 = 14;
  if (has_rt13()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt13().data(), this->rt13().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->rt13(), output);
  }
  
  // optional string RT14 = 15;
  if (has_rt14()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt14().data(), this->rt14().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->rt14(), output);
  }
  
  // optional string EntrustType = 16;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->entrusttype(), output);
  }
  
  // optional string RT16 = 17;
  if (has_rt16()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt16().data(), this->rt16().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->rt16(), output);
  }
  
  // optional string RT17 = 18;
  if (has_rt17()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt17().data(), this->rt17().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->rt17(), output);
  }
  
  // optional string RT18 = 19;
  if (has_rt18()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt18().data(), this->rt18().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->rt18(), output);
  }
  
  // optional string RT19 = 20;
  if (has_rt19()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt19().data(), this->rt19().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->rt19(), output);
  }
  
  // optional string RT20 = 21;
  if (has_rt20()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt20().data(), this->rt20().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      21, this->rt20(), output);
  }
  
  // optional string RT21 = 22;
  if (has_rt21()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt21().data(), this->rt21().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      22, this->rt21(), output);
  }
  
  // optional string IsCancel = 23;
  if (has_iscancel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->iscancel().data(), this->iscancel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      23, this->iscancel(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_QueryOneEntrust_Req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rt0(), target);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->localhost(), target);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reqid(), target);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->funcid(), target);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->departmentid(), target);
  }
  
  // optional string RT5 = 6;
  if (has_rt5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt5().data(), this->rt5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->rt5(), target);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->rt6(), target);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->customid(), target);
  }
  
  // optional string RT8 = 9;
  if (has_rt8()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt8().data(), this->rt8().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->rt8(), target);
  }
  
  // optional string RT9 = 10;
  if (has_rt9()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt9().data(), this->rt9().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->rt9(), target);
  }
  
  // optional string EntrustSerial = 11;
  if (has_entrustserial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustserial().data(), this->entrustserial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->entrustserial(), target);
  }
  
  // optional string RT11 = 12;
  if (has_rt11()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt11().data(), this->rt11().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->rt11(), target);
  }
  
  // optional string RT12 = 13;
  if (has_rt12()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt12().data(), this->rt12().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->rt12(), target);
  }
  
  // optional string RT13 = 14;
  if (has_rt13()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt13().data(), this->rt13().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->rt13(), target);
  }
  
  // optional string RT14 = 15;
  if (has_rt14()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt14().data(), this->rt14().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->rt14(), target);
  }
  
  // optional string EntrustType = 16;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->entrusttype(), target);
  }
  
  // optional string RT16 = 17;
  if (has_rt16()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt16().data(), this->rt16().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->rt16(), target);
  }
  
  // optional string RT17 = 18;
  if (has_rt17()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt17().data(), this->rt17().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->rt17(), target);
  }
  
  // optional string RT18 = 19;
  if (has_rt18()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt18().data(), this->rt18().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->rt18(), target);
  }
  
  // optional string RT19 = 20;
  if (has_rt19()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt19().data(), this->rt19().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->rt19(), target);
  }
  
  // optional string RT20 = 21;
  if (has_rt20()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt20().data(), this->rt20().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->rt20(), target);
  }
  
  // optional string RT21 = 22;
  if (has_rt21()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt21().data(), this->rt21().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->rt21(), target);
  }
  
  // optional string IsCancel = 23;
  if (has_iscancel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->iscancel().data(), this->iscancel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->iscancel(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_QueryOneEntrust_Req::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string RT0 = 1;
    if (has_rt0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt0());
    }
    
    // optional string Localhost = 2;
    if (has_localhost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localhost());
    }
    
    // optional string ReqID = 3;
    if (has_reqid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reqid());
    }
    
    // optional string FuncID = 4;
    if (has_funcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->funcid());
    }
    
    // optional string DepartmentID = 5;
    if (has_departmentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->departmentid());
    }
    
    // optional string RT5 = 6;
    if (has_rt5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt5());
    }
    
    // optional string RT6 = 7;
    if (has_rt6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt6());
    }
    
    // optional string CustomID = 8;
    if (has_customid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->customid());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string RT8 = 9;
    if (has_rt8()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt8());
    }
    
    // optional string RT9 = 10;
    if (has_rt9()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt9());
    }
    
    // optional string EntrustSerial = 11;
    if (has_entrustserial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustserial());
    }
    
    // optional string RT11 = 12;
    if (has_rt11()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt11());
    }
    
    // optional string RT12 = 13;
    if (has_rt12()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt12());
    }
    
    // optional string RT13 = 14;
    if (has_rt13()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt13());
    }
    
    // optional string RT14 = 15;
    if (has_rt14()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt14());
    }
    
    // optional string EntrustType = 16;
    if (has_entrusttype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrusttype());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string RT16 = 17;
    if (has_rt16()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt16());
    }
    
    // optional string RT17 = 18;
    if (has_rt17()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt17());
    }
    
    // optional string RT18 = 19;
    if (has_rt18()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt18());
    }
    
    // optional string RT19 = 20;
    if (has_rt19()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt19());
    }
    
    // optional string RT20 = 21;
    if (has_rt20()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt20());
    }
    
    // optional string RT21 = 22;
    if (has_rt21()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt21());
    }
    
    // optional string IsCancel = 23;
    if (has_iscancel()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->iscancel());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_QueryOneEntrust_Req::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_QueryOneEntrust_Req* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_QueryOneEntrust_Req*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_QueryOneEntrust_Req::MergeFrom(const INF_QueryOneEntrust_Req& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rt0()) {
      set_rt0(from.rt0());
    }
    if (from.has_localhost()) {
      set_localhost(from.localhost());
    }
    if (from.has_reqid()) {
      set_reqid(from.reqid());
    }
    if (from.has_funcid()) {
      set_funcid(from.funcid());
    }
    if (from.has_departmentid()) {
      set_departmentid(from.departmentid());
    }
    if (from.has_rt5()) {
      set_rt5(from.rt5());
    }
    if (from.has_rt6()) {
      set_rt6(from.rt6());
    }
    if (from.has_customid()) {
      set_customid(from.customid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_rt8()) {
      set_rt8(from.rt8());
    }
    if (from.has_rt9()) {
      set_rt9(from.rt9());
    }
    if (from.has_entrustserial()) {
      set_entrustserial(from.entrustserial());
    }
    if (from.has_rt11()) {
      set_rt11(from.rt11());
    }
    if (from.has_rt12()) {
      set_rt12(from.rt12());
    }
    if (from.has_rt13()) {
      set_rt13(from.rt13());
    }
    if (from.has_rt14()) {
      set_rt14(from.rt14());
    }
    if (from.has_entrusttype()) {
      set_entrusttype(from.entrusttype());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_rt16()) {
      set_rt16(from.rt16());
    }
    if (from.has_rt17()) {
      set_rt17(from.rt17());
    }
    if (from.has_rt18()) {
      set_rt18(from.rt18());
    }
    if (from.has_rt19()) {
      set_rt19(from.rt19());
    }
    if (from.has_rt20()) {
      set_rt20(from.rt20());
    }
    if (from.has_rt21()) {
      set_rt21(from.rt21());
    }
    if (from.has_iscancel()) {
      set_iscancel(from.iscancel());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_QueryOneEntrust_Req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_QueryOneEntrust_Req::CopyFrom(const INF_QueryOneEntrust_Req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_QueryOneEntrust_Req::IsInitialized() const {
  
  return true;
}

void INF_QueryOneEntrust_Req::Swap(INF_QueryOneEntrust_Req* other) {
  if (other != this) {
    std::swap(rt0_, other->rt0_);
    std::swap(localhost_, other->localhost_);
    std::swap(reqid_, other->reqid_);
    std::swap(funcid_, other->funcid_);
    std::swap(departmentid_, other->departmentid_);
    std::swap(rt5_, other->rt5_);
    std::swap(rt6_, other->rt6_);
    std::swap(customid_, other->customid_);
    std::swap(rt8_, other->rt8_);
    std::swap(rt9_, other->rt9_);
    std::swap(entrustserial_, other->entrustserial_);
    std::swap(rt11_, other->rt11_);
    std::swap(rt12_, other->rt12_);
    std::swap(rt13_, other->rt13_);
    std::swap(rt14_, other->rt14_);
    std::swap(entrusttype_, other->entrusttype_);
    std::swap(rt16_, other->rt16_);
    std::swap(rt17_, other->rt17_);
    std::swap(rt18_, other->rt18_);
    std::swap(rt19_, other->rt19_);
    std::swap(rt20_, other->rt20_);
    std::swap(rt21_, other->rt21_);
    std::swap(iscancel_, other->iscancel_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_QueryOneEntrust_Req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_QueryOneEntrust_Req_descriptor_;
  metadata.reflection = INF_QueryOneEntrust_Req_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_QueryCJMX_Req::kRT0FieldNumber;
const int INF_QueryCJMX_Req::kLocalhostFieldNumber;
const int INF_QueryCJMX_Req::kReqIDFieldNumber;
const int INF_QueryCJMX_Req::kFuncIDFieldNumber;
const int INF_QueryCJMX_Req::kDepartmentIDFieldNumber;
const int INF_QueryCJMX_Req::kRT5FieldNumber;
const int INF_QueryCJMX_Req::kRT6FieldNumber;
const int INF_QueryCJMX_Req::kCustomIDFieldNumber;
const int INF_QueryCJMX_Req::kRT8FieldNumber;
const int INF_QueryCJMX_Req::kRT9FieldNumber;
const int INF_QueryCJMX_Req::kDIRECTIONFieldNumber;
const int INF_QueryCJMX_Req::kCJMXmaxFieldNumber;
const int INF_QueryCJMX_Req::kCJMXmodeFieldNumber;
const int INF_QueryCJMX_Req::kQueryStartPosFieldNumber;
const int INF_QueryCJMX_Req::kEntrustTypeFieldNumber;
const int INF_QueryCJMX_Req::kQueryTypeFieldNumber;
#endif  // !_MSC_VER

INF_QueryCJMX_Req::INF_QueryCJMX_Req()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_QueryCJMX_Req::InitAsDefaultInstance() {
}

INF_QueryCJMX_Req::INF_QueryCJMX_Req(const INF_QueryCJMX_Req& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_QueryCJMX_Req::SharedCtor() {
  _cached_size_ = 0;
  rt0_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  localhost_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  reqid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  funcid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  departmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt5_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt6_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  customid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt8_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt9_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  direction_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cjmxmax_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cjmxmode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  querystartpos_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrusttype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  querytype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_QueryCJMX_Req::~INF_QueryCJMX_Req() {
  SharedDtor();
}

void INF_QueryCJMX_Req::SharedDtor() {
  if (rt0_ != &::google::protobuf::internal::kEmptyString) {
    delete rt0_;
  }
  if (localhost_ != &::google::protobuf::internal::kEmptyString) {
    delete localhost_;
  }
  if (reqid_ != &::google::protobuf::internal::kEmptyString) {
    delete reqid_;
  }
  if (funcid_ != &::google::protobuf::internal::kEmptyString) {
    delete funcid_;
  }
  if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
    delete departmentid_;
  }
  if (rt5_ != &::google::protobuf::internal::kEmptyString) {
    delete rt5_;
  }
  if (rt6_ != &::google::protobuf::internal::kEmptyString) {
    delete rt6_;
  }
  if (customid_ != &::google::protobuf::internal::kEmptyString) {
    delete customid_;
  }
  if (rt8_ != &::google::protobuf::internal::kEmptyString) {
    delete rt8_;
  }
  if (rt9_ != &::google::protobuf::internal::kEmptyString) {
    delete rt9_;
  }
  if (direction_ != &::google::protobuf::internal::kEmptyString) {
    delete direction_;
  }
  if (cjmxmax_ != &::google::protobuf::internal::kEmptyString) {
    delete cjmxmax_;
  }
  if (cjmxmode_ != &::google::protobuf::internal::kEmptyString) {
    delete cjmxmode_;
  }
  if (querystartpos_ != &::google::protobuf::internal::kEmptyString) {
    delete querystartpos_;
  }
  if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
    delete entrusttype_;
  }
  if (querytype_ != &::google::protobuf::internal::kEmptyString) {
    delete querytype_;
  }
  if (this != default_instance_) {
  }
}

void INF_QueryCJMX_Req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_QueryCJMX_Req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_QueryCJMX_Req_descriptor_;
}

const INF_QueryCJMX_Req& INF_QueryCJMX_Req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_QueryCJMX_Req* INF_QueryCJMX_Req::default_instance_ = NULL;

INF_QueryCJMX_Req* INF_QueryCJMX_Req::New() const {
  return new INF_QueryCJMX_Req;
}

void INF_QueryCJMX_Req::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_rt0()) {
      if (rt0_ != &::google::protobuf::internal::kEmptyString) {
        rt0_->clear();
      }
    }
    if (has_localhost()) {
      if (localhost_ != &::google::protobuf::internal::kEmptyString) {
        localhost_->clear();
      }
    }
    if (has_reqid()) {
      if (reqid_ != &::google::protobuf::internal::kEmptyString) {
        reqid_->clear();
      }
    }
    if (has_funcid()) {
      if (funcid_ != &::google::protobuf::internal::kEmptyString) {
        funcid_->clear();
      }
    }
    if (has_departmentid()) {
      if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
        departmentid_->clear();
      }
    }
    if (has_rt5()) {
      if (rt5_ != &::google::protobuf::internal::kEmptyString) {
        rt5_->clear();
      }
    }
    if (has_rt6()) {
      if (rt6_ != &::google::protobuf::internal::kEmptyString) {
        rt6_->clear();
      }
    }
    if (has_customid()) {
      if (customid_ != &::google::protobuf::internal::kEmptyString) {
        customid_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_rt8()) {
      if (rt8_ != &::google::protobuf::internal::kEmptyString) {
        rt8_->clear();
      }
    }
    if (has_rt9()) {
      if (rt9_ != &::google::protobuf::internal::kEmptyString) {
        rt9_->clear();
      }
    }
    if (has_direction()) {
      if (direction_ != &::google::protobuf::internal::kEmptyString) {
        direction_->clear();
      }
    }
    if (has_cjmxmax()) {
      if (cjmxmax_ != &::google::protobuf::internal::kEmptyString) {
        cjmxmax_->clear();
      }
    }
    if (has_cjmxmode()) {
      if (cjmxmode_ != &::google::protobuf::internal::kEmptyString) {
        cjmxmode_->clear();
      }
    }
    if (has_querystartpos()) {
      if (querystartpos_ != &::google::protobuf::internal::kEmptyString) {
        querystartpos_->clear();
      }
    }
    if (has_entrusttype()) {
      if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
        entrusttype_->clear();
      }
    }
    if (has_querytype()) {
      if (querytype_ != &::google::protobuf::internal::kEmptyString) {
        querytype_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_QueryCJMX_Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string RT0 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt0()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt0().data(), this->rt0().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Localhost;
        break;
      }
      
      // optional string Localhost = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Localhost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localhost()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->localhost().data(), this->localhost().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_ReqID;
        break;
      }
      
      // optional string ReqID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ReqID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reqid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->reqid().data(), this->reqid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_FuncID;
        break;
      }
      
      // optional string FuncID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_FuncID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_funcid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->funcid().data(), this->funcid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_DepartmentID;
        break;
      }
      
      // optional string DepartmentID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DepartmentID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_departmentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->departmentid().data(), this->departmentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_RT5;
        break;
      }
      
      // optional string RT5 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt5().data(), this->rt5().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_RT6;
        break;
      }
      
      // optional string RT6 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT6:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt6()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt6().data(), this->rt6().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_CustomID;
        break;
      }
      
      // optional string CustomID = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CustomID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->customid().data(), this->customid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_RT8;
        break;
      }
      
      // optional string RT8 = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT8:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt8()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt8().data(), this->rt8().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_RT9;
        break;
      }
      
      // optional string RT9 = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT9:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt9()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt9().data(), this->rt9().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_DIRECTION;
        break;
      }
      
      // optional string DIRECTION = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DIRECTION:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_direction()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->direction().data(), this->direction().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_CJMXmax;
        break;
      }
      
      // optional string CJMXmax = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CJMXmax:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cjmxmax()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cjmxmax().data(), this->cjmxmax().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_CJMXmode;
        break;
      }
      
      // optional string CJMXmode = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CJMXmode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cjmxmode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cjmxmode().data(), this->cjmxmode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_QueryStartPos;
        break;
      }
      
      // optional string QueryStartPos = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_QueryStartPos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_querystartpos()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->querystartpos().data(), this->querystartpos().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_EntrustType;
        break;
      }
      
      // optional string EntrustType = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrusttype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrusttype().data(), this->entrusttype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_QueryType;
        break;
      }
      
      // optional string QueryType = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_QueryType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_querytype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->querytype().data(), this->querytype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_QueryCJMX_Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->rt0(), output);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->localhost(), output);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->reqid(), output);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->funcid(), output);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->departmentid(), output);
  }
  
  // optional string RT5 = 6;
  if (has_rt5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt5().data(), this->rt5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->rt5(), output);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->rt6(), output);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->customid(), output);
  }
  
  // optional string RT8 = 9;
  if (has_rt8()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt8().data(), this->rt8().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->rt8(), output);
  }
  
  // optional string RT9 = 10;
  if (has_rt9()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt9().data(), this->rt9().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->rt9(), output);
  }
  
  // optional string DIRECTION = 11;
  if (has_direction()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->direction().data(), this->direction().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->direction(), output);
  }
  
  // optional string CJMXmax = 12;
  if (has_cjmxmax()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjmxmax().data(), this->cjmxmax().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->cjmxmax(), output);
  }
  
  // optional string CJMXmode = 13;
  if (has_cjmxmode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjmxmode().data(), this->cjmxmode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->cjmxmode(), output);
  }
  
  // optional string QueryStartPos = 14;
  if (has_querystartpos()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->querystartpos().data(), this->querystartpos().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->querystartpos(), output);
  }
  
  // optional string EntrustType = 15;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->entrusttype(), output);
  }
  
  // optional string QueryType = 16;
  if (has_querytype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->querytype().data(), this->querytype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->querytype(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_QueryCJMX_Req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rt0(), target);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->localhost(), target);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reqid(), target);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->funcid(), target);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->departmentid(), target);
  }
  
  // optional string RT5 = 6;
  if (has_rt5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt5().data(), this->rt5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->rt5(), target);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->rt6(), target);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->customid(), target);
  }
  
  // optional string RT8 = 9;
  if (has_rt8()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt8().data(), this->rt8().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->rt8(), target);
  }
  
  // optional string RT9 = 10;
  if (has_rt9()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt9().data(), this->rt9().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->rt9(), target);
  }
  
  // optional string DIRECTION = 11;
  if (has_direction()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->direction().data(), this->direction().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->direction(), target);
  }
  
  // optional string CJMXmax = 12;
  if (has_cjmxmax()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjmxmax().data(), this->cjmxmax().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->cjmxmax(), target);
  }
  
  // optional string CJMXmode = 13;
  if (has_cjmxmode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjmxmode().data(), this->cjmxmode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->cjmxmode(), target);
  }
  
  // optional string QueryStartPos = 14;
  if (has_querystartpos()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->querystartpos().data(), this->querystartpos().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->querystartpos(), target);
  }
  
  // optional string EntrustType = 15;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->entrusttype(), target);
  }
  
  // optional string QueryType = 16;
  if (has_querytype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->querytype().data(), this->querytype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->querytype(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_QueryCJMX_Req::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string RT0 = 1;
    if (has_rt0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt0());
    }
    
    // optional string Localhost = 2;
    if (has_localhost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localhost());
    }
    
    // optional string ReqID = 3;
    if (has_reqid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reqid());
    }
    
    // optional string FuncID = 4;
    if (has_funcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->funcid());
    }
    
    // optional string DepartmentID = 5;
    if (has_departmentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->departmentid());
    }
    
    // optional string RT5 = 6;
    if (has_rt5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt5());
    }
    
    // optional string RT6 = 7;
    if (has_rt6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt6());
    }
    
    // optional string CustomID = 8;
    if (has_customid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->customid());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string RT8 = 9;
    if (has_rt8()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt8());
    }
    
    // optional string RT9 = 10;
    if (has_rt9()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt9());
    }
    
    // optional string DIRECTION = 11;
    if (has_direction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->direction());
    }
    
    // optional string CJMXmax = 12;
    if (has_cjmxmax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cjmxmax());
    }
    
    // optional string CJMXmode = 13;
    if (has_cjmxmode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cjmxmode());
    }
    
    // optional string QueryStartPos = 14;
    if (has_querystartpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->querystartpos());
    }
    
    // optional string EntrustType = 15;
    if (has_entrusttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrusttype());
    }
    
    // optional string QueryType = 16;
    if (has_querytype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->querytype());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_QueryCJMX_Req::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_QueryCJMX_Req* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_QueryCJMX_Req*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_QueryCJMX_Req::MergeFrom(const INF_QueryCJMX_Req& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rt0()) {
      set_rt0(from.rt0());
    }
    if (from.has_localhost()) {
      set_localhost(from.localhost());
    }
    if (from.has_reqid()) {
      set_reqid(from.reqid());
    }
    if (from.has_funcid()) {
      set_funcid(from.funcid());
    }
    if (from.has_departmentid()) {
      set_departmentid(from.departmentid());
    }
    if (from.has_rt5()) {
      set_rt5(from.rt5());
    }
    if (from.has_rt6()) {
      set_rt6(from.rt6());
    }
    if (from.has_customid()) {
      set_customid(from.customid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_rt8()) {
      set_rt8(from.rt8());
    }
    if (from.has_rt9()) {
      set_rt9(from.rt9());
    }
    if (from.has_direction()) {
      set_direction(from.direction());
    }
    if (from.has_cjmxmax()) {
      set_cjmxmax(from.cjmxmax());
    }
    if (from.has_cjmxmode()) {
      set_cjmxmode(from.cjmxmode());
    }
    if (from.has_querystartpos()) {
      set_querystartpos(from.querystartpos());
    }
    if (from.has_entrusttype()) {
      set_entrusttype(from.entrusttype());
    }
    if (from.has_querytype()) {
      set_querytype(from.querytype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_QueryCJMX_Req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_QueryCJMX_Req::CopyFrom(const INF_QueryCJMX_Req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_QueryCJMX_Req::IsInitialized() const {
  
  return true;
}

void INF_QueryCJMX_Req::Swap(INF_QueryCJMX_Req* other) {
  if (other != this) {
    std::swap(rt0_, other->rt0_);
    std::swap(localhost_, other->localhost_);
    std::swap(reqid_, other->reqid_);
    std::swap(funcid_, other->funcid_);
    std::swap(departmentid_, other->departmentid_);
    std::swap(rt5_, other->rt5_);
    std::swap(rt6_, other->rt6_);
    std::swap(customid_, other->customid_);
    std::swap(rt8_, other->rt8_);
    std::swap(rt9_, other->rt9_);
    std::swap(direction_, other->direction_);
    std::swap(cjmxmax_, other->cjmxmax_);
    std::swap(cjmxmode_, other->cjmxmode_);
    std::swap(querystartpos_, other->querystartpos_);
    std::swap(entrusttype_, other->entrusttype_);
    std::swap(querytype_, other->querytype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_QueryCJMX_Req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_QueryCJMX_Req_descriptor_;
  metadata.reflection = INF_QueryCJMX_Req_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_QueryPosition_Req::kRT0FieldNumber;
const int INF_QueryPosition_Req::kLocalhostFieldNumber;
const int INF_QueryPosition_Req::kReqIDFieldNumber;
const int INF_QueryPosition_Req::kFuncIDFieldNumber;
const int INF_QueryPosition_Req::kDepartmentIDFieldNumber;
const int INF_QueryPosition_Req::kRT5FieldNumber;
const int INF_QueryPosition_Req::kRT6FieldNumber;
const int INF_QueryPosition_Req::kCustomIDFieldNumber;
const int INF_QueryPosition_Req::kRT8FieldNumber;
const int INF_QueryPosition_Req::kSecurityCodeFieldNumber;
const int INF_QueryPosition_Req::kRT10FieldNumber;
const int INF_QueryPosition_Req::kRT11FieldNumber;
const int INF_QueryPosition_Req::kRT12FieldNumber;
const int INF_QueryPosition_Req::kRT13FieldNumber;
const int INF_QueryPosition_Req::kRT14FieldNumber;
const int INF_QueryPosition_Req::kOperateFuncFieldNumber;
const int INF_QueryPosition_Req::kEntrustTypeFieldNumber;
const int INF_QueryPosition_Req::kRT17FieldNumber;
const int INF_QueryPosition_Req::kRT18FieldNumber;
const int INF_QueryPosition_Req::kRT19FieldNumber;
#endif  // !_MSC_VER

INF_QueryPosition_Req::INF_QueryPosition_Req()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_QueryPosition_Req::InitAsDefaultInstance() {
}

INF_QueryPosition_Req::INF_QueryPosition_Req(const INF_QueryPosition_Req& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_QueryPosition_Req::SharedCtor() {
  _cached_size_ = 0;
  rt0_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  localhost_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  reqid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  funcid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  departmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt5_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt6_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  customid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt8_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  securitycode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt10_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt11_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt12_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt13_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt14_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  operatefunc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrusttype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt17_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt18_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt19_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_QueryPosition_Req::~INF_QueryPosition_Req() {
  SharedDtor();
}

void INF_QueryPosition_Req::SharedDtor() {
  if (rt0_ != &::google::protobuf::internal::kEmptyString) {
    delete rt0_;
  }
  if (localhost_ != &::google::protobuf::internal::kEmptyString) {
    delete localhost_;
  }
  if (reqid_ != &::google::protobuf::internal::kEmptyString) {
    delete reqid_;
  }
  if (funcid_ != &::google::protobuf::internal::kEmptyString) {
    delete funcid_;
  }
  if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
    delete departmentid_;
  }
  if (rt5_ != &::google::protobuf::internal::kEmptyString) {
    delete rt5_;
  }
  if (rt6_ != &::google::protobuf::internal::kEmptyString) {
    delete rt6_;
  }
  if (customid_ != &::google::protobuf::internal::kEmptyString) {
    delete customid_;
  }
  if (rt8_ != &::google::protobuf::internal::kEmptyString) {
    delete rt8_;
  }
  if (securitycode_ != &::google::protobuf::internal::kEmptyString) {
    delete securitycode_;
  }
  if (rt10_ != &::google::protobuf::internal::kEmptyString) {
    delete rt10_;
  }
  if (rt11_ != &::google::protobuf::internal::kEmptyString) {
    delete rt11_;
  }
  if (rt12_ != &::google::protobuf::internal::kEmptyString) {
    delete rt12_;
  }
  if (rt13_ != &::google::protobuf::internal::kEmptyString) {
    delete rt13_;
  }
  if (rt14_ != &::google::protobuf::internal::kEmptyString) {
    delete rt14_;
  }
  if (operatefunc_ != &::google::protobuf::internal::kEmptyString) {
    delete operatefunc_;
  }
  if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
    delete entrusttype_;
  }
  if (rt17_ != &::google::protobuf::internal::kEmptyString) {
    delete rt17_;
  }
  if (rt18_ != &::google::protobuf::internal::kEmptyString) {
    delete rt18_;
  }
  if (rt19_ != &::google::protobuf::internal::kEmptyString) {
    delete rt19_;
  }
  if (this != default_instance_) {
  }
}

void INF_QueryPosition_Req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_QueryPosition_Req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_QueryPosition_Req_descriptor_;
}

const INF_QueryPosition_Req& INF_QueryPosition_Req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_QueryPosition_Req* INF_QueryPosition_Req::default_instance_ = NULL;

INF_QueryPosition_Req* INF_QueryPosition_Req::New() const {
  return new INF_QueryPosition_Req;
}

void INF_QueryPosition_Req::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_rt0()) {
      if (rt0_ != &::google::protobuf::internal::kEmptyString) {
        rt0_->clear();
      }
    }
    if (has_localhost()) {
      if (localhost_ != &::google::protobuf::internal::kEmptyString) {
        localhost_->clear();
      }
    }
    if (has_reqid()) {
      if (reqid_ != &::google::protobuf::internal::kEmptyString) {
        reqid_->clear();
      }
    }
    if (has_funcid()) {
      if (funcid_ != &::google::protobuf::internal::kEmptyString) {
        funcid_->clear();
      }
    }
    if (has_departmentid()) {
      if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
        departmentid_->clear();
      }
    }
    if (has_rt5()) {
      if (rt5_ != &::google::protobuf::internal::kEmptyString) {
        rt5_->clear();
      }
    }
    if (has_rt6()) {
      if (rt6_ != &::google::protobuf::internal::kEmptyString) {
        rt6_->clear();
      }
    }
    if (has_customid()) {
      if (customid_ != &::google::protobuf::internal::kEmptyString) {
        customid_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_rt8()) {
      if (rt8_ != &::google::protobuf::internal::kEmptyString) {
        rt8_->clear();
      }
    }
    if (has_securitycode()) {
      if (securitycode_ != &::google::protobuf::internal::kEmptyString) {
        securitycode_->clear();
      }
    }
    if (has_rt10()) {
      if (rt10_ != &::google::protobuf::internal::kEmptyString) {
        rt10_->clear();
      }
    }
    if (has_rt11()) {
      if (rt11_ != &::google::protobuf::internal::kEmptyString) {
        rt11_->clear();
      }
    }
    if (has_rt12()) {
      if (rt12_ != &::google::protobuf::internal::kEmptyString) {
        rt12_->clear();
      }
    }
    if (has_rt13()) {
      if (rt13_ != &::google::protobuf::internal::kEmptyString) {
        rt13_->clear();
      }
    }
    if (has_rt14()) {
      if (rt14_ != &::google::protobuf::internal::kEmptyString) {
        rt14_->clear();
      }
    }
    if (has_operatefunc()) {
      if (operatefunc_ != &::google::protobuf::internal::kEmptyString) {
        operatefunc_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_entrusttype()) {
      if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
        entrusttype_->clear();
      }
    }
    if (has_rt17()) {
      if (rt17_ != &::google::protobuf::internal::kEmptyString) {
        rt17_->clear();
      }
    }
    if (has_rt18()) {
      if (rt18_ != &::google::protobuf::internal::kEmptyString) {
        rt18_->clear();
      }
    }
    if (has_rt19()) {
      if (rt19_ != &::google::protobuf::internal::kEmptyString) {
        rt19_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_QueryPosition_Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string RT0 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt0()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt0().data(), this->rt0().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Localhost;
        break;
      }
      
      // optional string Localhost = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Localhost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localhost()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->localhost().data(), this->localhost().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_ReqID;
        break;
      }
      
      // optional string ReqID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ReqID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reqid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->reqid().data(), this->reqid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_FuncID;
        break;
      }
      
      // optional string FuncID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_FuncID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_funcid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->funcid().data(), this->funcid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_DepartmentID;
        break;
      }
      
      // optional string DepartmentID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DepartmentID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_departmentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->departmentid().data(), this->departmentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_RT5;
        break;
      }
      
      // optional string RT5 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt5().data(), this->rt5().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_RT6;
        break;
      }
      
      // optional string RT6 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT6:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt6()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt6().data(), this->rt6().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_CustomID;
        break;
      }
      
      // optional string CustomID = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CustomID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->customid().data(), this->customid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_RT8;
        break;
      }
      
      // optional string RT8 = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT8:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt8()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt8().data(), this->rt8().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_SecurityCode;
        break;
      }
      
      // optional string SecurityCode = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SecurityCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_securitycode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->securitycode().data(), this->securitycode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_RT10;
        break;
      }
      
      // optional string RT10 = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT10:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt10()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt10().data(), this->rt10().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_RT11;
        break;
      }
      
      // optional string RT11 = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT11:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt11()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt11().data(), this->rt11().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_RT12;
        break;
      }
      
      // optional string RT12 = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT12:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt12()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt12().data(), this->rt12().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_RT13;
        break;
      }
      
      // optional string RT13 = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT13:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt13()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt13().data(), this->rt13().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_RT14;
        break;
      }
      
      // optional string RT14 = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT14:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt14()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt14().data(), this->rt14().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_OperateFunc;
        break;
      }
      
      // optional string OperateFunc = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OperateFunc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operatefunc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->operatefunc().data(), this->operatefunc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_EntrustType;
        break;
      }
      
      // optional string EntrustType = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrusttype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrusttype().data(), this->entrusttype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_RT17;
        break;
      }
      
      // optional string RT17 = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT17:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt17()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt17().data(), this->rt17().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_RT18;
        break;
      }
      
      // optional string RT18 = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT18:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt18()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt18().data(), this->rt18().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_RT19;
        break;
      }
      
      // optional string RT19 = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT19:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt19()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt19().data(), this->rt19().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_QueryPosition_Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->rt0(), output);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->localhost(), output);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->reqid(), output);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->funcid(), output);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->departmentid(), output);
  }
  
  // optional string RT5 = 6;
  if (has_rt5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt5().data(), this->rt5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->rt5(), output);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->rt6(), output);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->customid(), output);
  }
  
  // optional string RT8 = 9;
  if (has_rt8()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt8().data(), this->rt8().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->rt8(), output);
  }
  
  // optional string SecurityCode = 10;
  if (has_securitycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitycode().data(), this->securitycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->securitycode(), output);
  }
  
  // optional string RT10 = 11;
  if (has_rt10()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt10().data(), this->rt10().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->rt10(), output);
  }
  
  // optional string RT11 = 12;
  if (has_rt11()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt11().data(), this->rt11().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->rt11(), output);
  }
  
  // optional string RT12 = 13;
  if (has_rt12()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt12().data(), this->rt12().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->rt12(), output);
  }
  
  // optional string RT13 = 14;
  if (has_rt13()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt13().data(), this->rt13().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->rt13(), output);
  }
  
  // optional string RT14 = 15;
  if (has_rt14()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt14().data(), this->rt14().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->rt14(), output);
  }
  
  // optional string OperateFunc = 16;
  if (has_operatefunc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->operatefunc().data(), this->operatefunc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->operatefunc(), output);
  }
  
  // optional string EntrustType = 17;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->entrusttype(), output);
  }
  
  // optional string RT17 = 18;
  if (has_rt17()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt17().data(), this->rt17().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->rt17(), output);
  }
  
  // optional string RT18 = 19;
  if (has_rt18()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt18().data(), this->rt18().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->rt18(), output);
  }
  
  // optional string RT19 = 20;
  if (has_rt19()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt19().data(), this->rt19().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->rt19(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_QueryPosition_Req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rt0(), target);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->localhost(), target);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reqid(), target);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->funcid(), target);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->departmentid(), target);
  }
  
  // optional string RT5 = 6;
  if (has_rt5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt5().data(), this->rt5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->rt5(), target);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->rt6(), target);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->customid(), target);
  }
  
  // optional string RT8 = 9;
  if (has_rt8()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt8().data(), this->rt8().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->rt8(), target);
  }
  
  // optional string SecurityCode = 10;
  if (has_securitycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitycode().data(), this->securitycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->securitycode(), target);
  }
  
  // optional string RT10 = 11;
  if (has_rt10()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt10().data(), this->rt10().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->rt10(), target);
  }
  
  // optional string RT11 = 12;
  if (has_rt11()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt11().data(), this->rt11().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->rt11(), target);
  }
  
  // optional string RT12 = 13;
  if (has_rt12()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt12().data(), this->rt12().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->rt12(), target);
  }
  
  // optional string RT13 = 14;
  if (has_rt13()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt13().data(), this->rt13().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->rt13(), target);
  }
  
  // optional string RT14 = 15;
  if (has_rt14()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt14().data(), this->rt14().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->rt14(), target);
  }
  
  // optional string OperateFunc = 16;
  if (has_operatefunc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->operatefunc().data(), this->operatefunc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->operatefunc(), target);
  }
  
  // optional string EntrustType = 17;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->entrusttype(), target);
  }
  
  // optional string RT17 = 18;
  if (has_rt17()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt17().data(), this->rt17().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->rt17(), target);
  }
  
  // optional string RT18 = 19;
  if (has_rt18()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt18().data(), this->rt18().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->rt18(), target);
  }
  
  // optional string RT19 = 20;
  if (has_rt19()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt19().data(), this->rt19().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->rt19(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_QueryPosition_Req::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string RT0 = 1;
    if (has_rt0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt0());
    }
    
    // optional string Localhost = 2;
    if (has_localhost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localhost());
    }
    
    // optional string ReqID = 3;
    if (has_reqid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reqid());
    }
    
    // optional string FuncID = 4;
    if (has_funcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->funcid());
    }
    
    // optional string DepartmentID = 5;
    if (has_departmentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->departmentid());
    }
    
    // optional string RT5 = 6;
    if (has_rt5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt5());
    }
    
    // optional string RT6 = 7;
    if (has_rt6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt6());
    }
    
    // optional string CustomID = 8;
    if (has_customid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->customid());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string RT8 = 9;
    if (has_rt8()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt8());
    }
    
    // optional string SecurityCode = 10;
    if (has_securitycode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->securitycode());
    }
    
    // optional string RT10 = 11;
    if (has_rt10()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt10());
    }
    
    // optional string RT11 = 12;
    if (has_rt11()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt11());
    }
    
    // optional string RT12 = 13;
    if (has_rt12()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt12());
    }
    
    // optional string RT13 = 14;
    if (has_rt13()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt13());
    }
    
    // optional string RT14 = 15;
    if (has_rt14()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt14());
    }
    
    // optional string OperateFunc = 16;
    if (has_operatefunc()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->operatefunc());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string EntrustType = 17;
    if (has_entrusttype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrusttype());
    }
    
    // optional string RT17 = 18;
    if (has_rt17()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt17());
    }
    
    // optional string RT18 = 19;
    if (has_rt18()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt18());
    }
    
    // optional string RT19 = 20;
    if (has_rt19()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt19());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_QueryPosition_Req::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_QueryPosition_Req* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_QueryPosition_Req*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_QueryPosition_Req::MergeFrom(const INF_QueryPosition_Req& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rt0()) {
      set_rt0(from.rt0());
    }
    if (from.has_localhost()) {
      set_localhost(from.localhost());
    }
    if (from.has_reqid()) {
      set_reqid(from.reqid());
    }
    if (from.has_funcid()) {
      set_funcid(from.funcid());
    }
    if (from.has_departmentid()) {
      set_departmentid(from.departmentid());
    }
    if (from.has_rt5()) {
      set_rt5(from.rt5());
    }
    if (from.has_rt6()) {
      set_rt6(from.rt6());
    }
    if (from.has_customid()) {
      set_customid(from.customid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_rt8()) {
      set_rt8(from.rt8());
    }
    if (from.has_securitycode()) {
      set_securitycode(from.securitycode());
    }
    if (from.has_rt10()) {
      set_rt10(from.rt10());
    }
    if (from.has_rt11()) {
      set_rt11(from.rt11());
    }
    if (from.has_rt12()) {
      set_rt12(from.rt12());
    }
    if (from.has_rt13()) {
      set_rt13(from.rt13());
    }
    if (from.has_rt14()) {
      set_rt14(from.rt14());
    }
    if (from.has_operatefunc()) {
      set_operatefunc(from.operatefunc());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_entrusttype()) {
      set_entrusttype(from.entrusttype());
    }
    if (from.has_rt17()) {
      set_rt17(from.rt17());
    }
    if (from.has_rt18()) {
      set_rt18(from.rt18());
    }
    if (from.has_rt19()) {
      set_rt19(from.rt19());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_QueryPosition_Req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_QueryPosition_Req::CopyFrom(const INF_QueryPosition_Req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_QueryPosition_Req::IsInitialized() const {
  
  return true;
}

void INF_QueryPosition_Req::Swap(INF_QueryPosition_Req* other) {
  if (other != this) {
    std::swap(rt0_, other->rt0_);
    std::swap(localhost_, other->localhost_);
    std::swap(reqid_, other->reqid_);
    std::swap(funcid_, other->funcid_);
    std::swap(departmentid_, other->departmentid_);
    std::swap(rt5_, other->rt5_);
    std::swap(rt6_, other->rt6_);
    std::swap(customid_, other->customid_);
    std::swap(rt8_, other->rt8_);
    std::swap(securitycode_, other->securitycode_);
    std::swap(rt10_, other->rt10_);
    std::swap(rt11_, other->rt11_);
    std::swap(rt12_, other->rt12_);
    std::swap(rt13_, other->rt13_);
    std::swap(rt14_, other->rt14_);
    std::swap(operatefunc_, other->operatefunc_);
    std::swap(entrusttype_, other->entrusttype_);
    std::swap(rt17_, other->rt17_);
    std::swap(rt18_, other->rt18_);
    std::swap(rt19_, other->rt19_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_QueryPosition_Req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_QueryPosition_Req_descriptor_;
  metadata.reflection = INF_QueryPosition_Req_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_QueryETFbaseInfo_Req::kRT0FieldNumber;
const int INF_QueryETFbaseInfo_Req::kLocalhostFieldNumber;
const int INF_QueryETFbaseInfo_Req::kReqIDFieldNumber;
const int INF_QueryETFbaseInfo_Req::kFuncIDFieldNumber;
const int INF_QueryETFbaseInfo_Req::kDepartmentIDFieldNumber;
const int INF_QueryETFbaseInfo_Req::kMarketIDFieldNumber;
const int INF_QueryETFbaseInfo_Req::kRT6FieldNumber;
const int INF_QueryETFbaseInfo_Req::kCustomIDFieldNumber;
const int INF_QueryETFbaseInfo_Req::kSecurityCodeFieldNumber;
const int INF_QueryETFbaseInfo_Req::kEntrustTypeFieldNumber;
#endif  // !_MSC_VER

INF_QueryETFbaseInfo_Req::INF_QueryETFbaseInfo_Req()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_QueryETFbaseInfo_Req::InitAsDefaultInstance() {
}

INF_QueryETFbaseInfo_Req::INF_QueryETFbaseInfo_Req(const INF_QueryETFbaseInfo_Req& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_QueryETFbaseInfo_Req::SharedCtor() {
  _cached_size_ = 0;
  rt0_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  localhost_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  reqid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  funcid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  departmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  marketid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt6_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  customid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  securitycode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrusttype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_QueryETFbaseInfo_Req::~INF_QueryETFbaseInfo_Req() {
  SharedDtor();
}

void INF_QueryETFbaseInfo_Req::SharedDtor() {
  if (rt0_ != &::google::protobuf::internal::kEmptyString) {
    delete rt0_;
  }
  if (localhost_ != &::google::protobuf::internal::kEmptyString) {
    delete localhost_;
  }
  if (reqid_ != &::google::protobuf::internal::kEmptyString) {
    delete reqid_;
  }
  if (funcid_ != &::google::protobuf::internal::kEmptyString) {
    delete funcid_;
  }
  if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
    delete departmentid_;
  }
  if (marketid_ != &::google::protobuf::internal::kEmptyString) {
    delete marketid_;
  }
  if (rt6_ != &::google::protobuf::internal::kEmptyString) {
    delete rt6_;
  }
  if (customid_ != &::google::protobuf::internal::kEmptyString) {
    delete customid_;
  }
  if (securitycode_ != &::google::protobuf::internal::kEmptyString) {
    delete securitycode_;
  }
  if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
    delete entrusttype_;
  }
  if (this != default_instance_) {
  }
}

void INF_QueryETFbaseInfo_Req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_QueryETFbaseInfo_Req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_QueryETFbaseInfo_Req_descriptor_;
}

const INF_QueryETFbaseInfo_Req& INF_QueryETFbaseInfo_Req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_QueryETFbaseInfo_Req* INF_QueryETFbaseInfo_Req::default_instance_ = NULL;

INF_QueryETFbaseInfo_Req* INF_QueryETFbaseInfo_Req::New() const {
  return new INF_QueryETFbaseInfo_Req;
}

void INF_QueryETFbaseInfo_Req::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_rt0()) {
      if (rt0_ != &::google::protobuf::internal::kEmptyString) {
        rt0_->clear();
      }
    }
    if (has_localhost()) {
      if (localhost_ != &::google::protobuf::internal::kEmptyString) {
        localhost_->clear();
      }
    }
    if (has_reqid()) {
      if (reqid_ != &::google::protobuf::internal::kEmptyString) {
        reqid_->clear();
      }
    }
    if (has_funcid()) {
      if (funcid_ != &::google::protobuf::internal::kEmptyString) {
        funcid_->clear();
      }
    }
    if (has_departmentid()) {
      if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
        departmentid_->clear();
      }
    }
    if (has_marketid()) {
      if (marketid_ != &::google::protobuf::internal::kEmptyString) {
        marketid_->clear();
      }
    }
    if (has_rt6()) {
      if (rt6_ != &::google::protobuf::internal::kEmptyString) {
        rt6_->clear();
      }
    }
    if (has_customid()) {
      if (customid_ != &::google::protobuf::internal::kEmptyString) {
        customid_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_securitycode()) {
      if (securitycode_ != &::google::protobuf::internal::kEmptyString) {
        securitycode_->clear();
      }
    }
    if (has_entrusttype()) {
      if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
        entrusttype_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_QueryETFbaseInfo_Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string RT0 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt0()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt0().data(), this->rt0().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Localhost;
        break;
      }
      
      // optional string Localhost = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Localhost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localhost()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->localhost().data(), this->localhost().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_ReqID;
        break;
      }
      
      // optional string ReqID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ReqID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reqid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->reqid().data(), this->reqid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_FuncID;
        break;
      }
      
      // optional string FuncID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_FuncID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_funcid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->funcid().data(), this->funcid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_DepartmentID;
        break;
      }
      
      // optional string DepartmentID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DepartmentID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_departmentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->departmentid().data(), this->departmentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_MarketID;
        break;
      }
      
      // optional string MarketID = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_MarketID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_marketid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->marketid().data(), this->marketid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_RT6;
        break;
      }
      
      // optional string RT6 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT6:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt6()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt6().data(), this->rt6().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_CustomID;
        break;
      }
      
      // optional string CustomID = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CustomID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->customid().data(), this->customid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_SecurityCode;
        break;
      }
      
      // optional string SecurityCode = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SecurityCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_securitycode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->securitycode().data(), this->securitycode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_EntrustType;
        break;
      }
      
      // optional string EntrustType = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrusttype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrusttype().data(), this->entrusttype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_QueryETFbaseInfo_Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->rt0(), output);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->localhost(), output);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->reqid(), output);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->funcid(), output);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->departmentid(), output);
  }
  
  // optional string MarketID = 6;
  if (has_marketid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketid().data(), this->marketid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->marketid(), output);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->rt6(), output);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->customid(), output);
  }
  
  // optional string SecurityCode = 9;
  if (has_securitycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitycode().data(), this->securitycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->securitycode(), output);
  }
  
  // optional string EntrustType = 10;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->entrusttype(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_QueryETFbaseInfo_Req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rt0(), target);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->localhost(), target);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reqid(), target);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->funcid(), target);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->departmentid(), target);
  }
  
  // optional string MarketID = 6;
  if (has_marketid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketid().data(), this->marketid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->marketid(), target);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->rt6(), target);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->customid(), target);
  }
  
  // optional string SecurityCode = 9;
  if (has_securitycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitycode().data(), this->securitycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->securitycode(), target);
  }
  
  // optional string EntrustType = 10;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->entrusttype(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_QueryETFbaseInfo_Req::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string RT0 = 1;
    if (has_rt0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt0());
    }
    
    // optional string Localhost = 2;
    if (has_localhost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localhost());
    }
    
    // optional string ReqID = 3;
    if (has_reqid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reqid());
    }
    
    // optional string FuncID = 4;
    if (has_funcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->funcid());
    }
    
    // optional string DepartmentID = 5;
    if (has_departmentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->departmentid());
    }
    
    // optional string MarketID = 6;
    if (has_marketid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->marketid());
    }
    
    // optional string RT6 = 7;
    if (has_rt6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt6());
    }
    
    // optional string CustomID = 8;
    if (has_customid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->customid());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string SecurityCode = 9;
    if (has_securitycode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->securitycode());
    }
    
    // optional string EntrustType = 10;
    if (has_entrusttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrusttype());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_QueryETFbaseInfo_Req::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_QueryETFbaseInfo_Req* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_QueryETFbaseInfo_Req*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_QueryETFbaseInfo_Req::MergeFrom(const INF_QueryETFbaseInfo_Req& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rt0()) {
      set_rt0(from.rt0());
    }
    if (from.has_localhost()) {
      set_localhost(from.localhost());
    }
    if (from.has_reqid()) {
      set_reqid(from.reqid());
    }
    if (from.has_funcid()) {
      set_funcid(from.funcid());
    }
    if (from.has_departmentid()) {
      set_departmentid(from.departmentid());
    }
    if (from.has_marketid()) {
      set_marketid(from.marketid());
    }
    if (from.has_rt6()) {
      set_rt6(from.rt6());
    }
    if (from.has_customid()) {
      set_customid(from.customid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_securitycode()) {
      set_securitycode(from.securitycode());
    }
    if (from.has_entrusttype()) {
      set_entrusttype(from.entrusttype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_QueryETFbaseInfo_Req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_QueryETFbaseInfo_Req::CopyFrom(const INF_QueryETFbaseInfo_Req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_QueryETFbaseInfo_Req::IsInitialized() const {
  
  return true;
}

void INF_QueryETFbaseInfo_Req::Swap(INF_QueryETFbaseInfo_Req* other) {
  if (other != this) {
    std::swap(rt0_, other->rt0_);
    std::swap(localhost_, other->localhost_);
    std::swap(reqid_, other->reqid_);
    std::swap(funcid_, other->funcid_);
    std::swap(departmentid_, other->departmentid_);
    std::swap(marketid_, other->marketid_);
    std::swap(rt6_, other->rt6_);
    std::swap(customid_, other->customid_);
    std::swap(securitycode_, other->securitycode_);
    std::swap(entrusttype_, other->entrusttype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_QueryETFbaseInfo_Req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_QueryETFbaseInfo_Req_descriptor_;
  metadata.reflection = INF_QueryETFbaseInfo_Req_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_QueryETFlistInfo_Req::kRT0FieldNumber;
const int INF_QueryETFlistInfo_Req::kLocalhostFieldNumber;
const int INF_QueryETFlistInfo_Req::kReqIDFieldNumber;
const int INF_QueryETFlistInfo_Req::kFuncIDFieldNumber;
const int INF_QueryETFlistInfo_Req::kDepartmentIDFieldNumber;
const int INF_QueryETFlistInfo_Req::kMarketIDFieldNumber;
const int INF_QueryETFlistInfo_Req::kRT6FieldNumber;
const int INF_QueryETFlistInfo_Req::kCustomIDFieldNumber;
const int INF_QueryETFlistInfo_Req::kSecurityCodeFieldNumber;
const int INF_QueryETFlistInfo_Req::kSortTypeFieldNumber;
const int INF_QueryETFlistInfo_Req::kEntrustTypeFieldNumber;
#endif  // !_MSC_VER

INF_QueryETFlistInfo_Req::INF_QueryETFlistInfo_Req()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_QueryETFlistInfo_Req::InitAsDefaultInstance() {
}

INF_QueryETFlistInfo_Req::INF_QueryETFlistInfo_Req(const INF_QueryETFlistInfo_Req& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_QueryETFlistInfo_Req::SharedCtor() {
  _cached_size_ = 0;
  rt0_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  localhost_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  reqid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  funcid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  departmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  marketid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt6_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  customid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  securitycode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sorttype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrusttype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_QueryETFlistInfo_Req::~INF_QueryETFlistInfo_Req() {
  SharedDtor();
}

void INF_QueryETFlistInfo_Req::SharedDtor() {
  if (rt0_ != &::google::protobuf::internal::kEmptyString) {
    delete rt0_;
  }
  if (localhost_ != &::google::protobuf::internal::kEmptyString) {
    delete localhost_;
  }
  if (reqid_ != &::google::protobuf::internal::kEmptyString) {
    delete reqid_;
  }
  if (funcid_ != &::google::protobuf::internal::kEmptyString) {
    delete funcid_;
  }
  if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
    delete departmentid_;
  }
  if (marketid_ != &::google::protobuf::internal::kEmptyString) {
    delete marketid_;
  }
  if (rt6_ != &::google::protobuf::internal::kEmptyString) {
    delete rt6_;
  }
  if (customid_ != &::google::protobuf::internal::kEmptyString) {
    delete customid_;
  }
  if (securitycode_ != &::google::protobuf::internal::kEmptyString) {
    delete securitycode_;
  }
  if (sorttype_ != &::google::protobuf::internal::kEmptyString) {
    delete sorttype_;
  }
  if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
    delete entrusttype_;
  }
  if (this != default_instance_) {
  }
}

void INF_QueryETFlistInfo_Req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_QueryETFlistInfo_Req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_QueryETFlistInfo_Req_descriptor_;
}

const INF_QueryETFlistInfo_Req& INF_QueryETFlistInfo_Req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_QueryETFlistInfo_Req* INF_QueryETFlistInfo_Req::default_instance_ = NULL;

INF_QueryETFlistInfo_Req* INF_QueryETFlistInfo_Req::New() const {
  return new INF_QueryETFlistInfo_Req;
}

void INF_QueryETFlistInfo_Req::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_rt0()) {
      if (rt0_ != &::google::protobuf::internal::kEmptyString) {
        rt0_->clear();
      }
    }
    if (has_localhost()) {
      if (localhost_ != &::google::protobuf::internal::kEmptyString) {
        localhost_->clear();
      }
    }
    if (has_reqid()) {
      if (reqid_ != &::google::protobuf::internal::kEmptyString) {
        reqid_->clear();
      }
    }
    if (has_funcid()) {
      if (funcid_ != &::google::protobuf::internal::kEmptyString) {
        funcid_->clear();
      }
    }
    if (has_departmentid()) {
      if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
        departmentid_->clear();
      }
    }
    if (has_marketid()) {
      if (marketid_ != &::google::protobuf::internal::kEmptyString) {
        marketid_->clear();
      }
    }
    if (has_rt6()) {
      if (rt6_ != &::google::protobuf::internal::kEmptyString) {
        rt6_->clear();
      }
    }
    if (has_customid()) {
      if (customid_ != &::google::protobuf::internal::kEmptyString) {
        customid_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_securitycode()) {
      if (securitycode_ != &::google::protobuf::internal::kEmptyString) {
        securitycode_->clear();
      }
    }
    if (has_sorttype()) {
      if (sorttype_ != &::google::protobuf::internal::kEmptyString) {
        sorttype_->clear();
      }
    }
    if (has_entrusttype()) {
      if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
        entrusttype_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_QueryETFlistInfo_Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string RT0 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt0()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt0().data(), this->rt0().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Localhost;
        break;
      }
      
      // optional string Localhost = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Localhost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localhost()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->localhost().data(), this->localhost().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_ReqID;
        break;
      }
      
      // optional string ReqID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ReqID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reqid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->reqid().data(), this->reqid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_FuncID;
        break;
      }
      
      // optional string FuncID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_FuncID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_funcid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->funcid().data(), this->funcid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_DepartmentID;
        break;
      }
      
      // optional string DepartmentID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DepartmentID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_departmentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->departmentid().data(), this->departmentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_MarketID;
        break;
      }
      
      // optional string MarketID = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_MarketID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_marketid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->marketid().data(), this->marketid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_RT6;
        break;
      }
      
      // optional string RT6 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT6:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt6()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt6().data(), this->rt6().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_CustomID;
        break;
      }
      
      // optional string CustomID = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CustomID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->customid().data(), this->customid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_SecurityCode;
        break;
      }
      
      // optional string SecurityCode = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SecurityCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_securitycode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->securitycode().data(), this->securitycode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_SortType;
        break;
      }
      
      // optional string SortType = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SortType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sorttype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sorttype().data(), this->sorttype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_EntrustType;
        break;
      }
      
      // optional string EntrustType = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrusttype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrusttype().data(), this->entrusttype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_QueryETFlistInfo_Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->rt0(), output);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->localhost(), output);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->reqid(), output);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->funcid(), output);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->departmentid(), output);
  }
  
  // optional string MarketID = 6;
  if (has_marketid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketid().data(), this->marketid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->marketid(), output);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->rt6(), output);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->customid(), output);
  }
  
  // optional string SecurityCode = 9;
  if (has_securitycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitycode().data(), this->securitycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->securitycode(), output);
  }
  
  // optional string SortType = 10;
  if (has_sorttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sorttype().data(), this->sorttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->sorttype(), output);
  }
  
  // optional string EntrustType = 11;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->entrusttype(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_QueryETFlistInfo_Req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rt0(), target);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->localhost(), target);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reqid(), target);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->funcid(), target);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->departmentid(), target);
  }
  
  // optional string MarketID = 6;
  if (has_marketid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketid().data(), this->marketid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->marketid(), target);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->rt6(), target);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->customid(), target);
  }
  
  // optional string SecurityCode = 9;
  if (has_securitycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitycode().data(), this->securitycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->securitycode(), target);
  }
  
  // optional string SortType = 10;
  if (has_sorttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sorttype().data(), this->sorttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->sorttype(), target);
  }
  
  // optional string EntrustType = 11;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->entrusttype(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_QueryETFlistInfo_Req::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string RT0 = 1;
    if (has_rt0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt0());
    }
    
    // optional string Localhost = 2;
    if (has_localhost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localhost());
    }
    
    // optional string ReqID = 3;
    if (has_reqid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reqid());
    }
    
    // optional string FuncID = 4;
    if (has_funcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->funcid());
    }
    
    // optional string DepartmentID = 5;
    if (has_departmentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->departmentid());
    }
    
    // optional string MarketID = 6;
    if (has_marketid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->marketid());
    }
    
    // optional string RT6 = 7;
    if (has_rt6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt6());
    }
    
    // optional string CustomID = 8;
    if (has_customid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->customid());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string SecurityCode = 9;
    if (has_securitycode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->securitycode());
    }
    
    // optional string SortType = 10;
    if (has_sorttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sorttype());
    }
    
    // optional string EntrustType = 11;
    if (has_entrusttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrusttype());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_QueryETFlistInfo_Req::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_QueryETFlistInfo_Req* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_QueryETFlistInfo_Req*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_QueryETFlistInfo_Req::MergeFrom(const INF_QueryETFlistInfo_Req& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rt0()) {
      set_rt0(from.rt0());
    }
    if (from.has_localhost()) {
      set_localhost(from.localhost());
    }
    if (from.has_reqid()) {
      set_reqid(from.reqid());
    }
    if (from.has_funcid()) {
      set_funcid(from.funcid());
    }
    if (from.has_departmentid()) {
      set_departmentid(from.departmentid());
    }
    if (from.has_marketid()) {
      set_marketid(from.marketid());
    }
    if (from.has_rt6()) {
      set_rt6(from.rt6());
    }
    if (from.has_customid()) {
      set_customid(from.customid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_securitycode()) {
      set_securitycode(from.securitycode());
    }
    if (from.has_sorttype()) {
      set_sorttype(from.sorttype());
    }
    if (from.has_entrusttype()) {
      set_entrusttype(from.entrusttype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_QueryETFlistInfo_Req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_QueryETFlistInfo_Req::CopyFrom(const INF_QueryETFlistInfo_Req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_QueryETFlistInfo_Req::IsInitialized() const {
  
  return true;
}

void INF_QueryETFlistInfo_Req::Swap(INF_QueryETFlistInfo_Req* other) {
  if (other != this) {
    std::swap(rt0_, other->rt0_);
    std::swap(localhost_, other->localhost_);
    std::swap(reqid_, other->reqid_);
    std::swap(funcid_, other->funcid_);
    std::swap(departmentid_, other->departmentid_);
    std::swap(marketid_, other->marketid_);
    std::swap(rt6_, other->rt6_);
    std::swap(customid_, other->customid_);
    std::swap(securitycode_, other->securitycode_);
    std::swap(sorttype_, other->sorttype_);
    std::swap(entrusttype_, other->entrusttype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_QueryETFlistInfo_Req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_QueryETFlistInfo_Req_descriptor_;
  metadata.reflection = INF_QueryETFlistInfo_Req_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_QueryETFdynamicInfo_Req::kRT0FieldNumber;
const int INF_QueryETFdynamicInfo_Req::kLocalhostFieldNumber;
const int INF_QueryETFdynamicInfo_Req::kReqIDFieldNumber;
const int INF_QueryETFdynamicInfo_Req::kFuncIDFieldNumber;
const int INF_QueryETFdynamicInfo_Req::kDepartmentIDFieldNumber;
const int INF_QueryETFdynamicInfo_Req::kMarketIDFieldNumber;
const int INF_QueryETFdynamicInfo_Req::kRT6FieldNumber;
const int INF_QueryETFdynamicInfo_Req::kCustomIDFieldNumber;
const int INF_QueryETFdynamicInfo_Req::kEntrustBatchNOFieldNumber;
const int INF_QueryETFdynamicInfo_Req::kSecurityCodeFieldNumber;
const int INF_QueryETFdynamicInfo_Req::kETFminPurRedemUintFieldNumber;
const int INF_QueryETFdynamicInfo_Req::kEntrustTypeFieldNumber;
#endif  // !_MSC_VER

INF_QueryETFdynamicInfo_Req::INF_QueryETFdynamicInfo_Req()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_QueryETFdynamicInfo_Req::InitAsDefaultInstance() {
}

INF_QueryETFdynamicInfo_Req::INF_QueryETFdynamicInfo_Req(const INF_QueryETFdynamicInfo_Req& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_QueryETFdynamicInfo_Req::SharedCtor() {
  _cached_size_ = 0;
  rt0_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  localhost_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  reqid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  funcid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  departmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  marketid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt6_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  customid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustbatchno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  securitycode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  etfminpurredemuint_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrusttype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_QueryETFdynamicInfo_Req::~INF_QueryETFdynamicInfo_Req() {
  SharedDtor();
}

void INF_QueryETFdynamicInfo_Req::SharedDtor() {
  if (rt0_ != &::google::protobuf::internal::kEmptyString) {
    delete rt0_;
  }
  if (localhost_ != &::google::protobuf::internal::kEmptyString) {
    delete localhost_;
  }
  if (reqid_ != &::google::protobuf::internal::kEmptyString) {
    delete reqid_;
  }
  if (funcid_ != &::google::protobuf::internal::kEmptyString) {
    delete funcid_;
  }
  if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
    delete departmentid_;
  }
  if (marketid_ != &::google::protobuf::internal::kEmptyString) {
    delete marketid_;
  }
  if (rt6_ != &::google::protobuf::internal::kEmptyString) {
    delete rt6_;
  }
  if (customid_ != &::google::protobuf::internal::kEmptyString) {
    delete customid_;
  }
  if (entrustbatchno_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustbatchno_;
  }
  if (securitycode_ != &::google::protobuf::internal::kEmptyString) {
    delete securitycode_;
  }
  if (etfminpurredemuint_ != &::google::protobuf::internal::kEmptyString) {
    delete etfminpurredemuint_;
  }
  if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
    delete entrusttype_;
  }
  if (this != default_instance_) {
  }
}

void INF_QueryETFdynamicInfo_Req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_QueryETFdynamicInfo_Req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_QueryETFdynamicInfo_Req_descriptor_;
}

const INF_QueryETFdynamicInfo_Req& INF_QueryETFdynamicInfo_Req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_QueryETFdynamicInfo_Req* INF_QueryETFdynamicInfo_Req::default_instance_ = NULL;

INF_QueryETFdynamicInfo_Req* INF_QueryETFdynamicInfo_Req::New() const {
  return new INF_QueryETFdynamicInfo_Req;
}

void INF_QueryETFdynamicInfo_Req::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_rt0()) {
      if (rt0_ != &::google::protobuf::internal::kEmptyString) {
        rt0_->clear();
      }
    }
    if (has_localhost()) {
      if (localhost_ != &::google::protobuf::internal::kEmptyString) {
        localhost_->clear();
      }
    }
    if (has_reqid()) {
      if (reqid_ != &::google::protobuf::internal::kEmptyString) {
        reqid_->clear();
      }
    }
    if (has_funcid()) {
      if (funcid_ != &::google::protobuf::internal::kEmptyString) {
        funcid_->clear();
      }
    }
    if (has_departmentid()) {
      if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
        departmentid_->clear();
      }
    }
    if (has_marketid()) {
      if (marketid_ != &::google::protobuf::internal::kEmptyString) {
        marketid_->clear();
      }
    }
    if (has_rt6()) {
      if (rt6_ != &::google::protobuf::internal::kEmptyString) {
        rt6_->clear();
      }
    }
    if (has_customid()) {
      if (customid_ != &::google::protobuf::internal::kEmptyString) {
        customid_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_entrustbatchno()) {
      if (entrustbatchno_ != &::google::protobuf::internal::kEmptyString) {
        entrustbatchno_->clear();
      }
    }
    if (has_securitycode()) {
      if (securitycode_ != &::google::protobuf::internal::kEmptyString) {
        securitycode_->clear();
      }
    }
    if (has_etfminpurredemuint()) {
      if (etfminpurredemuint_ != &::google::protobuf::internal::kEmptyString) {
        etfminpurredemuint_->clear();
      }
    }
    if (has_entrusttype()) {
      if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
        entrusttype_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_QueryETFdynamicInfo_Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string RT0 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt0()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt0().data(), this->rt0().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Localhost;
        break;
      }
      
      // optional string Localhost = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Localhost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localhost()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->localhost().data(), this->localhost().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_ReqID;
        break;
      }
      
      // optional string ReqID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ReqID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reqid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->reqid().data(), this->reqid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_FuncID;
        break;
      }
      
      // optional string FuncID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_FuncID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_funcid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->funcid().data(), this->funcid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_DepartmentID;
        break;
      }
      
      // optional string DepartmentID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DepartmentID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_departmentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->departmentid().data(), this->departmentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_MarketID;
        break;
      }
      
      // optional string MarketID = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_MarketID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_marketid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->marketid().data(), this->marketid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_RT6;
        break;
      }
      
      // optional string RT6 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT6:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt6()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt6().data(), this->rt6().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_CustomID;
        break;
      }
      
      // optional string CustomID = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CustomID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->customid().data(), this->customid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_EntrustBatchNO;
        break;
      }
      
      // optional string EntrustBatchNO = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustBatchNO:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustbatchno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustbatchno().data(), this->entrustbatchno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_SecurityCode;
        break;
      }
      
      // optional string SecurityCode = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SecurityCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_securitycode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->securitycode().data(), this->securitycode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_ETFminPurRedemUint;
        break;
      }
      
      // optional string ETFminPurRedemUint = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ETFminPurRedemUint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etfminpurredemuint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->etfminpurredemuint().data(), this->etfminpurredemuint().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_EntrustType;
        break;
      }
      
      // optional string EntrustType = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrusttype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrusttype().data(), this->entrusttype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_QueryETFdynamicInfo_Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->rt0(), output);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->localhost(), output);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->reqid(), output);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->funcid(), output);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->departmentid(), output);
  }
  
  // optional string MarketID = 6;
  if (has_marketid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketid().data(), this->marketid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->marketid(), output);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->rt6(), output);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->customid(), output);
  }
  
  // optional string EntrustBatchNO = 9;
  if (has_entrustbatchno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustbatchno().data(), this->entrustbatchno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->entrustbatchno(), output);
  }
  
  // optional string SecurityCode = 10;
  if (has_securitycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitycode().data(), this->securitycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->securitycode(), output);
  }
  
  // optional string ETFminPurRedemUint = 11;
  if (has_etfminpurredemuint()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etfminpurredemuint().data(), this->etfminpurredemuint().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->etfminpurredemuint(), output);
  }
  
  // optional string EntrustType = 12;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->entrusttype(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_QueryETFdynamicInfo_Req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rt0(), target);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->localhost(), target);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reqid(), target);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->funcid(), target);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->departmentid(), target);
  }
  
  // optional string MarketID = 6;
  if (has_marketid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketid().data(), this->marketid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->marketid(), target);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->rt6(), target);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->customid(), target);
  }
  
  // optional string EntrustBatchNO = 9;
  if (has_entrustbatchno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustbatchno().data(), this->entrustbatchno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->entrustbatchno(), target);
  }
  
  // optional string SecurityCode = 10;
  if (has_securitycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitycode().data(), this->securitycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->securitycode(), target);
  }
  
  // optional string ETFminPurRedemUint = 11;
  if (has_etfminpurredemuint()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etfminpurredemuint().data(), this->etfminpurredemuint().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->etfminpurredemuint(), target);
  }
  
  // optional string EntrustType = 12;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->entrusttype(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_QueryETFdynamicInfo_Req::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string RT0 = 1;
    if (has_rt0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt0());
    }
    
    // optional string Localhost = 2;
    if (has_localhost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localhost());
    }
    
    // optional string ReqID = 3;
    if (has_reqid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reqid());
    }
    
    // optional string FuncID = 4;
    if (has_funcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->funcid());
    }
    
    // optional string DepartmentID = 5;
    if (has_departmentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->departmentid());
    }
    
    // optional string MarketID = 6;
    if (has_marketid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->marketid());
    }
    
    // optional string RT6 = 7;
    if (has_rt6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt6());
    }
    
    // optional string CustomID = 8;
    if (has_customid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->customid());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string EntrustBatchNO = 9;
    if (has_entrustbatchno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustbatchno());
    }
    
    // optional string SecurityCode = 10;
    if (has_securitycode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->securitycode());
    }
    
    // optional string ETFminPurRedemUint = 11;
    if (has_etfminpurredemuint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->etfminpurredemuint());
    }
    
    // optional string EntrustType = 12;
    if (has_entrusttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrusttype());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_QueryETFdynamicInfo_Req::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_QueryETFdynamicInfo_Req* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_QueryETFdynamicInfo_Req*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_QueryETFdynamicInfo_Req::MergeFrom(const INF_QueryETFdynamicInfo_Req& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rt0()) {
      set_rt0(from.rt0());
    }
    if (from.has_localhost()) {
      set_localhost(from.localhost());
    }
    if (from.has_reqid()) {
      set_reqid(from.reqid());
    }
    if (from.has_funcid()) {
      set_funcid(from.funcid());
    }
    if (from.has_departmentid()) {
      set_departmentid(from.departmentid());
    }
    if (from.has_marketid()) {
      set_marketid(from.marketid());
    }
    if (from.has_rt6()) {
      set_rt6(from.rt6());
    }
    if (from.has_customid()) {
      set_customid(from.customid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_entrustbatchno()) {
      set_entrustbatchno(from.entrustbatchno());
    }
    if (from.has_securitycode()) {
      set_securitycode(from.securitycode());
    }
    if (from.has_etfminpurredemuint()) {
      set_etfminpurredemuint(from.etfminpurredemuint());
    }
    if (from.has_entrusttype()) {
      set_entrusttype(from.entrusttype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_QueryETFdynamicInfo_Req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_QueryETFdynamicInfo_Req::CopyFrom(const INF_QueryETFdynamicInfo_Req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_QueryETFdynamicInfo_Req::IsInitialized() const {
  
  return true;
}

void INF_QueryETFdynamicInfo_Req::Swap(INF_QueryETFdynamicInfo_Req* other) {
  if (other != this) {
    std::swap(rt0_, other->rt0_);
    std::swap(localhost_, other->localhost_);
    std::swap(reqid_, other->reqid_);
    std::swap(funcid_, other->funcid_);
    std::swap(departmentid_, other->departmentid_);
    std::swap(marketid_, other->marketid_);
    std::swap(rt6_, other->rt6_);
    std::swap(customid_, other->customid_);
    std::swap(entrustbatchno_, other->entrustbatchno_);
    std::swap(securitycode_, other->securitycode_);
    std::swap(etfminpurredemuint_, other->etfminpurredemuint_);
    std::swap(entrusttype_, other->entrusttype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_QueryETFdynamicInfo_Req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_QueryETFdynamicInfo_Req_descriptor_;
  metadata.reflection = INF_QueryETFdynamicInfo_Req_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_QueryFundCondition_Req::kRT0FieldNumber;
const int INF_QueryFundCondition_Req::kLocalhostFieldNumber;
const int INF_QueryFundCondition_Req::kReqIDFieldNumber;
const int INF_QueryFundCondition_Req::kFuncIDFieldNumber;
const int INF_QueryFundCondition_Req::kDepartmentIDFieldNumber;
const int INF_QueryFundCondition_Req::kMoneyTypeFieldNumber;
const int INF_QueryFundCondition_Req::kRT6FieldNumber;
const int INF_QueryFundCondition_Req::kCustomIDFieldNumber;
const int INF_QueryFundCondition_Req::kEntrustTypeFieldNumber;
const int INF_QueryFundCondition_Req::kPropertyDebtFieldNumber;
#endif  // !_MSC_VER

INF_QueryFundCondition_Req::INF_QueryFundCondition_Req()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_QueryFundCondition_Req::InitAsDefaultInstance() {
}

INF_QueryFundCondition_Req::INF_QueryFundCondition_Req(const INF_QueryFundCondition_Req& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_QueryFundCondition_Req::SharedCtor() {
  _cached_size_ = 0;
  rt0_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  localhost_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  reqid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  funcid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  departmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  moneytype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt6_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  customid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrusttype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  propertydebt_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_QueryFundCondition_Req::~INF_QueryFundCondition_Req() {
  SharedDtor();
}

void INF_QueryFundCondition_Req::SharedDtor() {
  if (rt0_ != &::google::protobuf::internal::kEmptyString) {
    delete rt0_;
  }
  if (localhost_ != &::google::protobuf::internal::kEmptyString) {
    delete localhost_;
  }
  if (reqid_ != &::google::protobuf::internal::kEmptyString) {
    delete reqid_;
  }
  if (funcid_ != &::google::protobuf::internal::kEmptyString) {
    delete funcid_;
  }
  if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
    delete departmentid_;
  }
  if (moneytype_ != &::google::protobuf::internal::kEmptyString) {
    delete moneytype_;
  }
  if (rt6_ != &::google::protobuf::internal::kEmptyString) {
    delete rt6_;
  }
  if (customid_ != &::google::protobuf::internal::kEmptyString) {
    delete customid_;
  }
  if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
    delete entrusttype_;
  }
  if (propertydebt_ != &::google::protobuf::internal::kEmptyString) {
    delete propertydebt_;
  }
  if (this != default_instance_) {
  }
}

void INF_QueryFundCondition_Req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_QueryFundCondition_Req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_QueryFundCondition_Req_descriptor_;
}

const INF_QueryFundCondition_Req& INF_QueryFundCondition_Req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_QueryFundCondition_Req* INF_QueryFundCondition_Req::default_instance_ = NULL;

INF_QueryFundCondition_Req* INF_QueryFundCondition_Req::New() const {
  return new INF_QueryFundCondition_Req;
}

void INF_QueryFundCondition_Req::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_rt0()) {
      if (rt0_ != &::google::protobuf::internal::kEmptyString) {
        rt0_->clear();
      }
    }
    if (has_localhost()) {
      if (localhost_ != &::google::protobuf::internal::kEmptyString) {
        localhost_->clear();
      }
    }
    if (has_reqid()) {
      if (reqid_ != &::google::protobuf::internal::kEmptyString) {
        reqid_->clear();
      }
    }
    if (has_funcid()) {
      if (funcid_ != &::google::protobuf::internal::kEmptyString) {
        funcid_->clear();
      }
    }
    if (has_departmentid()) {
      if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
        departmentid_->clear();
      }
    }
    if (has_moneytype()) {
      if (moneytype_ != &::google::protobuf::internal::kEmptyString) {
        moneytype_->clear();
      }
    }
    if (has_rt6()) {
      if (rt6_ != &::google::protobuf::internal::kEmptyString) {
        rt6_->clear();
      }
    }
    if (has_customid()) {
      if (customid_ != &::google::protobuf::internal::kEmptyString) {
        customid_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_entrusttype()) {
      if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
        entrusttype_->clear();
      }
    }
    if (has_propertydebt()) {
      if (propertydebt_ != &::google::protobuf::internal::kEmptyString) {
        propertydebt_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_QueryFundCondition_Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string RT0 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt0()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt0().data(), this->rt0().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Localhost;
        break;
      }
      
      // optional string Localhost = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Localhost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localhost()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->localhost().data(), this->localhost().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_ReqID;
        break;
      }
      
      // optional string ReqID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ReqID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reqid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->reqid().data(), this->reqid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_FuncID;
        break;
      }
      
      // optional string FuncID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_FuncID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_funcid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->funcid().data(), this->funcid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_DepartmentID;
        break;
      }
      
      // optional string DepartmentID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DepartmentID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_departmentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->departmentid().data(), this->departmentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_MoneyType;
        break;
      }
      
      // optional string MoneyType = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_MoneyType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_moneytype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->moneytype().data(), this->moneytype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_RT6;
        break;
      }
      
      // optional string RT6 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT6:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt6()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt6().data(), this->rt6().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_CustomID;
        break;
      }
      
      // optional string CustomID = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CustomID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->customid().data(), this->customid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_EntrustType;
        break;
      }
      
      // optional string EntrustType = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrusttype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrusttype().data(), this->entrusttype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_PropertyDebt;
        break;
      }
      
      // optional string PropertyDebt = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_PropertyDebt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_propertydebt()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->propertydebt().data(), this->propertydebt().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_QueryFundCondition_Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->rt0(), output);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->localhost(), output);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->reqid(), output);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->funcid(), output);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->departmentid(), output);
  }
  
  // optional string MoneyType = 6;
  if (has_moneytype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->moneytype().data(), this->moneytype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->moneytype(), output);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->rt6(), output);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->customid(), output);
  }
  
  // optional string EntrustType = 9;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->entrusttype(), output);
  }
  
  // optional string PropertyDebt = 10;
  if (has_propertydebt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->propertydebt().data(), this->propertydebt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->propertydebt(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_QueryFundCondition_Req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rt0(), target);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->localhost(), target);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reqid(), target);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->funcid(), target);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->departmentid(), target);
  }
  
  // optional string MoneyType = 6;
  if (has_moneytype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->moneytype().data(), this->moneytype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->moneytype(), target);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->rt6(), target);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->customid(), target);
  }
  
  // optional string EntrustType = 9;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->entrusttype(), target);
  }
  
  // optional string PropertyDebt = 10;
  if (has_propertydebt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->propertydebt().data(), this->propertydebt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->propertydebt(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_QueryFundCondition_Req::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string RT0 = 1;
    if (has_rt0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt0());
    }
    
    // optional string Localhost = 2;
    if (has_localhost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localhost());
    }
    
    // optional string ReqID = 3;
    if (has_reqid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reqid());
    }
    
    // optional string FuncID = 4;
    if (has_funcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->funcid());
    }
    
    // optional string DepartmentID = 5;
    if (has_departmentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->departmentid());
    }
    
    // optional string MoneyType = 6;
    if (has_moneytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->moneytype());
    }
    
    // optional string RT6 = 7;
    if (has_rt6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt6());
    }
    
    // optional string CustomID = 8;
    if (has_customid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->customid());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string EntrustType = 9;
    if (has_entrusttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrusttype());
    }
    
    // optional string PropertyDebt = 10;
    if (has_propertydebt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->propertydebt());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_QueryFundCondition_Req::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_QueryFundCondition_Req* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_QueryFundCondition_Req*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_QueryFundCondition_Req::MergeFrom(const INF_QueryFundCondition_Req& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rt0()) {
      set_rt0(from.rt0());
    }
    if (from.has_localhost()) {
      set_localhost(from.localhost());
    }
    if (from.has_reqid()) {
      set_reqid(from.reqid());
    }
    if (from.has_funcid()) {
      set_funcid(from.funcid());
    }
    if (from.has_departmentid()) {
      set_departmentid(from.departmentid());
    }
    if (from.has_moneytype()) {
      set_moneytype(from.moneytype());
    }
    if (from.has_rt6()) {
      set_rt6(from.rt6());
    }
    if (from.has_customid()) {
      set_customid(from.customid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_entrusttype()) {
      set_entrusttype(from.entrusttype());
    }
    if (from.has_propertydebt()) {
      set_propertydebt(from.propertydebt());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_QueryFundCondition_Req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_QueryFundCondition_Req::CopyFrom(const INF_QueryFundCondition_Req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_QueryFundCondition_Req::IsInitialized() const {
  
  return true;
}

void INF_QueryFundCondition_Req::Swap(INF_QueryFundCondition_Req* other) {
  if (other != this) {
    std::swap(rt0_, other->rt0_);
    std::swap(localhost_, other->localhost_);
    std::swap(reqid_, other->reqid_);
    std::swap(funcid_, other->funcid_);
    std::swap(departmentid_, other->departmentid_);
    std::swap(moneytype_, other->moneytype_);
    std::swap(rt6_, other->rt6_);
    std::swap(customid_, other->customid_);
    std::swap(entrusttype_, other->entrusttype_);
    std::swap(propertydebt_, other->propertydebt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_QueryFundCondition_Req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_QueryFundCondition_Req_descriptor_;
  metadata.reflection = INF_QueryFundCondition_Req_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_ETFPurRedem_Req::kRT0FieldNumber;
const int INF_ETFPurRedem_Req::kLocalhostFieldNumber;
const int INF_ETFPurRedem_Req::kReqIDFieldNumber;
const int INF_ETFPurRedem_Req::kFuncIDFieldNumber;
const int INF_ETFPurRedem_Req::kDepartmentIDFieldNumber;
const int INF_ETFPurRedem_Req::kMoneyIDFieldNumber;
const int INF_ETFPurRedem_Req::kRT6FieldNumber;
const int INF_ETFPurRedem_Req::kCustomIDFieldNumber;
const int INF_ETFPurRedem_Req::kEntrustBatchNOFieldNumber;
const int INF_ETFPurRedem_Req::kOperateFuncFieldNumber;
const int INF_ETFPurRedem_Req::kSecurityCodeFieldNumber;
const int INF_ETFPurRedem_Req::kEntrustNumFieldNumber;
const int INF_ETFPurRedem_Req::kEntrustTypeFieldNumber;
#endif  // !_MSC_VER

INF_ETFPurRedem_Req::INF_ETFPurRedem_Req()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_ETFPurRedem_Req::InitAsDefaultInstance() {
}

INF_ETFPurRedem_Req::INF_ETFPurRedem_Req(const INF_ETFPurRedem_Req& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_ETFPurRedem_Req::SharedCtor() {
  _cached_size_ = 0;
  rt0_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  localhost_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  reqid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  funcid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  departmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  moneyid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt6_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  customid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustbatchno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  operatefunc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  securitycode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrusttype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_ETFPurRedem_Req::~INF_ETFPurRedem_Req() {
  SharedDtor();
}

void INF_ETFPurRedem_Req::SharedDtor() {
  if (rt0_ != &::google::protobuf::internal::kEmptyString) {
    delete rt0_;
  }
  if (localhost_ != &::google::protobuf::internal::kEmptyString) {
    delete localhost_;
  }
  if (reqid_ != &::google::protobuf::internal::kEmptyString) {
    delete reqid_;
  }
  if (funcid_ != &::google::protobuf::internal::kEmptyString) {
    delete funcid_;
  }
  if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
    delete departmentid_;
  }
  if (moneyid_ != &::google::protobuf::internal::kEmptyString) {
    delete moneyid_;
  }
  if (rt6_ != &::google::protobuf::internal::kEmptyString) {
    delete rt6_;
  }
  if (customid_ != &::google::protobuf::internal::kEmptyString) {
    delete customid_;
  }
  if (entrustbatchno_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustbatchno_;
  }
  if (operatefunc_ != &::google::protobuf::internal::kEmptyString) {
    delete operatefunc_;
  }
  if (securitycode_ != &::google::protobuf::internal::kEmptyString) {
    delete securitycode_;
  }
  if (entrustnum_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustnum_;
  }
  if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
    delete entrusttype_;
  }
  if (this != default_instance_) {
  }
}

void INF_ETFPurRedem_Req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_ETFPurRedem_Req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_ETFPurRedem_Req_descriptor_;
}

const INF_ETFPurRedem_Req& INF_ETFPurRedem_Req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_ETFPurRedem_Req* INF_ETFPurRedem_Req::default_instance_ = NULL;

INF_ETFPurRedem_Req* INF_ETFPurRedem_Req::New() const {
  return new INF_ETFPurRedem_Req;
}

void INF_ETFPurRedem_Req::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_rt0()) {
      if (rt0_ != &::google::protobuf::internal::kEmptyString) {
        rt0_->clear();
      }
    }
    if (has_localhost()) {
      if (localhost_ != &::google::protobuf::internal::kEmptyString) {
        localhost_->clear();
      }
    }
    if (has_reqid()) {
      if (reqid_ != &::google::protobuf::internal::kEmptyString) {
        reqid_->clear();
      }
    }
    if (has_funcid()) {
      if (funcid_ != &::google::protobuf::internal::kEmptyString) {
        funcid_->clear();
      }
    }
    if (has_departmentid()) {
      if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
        departmentid_->clear();
      }
    }
    if (has_moneyid()) {
      if (moneyid_ != &::google::protobuf::internal::kEmptyString) {
        moneyid_->clear();
      }
    }
    if (has_rt6()) {
      if (rt6_ != &::google::protobuf::internal::kEmptyString) {
        rt6_->clear();
      }
    }
    if (has_customid()) {
      if (customid_ != &::google::protobuf::internal::kEmptyString) {
        customid_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_entrustbatchno()) {
      if (entrustbatchno_ != &::google::protobuf::internal::kEmptyString) {
        entrustbatchno_->clear();
      }
    }
    if (has_operatefunc()) {
      if (operatefunc_ != &::google::protobuf::internal::kEmptyString) {
        operatefunc_->clear();
      }
    }
    if (has_securitycode()) {
      if (securitycode_ != &::google::protobuf::internal::kEmptyString) {
        securitycode_->clear();
      }
    }
    if (has_entrustnum()) {
      if (entrustnum_ != &::google::protobuf::internal::kEmptyString) {
        entrustnum_->clear();
      }
    }
    if (has_entrusttype()) {
      if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
        entrusttype_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_ETFPurRedem_Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string RT0 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt0()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt0().data(), this->rt0().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Localhost;
        break;
      }
      
      // optional string Localhost = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Localhost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localhost()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->localhost().data(), this->localhost().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_ReqID;
        break;
      }
      
      // optional string ReqID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ReqID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reqid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->reqid().data(), this->reqid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_FuncID;
        break;
      }
      
      // optional string FuncID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_FuncID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_funcid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->funcid().data(), this->funcid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_DepartmentID;
        break;
      }
      
      // optional string DepartmentID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DepartmentID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_departmentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->departmentid().data(), this->departmentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_MoneyID;
        break;
      }
      
      // optional string MoneyID = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_MoneyID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_moneyid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->moneyid().data(), this->moneyid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_RT6;
        break;
      }
      
      // optional string RT6 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT6:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt6()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt6().data(), this->rt6().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_CustomID;
        break;
      }
      
      // optional string CustomID = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CustomID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->customid().data(), this->customid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_EntrustBatchNO;
        break;
      }
      
      // optional string EntrustBatchNO = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustBatchNO:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustbatchno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustbatchno().data(), this->entrustbatchno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_OperateFunc;
        break;
      }
      
      // optional string OperateFunc = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OperateFunc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operatefunc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->operatefunc().data(), this->operatefunc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_SecurityCode;
        break;
      }
      
      // optional string SecurityCode = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SecurityCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_securitycode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->securitycode().data(), this->securitycode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_EntrustNum;
        break;
      }
      
      // optional string EntrustNum = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustnum().data(), this->entrustnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_EntrustType;
        break;
      }
      
      // optional string EntrustType = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrusttype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrusttype().data(), this->entrusttype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_ETFPurRedem_Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->rt0(), output);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->localhost(), output);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->reqid(), output);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->funcid(), output);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->departmentid(), output);
  }
  
  // optional string MoneyID = 6;
  if (has_moneyid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->moneyid().data(), this->moneyid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->moneyid(), output);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->rt6(), output);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->customid(), output);
  }
  
  // optional string EntrustBatchNO = 9;
  if (has_entrustbatchno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustbatchno().data(), this->entrustbatchno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->entrustbatchno(), output);
  }
  
  // optional string OperateFunc = 10;
  if (has_operatefunc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->operatefunc().data(), this->operatefunc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->operatefunc(), output);
  }
  
  // optional string SecurityCode = 11;
  if (has_securitycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitycode().data(), this->securitycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->securitycode(), output);
  }
  
  // optional string EntrustNum = 12;
  if (has_entrustnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustnum().data(), this->entrustnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->entrustnum(), output);
  }
  
  // optional string EntrustType = 13;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->entrusttype(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_ETFPurRedem_Req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rt0(), target);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->localhost(), target);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reqid(), target);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->funcid(), target);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->departmentid(), target);
  }
  
  // optional string MoneyID = 6;
  if (has_moneyid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->moneyid().data(), this->moneyid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->moneyid(), target);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->rt6(), target);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->customid(), target);
  }
  
  // optional string EntrustBatchNO = 9;
  if (has_entrustbatchno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustbatchno().data(), this->entrustbatchno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->entrustbatchno(), target);
  }
  
  // optional string OperateFunc = 10;
  if (has_operatefunc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->operatefunc().data(), this->operatefunc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->operatefunc(), target);
  }
  
  // optional string SecurityCode = 11;
  if (has_securitycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitycode().data(), this->securitycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->securitycode(), target);
  }
  
  // optional string EntrustNum = 12;
  if (has_entrustnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustnum().data(), this->entrustnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->entrustnum(), target);
  }
  
  // optional string EntrustType = 13;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->entrusttype(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_ETFPurRedem_Req::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string RT0 = 1;
    if (has_rt0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt0());
    }
    
    // optional string Localhost = 2;
    if (has_localhost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localhost());
    }
    
    // optional string ReqID = 3;
    if (has_reqid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reqid());
    }
    
    // optional string FuncID = 4;
    if (has_funcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->funcid());
    }
    
    // optional string DepartmentID = 5;
    if (has_departmentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->departmentid());
    }
    
    // optional string MoneyID = 6;
    if (has_moneyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->moneyid());
    }
    
    // optional string RT6 = 7;
    if (has_rt6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt6());
    }
    
    // optional string CustomID = 8;
    if (has_customid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->customid());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string EntrustBatchNO = 9;
    if (has_entrustbatchno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustbatchno());
    }
    
    // optional string OperateFunc = 10;
    if (has_operatefunc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->operatefunc());
    }
    
    // optional string SecurityCode = 11;
    if (has_securitycode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->securitycode());
    }
    
    // optional string EntrustNum = 12;
    if (has_entrustnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustnum());
    }
    
    // optional string EntrustType = 13;
    if (has_entrusttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrusttype());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_ETFPurRedem_Req::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_ETFPurRedem_Req* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_ETFPurRedem_Req*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_ETFPurRedem_Req::MergeFrom(const INF_ETFPurRedem_Req& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rt0()) {
      set_rt0(from.rt0());
    }
    if (from.has_localhost()) {
      set_localhost(from.localhost());
    }
    if (from.has_reqid()) {
      set_reqid(from.reqid());
    }
    if (from.has_funcid()) {
      set_funcid(from.funcid());
    }
    if (from.has_departmentid()) {
      set_departmentid(from.departmentid());
    }
    if (from.has_moneyid()) {
      set_moneyid(from.moneyid());
    }
    if (from.has_rt6()) {
      set_rt6(from.rt6());
    }
    if (from.has_customid()) {
      set_customid(from.customid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_entrustbatchno()) {
      set_entrustbatchno(from.entrustbatchno());
    }
    if (from.has_operatefunc()) {
      set_operatefunc(from.operatefunc());
    }
    if (from.has_securitycode()) {
      set_securitycode(from.securitycode());
    }
    if (from.has_entrustnum()) {
      set_entrustnum(from.entrustnum());
    }
    if (from.has_entrusttype()) {
      set_entrusttype(from.entrusttype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_ETFPurRedem_Req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_ETFPurRedem_Req::CopyFrom(const INF_ETFPurRedem_Req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_ETFPurRedem_Req::IsInitialized() const {
  
  return true;
}

void INF_ETFPurRedem_Req::Swap(INF_ETFPurRedem_Req* other) {
  if (other != this) {
    std::swap(rt0_, other->rt0_);
    std::swap(localhost_, other->localhost_);
    std::swap(reqid_, other->reqid_);
    std::swap(funcid_, other->funcid_);
    std::swap(departmentid_, other->departmentid_);
    std::swap(moneyid_, other->moneyid_);
    std::swap(rt6_, other->rt6_);
    std::swap(customid_, other->customid_);
    std::swap(entrustbatchno_, other->entrustbatchno_);
    std::swap(operatefunc_, other->operatefunc_);
    std::swap(securitycode_, other->securitycode_);
    std::swap(entrustnum_, other->entrustnum_);
    std::swap(entrusttype_, other->entrusttype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_ETFPurRedem_Req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_ETFPurRedem_Req_descriptor_;
  metadata.reflection = INF_ETFPurRedem_Req_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_QueryBatchEntrust_Req::kRT0FieldNumber;
const int INF_QueryBatchEntrust_Req::kLocalhostFieldNumber;
const int INF_QueryBatchEntrust_Req::kReqIDFieldNumber;
const int INF_QueryBatchEntrust_Req::kFuncIDFieldNumber;
const int INF_QueryBatchEntrust_Req::kDepartmentIDFieldNumber;
const int INF_QueryBatchEntrust_Req::kRT5FieldNumber;
const int INF_QueryBatchEntrust_Req::kRT6FieldNumber;
const int INF_QueryBatchEntrust_Req::kCustomIDFieldNumber;
const int INF_QueryBatchEntrust_Req::kRT8FieldNumber;
const int INF_QueryBatchEntrust_Req::kRT9FieldNumber;
const int INF_QueryBatchEntrust_Req::kEntrustBatchNOFieldNumber;
const int INF_QueryBatchEntrust_Req::kRT11FieldNumber;
const int INF_QueryBatchEntrust_Req::kCombineModeFieldNumber;
const int INF_QueryBatchEntrust_Req::kQueryDirFieldNumber;
const int INF_QueryBatchEntrust_Req::kRT14FieldNumber;
const int INF_QueryBatchEntrust_Req::kRT15FieldNumber;
const int INF_QueryBatchEntrust_Req::kEntrustTypeFieldNumber;
#endif  // !_MSC_VER

INF_QueryBatchEntrust_Req::INF_QueryBatchEntrust_Req()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_QueryBatchEntrust_Req::InitAsDefaultInstance() {
}

INF_QueryBatchEntrust_Req::INF_QueryBatchEntrust_Req(const INF_QueryBatchEntrust_Req& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_QueryBatchEntrust_Req::SharedCtor() {
  _cached_size_ = 0;
  rt0_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  localhost_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  reqid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  funcid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  departmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt5_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt6_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  customid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt8_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt9_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustbatchno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt11_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  combinemode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  querydir_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt14_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt15_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrusttype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_QueryBatchEntrust_Req::~INF_QueryBatchEntrust_Req() {
  SharedDtor();
}

void INF_QueryBatchEntrust_Req::SharedDtor() {
  if (rt0_ != &::google::protobuf::internal::kEmptyString) {
    delete rt0_;
  }
  if (localhost_ != &::google::protobuf::internal::kEmptyString) {
    delete localhost_;
  }
  if (reqid_ != &::google::protobuf::internal::kEmptyString) {
    delete reqid_;
  }
  if (funcid_ != &::google::protobuf::internal::kEmptyString) {
    delete funcid_;
  }
  if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
    delete departmentid_;
  }
  if (rt5_ != &::google::protobuf::internal::kEmptyString) {
    delete rt5_;
  }
  if (rt6_ != &::google::protobuf::internal::kEmptyString) {
    delete rt6_;
  }
  if (customid_ != &::google::protobuf::internal::kEmptyString) {
    delete customid_;
  }
  if (rt8_ != &::google::protobuf::internal::kEmptyString) {
    delete rt8_;
  }
  if (rt9_ != &::google::protobuf::internal::kEmptyString) {
    delete rt9_;
  }
  if (entrustbatchno_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustbatchno_;
  }
  if (rt11_ != &::google::protobuf::internal::kEmptyString) {
    delete rt11_;
  }
  if (combinemode_ != &::google::protobuf::internal::kEmptyString) {
    delete combinemode_;
  }
  if (querydir_ != &::google::protobuf::internal::kEmptyString) {
    delete querydir_;
  }
  if (rt14_ != &::google::protobuf::internal::kEmptyString) {
    delete rt14_;
  }
  if (rt15_ != &::google::protobuf::internal::kEmptyString) {
    delete rt15_;
  }
  if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
    delete entrusttype_;
  }
  if (this != default_instance_) {
  }
}

void INF_QueryBatchEntrust_Req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_QueryBatchEntrust_Req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_QueryBatchEntrust_Req_descriptor_;
}

const INF_QueryBatchEntrust_Req& INF_QueryBatchEntrust_Req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_QueryBatchEntrust_Req* INF_QueryBatchEntrust_Req::default_instance_ = NULL;

INF_QueryBatchEntrust_Req* INF_QueryBatchEntrust_Req::New() const {
  return new INF_QueryBatchEntrust_Req;
}

void INF_QueryBatchEntrust_Req::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_rt0()) {
      if (rt0_ != &::google::protobuf::internal::kEmptyString) {
        rt0_->clear();
      }
    }
    if (has_localhost()) {
      if (localhost_ != &::google::protobuf::internal::kEmptyString) {
        localhost_->clear();
      }
    }
    if (has_reqid()) {
      if (reqid_ != &::google::protobuf::internal::kEmptyString) {
        reqid_->clear();
      }
    }
    if (has_funcid()) {
      if (funcid_ != &::google::protobuf::internal::kEmptyString) {
        funcid_->clear();
      }
    }
    if (has_departmentid()) {
      if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
        departmentid_->clear();
      }
    }
    if (has_rt5()) {
      if (rt5_ != &::google::protobuf::internal::kEmptyString) {
        rt5_->clear();
      }
    }
    if (has_rt6()) {
      if (rt6_ != &::google::protobuf::internal::kEmptyString) {
        rt6_->clear();
      }
    }
    if (has_customid()) {
      if (customid_ != &::google::protobuf::internal::kEmptyString) {
        customid_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_rt8()) {
      if (rt8_ != &::google::protobuf::internal::kEmptyString) {
        rt8_->clear();
      }
    }
    if (has_rt9()) {
      if (rt9_ != &::google::protobuf::internal::kEmptyString) {
        rt9_->clear();
      }
    }
    if (has_entrustbatchno()) {
      if (entrustbatchno_ != &::google::protobuf::internal::kEmptyString) {
        entrustbatchno_->clear();
      }
    }
    if (has_rt11()) {
      if (rt11_ != &::google::protobuf::internal::kEmptyString) {
        rt11_->clear();
      }
    }
    if (has_combinemode()) {
      if (combinemode_ != &::google::protobuf::internal::kEmptyString) {
        combinemode_->clear();
      }
    }
    if (has_querydir()) {
      if (querydir_ != &::google::protobuf::internal::kEmptyString) {
        querydir_->clear();
      }
    }
    if (has_rt14()) {
      if (rt14_ != &::google::protobuf::internal::kEmptyString) {
        rt14_->clear();
      }
    }
    if (has_rt15()) {
      if (rt15_ != &::google::protobuf::internal::kEmptyString) {
        rt15_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_entrusttype()) {
      if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
        entrusttype_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_QueryBatchEntrust_Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string RT0 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt0()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt0().data(), this->rt0().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Localhost;
        break;
      }
      
      // optional string Localhost = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Localhost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localhost()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->localhost().data(), this->localhost().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_ReqID;
        break;
      }
      
      // optional string ReqID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ReqID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reqid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->reqid().data(), this->reqid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_FuncID;
        break;
      }
      
      // optional string FuncID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_FuncID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_funcid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->funcid().data(), this->funcid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_DepartmentID;
        break;
      }
      
      // optional string DepartmentID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DepartmentID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_departmentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->departmentid().data(), this->departmentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_RT5;
        break;
      }
      
      // optional string RT5 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt5().data(), this->rt5().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_RT6;
        break;
      }
      
      // optional string RT6 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT6:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt6()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt6().data(), this->rt6().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_CustomID;
        break;
      }
      
      // optional string CustomID = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CustomID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->customid().data(), this->customid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_RT8;
        break;
      }
      
      // optional string RT8 = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT8:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt8()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt8().data(), this->rt8().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_RT9;
        break;
      }
      
      // optional string RT9 = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT9:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt9()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt9().data(), this->rt9().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_EntrustBatchNO;
        break;
      }
      
      // optional string EntrustBatchNO = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustBatchNO:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustbatchno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustbatchno().data(), this->entrustbatchno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_RT11;
        break;
      }
      
      // optional string RT11 = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT11:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt11()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt11().data(), this->rt11().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_CombineMode;
        break;
      }
      
      // optional string CombineMode = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CombineMode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_combinemode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->combinemode().data(), this->combinemode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_QueryDir;
        break;
      }
      
      // optional string QueryDir = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_QueryDir:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_querydir()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->querydir().data(), this->querydir().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_RT14;
        break;
      }
      
      // optional string RT14 = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT14:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt14()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt14().data(), this->rt14().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_RT15;
        break;
      }
      
      // optional string RT15 = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT15:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt15()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt15().data(), this->rt15().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_EntrustType;
        break;
      }
      
      // optional string EntrustType = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrusttype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrusttype().data(), this->entrusttype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_QueryBatchEntrust_Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->rt0(), output);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->localhost(), output);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->reqid(), output);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->funcid(), output);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->departmentid(), output);
  }
  
  // optional string RT5 = 6;
  if (has_rt5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt5().data(), this->rt5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->rt5(), output);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->rt6(), output);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->customid(), output);
  }
  
  // optional string RT8 = 9;
  if (has_rt8()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt8().data(), this->rt8().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->rt8(), output);
  }
  
  // optional string RT9 = 10;
  if (has_rt9()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt9().data(), this->rt9().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->rt9(), output);
  }
  
  // optional string EntrustBatchNO = 11;
  if (has_entrustbatchno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustbatchno().data(), this->entrustbatchno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->entrustbatchno(), output);
  }
  
  // optional string RT11 = 12;
  if (has_rt11()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt11().data(), this->rt11().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->rt11(), output);
  }
  
  // optional string CombineMode = 13;
  if (has_combinemode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->combinemode().data(), this->combinemode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->combinemode(), output);
  }
  
  // optional string QueryDir = 14;
  if (has_querydir()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->querydir().data(), this->querydir().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->querydir(), output);
  }
  
  // optional string RT14 = 15;
  if (has_rt14()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt14().data(), this->rt14().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->rt14(), output);
  }
  
  // optional string RT15 = 16;
  if (has_rt15()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt15().data(), this->rt15().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->rt15(), output);
  }
  
  // optional string EntrustType = 17;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->entrusttype(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_QueryBatchEntrust_Req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rt0(), target);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->localhost(), target);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reqid(), target);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->funcid(), target);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->departmentid(), target);
  }
  
  // optional string RT5 = 6;
  if (has_rt5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt5().data(), this->rt5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->rt5(), target);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->rt6(), target);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->customid(), target);
  }
  
  // optional string RT8 = 9;
  if (has_rt8()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt8().data(), this->rt8().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->rt8(), target);
  }
  
  // optional string RT9 = 10;
  if (has_rt9()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt9().data(), this->rt9().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->rt9(), target);
  }
  
  // optional string EntrustBatchNO = 11;
  if (has_entrustbatchno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustbatchno().data(), this->entrustbatchno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->entrustbatchno(), target);
  }
  
  // optional string RT11 = 12;
  if (has_rt11()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt11().data(), this->rt11().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->rt11(), target);
  }
  
  // optional string CombineMode = 13;
  if (has_combinemode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->combinemode().data(), this->combinemode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->combinemode(), target);
  }
  
  // optional string QueryDir = 14;
  if (has_querydir()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->querydir().data(), this->querydir().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->querydir(), target);
  }
  
  // optional string RT14 = 15;
  if (has_rt14()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt14().data(), this->rt14().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->rt14(), target);
  }
  
  // optional string RT15 = 16;
  if (has_rt15()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt15().data(), this->rt15().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->rt15(), target);
  }
  
  // optional string EntrustType = 17;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->entrusttype(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_QueryBatchEntrust_Req::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string RT0 = 1;
    if (has_rt0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt0());
    }
    
    // optional string Localhost = 2;
    if (has_localhost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localhost());
    }
    
    // optional string ReqID = 3;
    if (has_reqid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reqid());
    }
    
    // optional string FuncID = 4;
    if (has_funcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->funcid());
    }
    
    // optional string DepartmentID = 5;
    if (has_departmentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->departmentid());
    }
    
    // optional string RT5 = 6;
    if (has_rt5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt5());
    }
    
    // optional string RT6 = 7;
    if (has_rt6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt6());
    }
    
    // optional string CustomID = 8;
    if (has_customid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->customid());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string RT8 = 9;
    if (has_rt8()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt8());
    }
    
    // optional string RT9 = 10;
    if (has_rt9()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt9());
    }
    
    // optional string EntrustBatchNO = 11;
    if (has_entrustbatchno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustbatchno());
    }
    
    // optional string RT11 = 12;
    if (has_rt11()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt11());
    }
    
    // optional string CombineMode = 13;
    if (has_combinemode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->combinemode());
    }
    
    // optional string QueryDir = 14;
    if (has_querydir()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->querydir());
    }
    
    // optional string RT14 = 15;
    if (has_rt14()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt14());
    }
    
    // optional string RT15 = 16;
    if (has_rt15()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt15());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string EntrustType = 17;
    if (has_entrusttype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrusttype());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_QueryBatchEntrust_Req::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_QueryBatchEntrust_Req* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_QueryBatchEntrust_Req*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_QueryBatchEntrust_Req::MergeFrom(const INF_QueryBatchEntrust_Req& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rt0()) {
      set_rt0(from.rt0());
    }
    if (from.has_localhost()) {
      set_localhost(from.localhost());
    }
    if (from.has_reqid()) {
      set_reqid(from.reqid());
    }
    if (from.has_funcid()) {
      set_funcid(from.funcid());
    }
    if (from.has_departmentid()) {
      set_departmentid(from.departmentid());
    }
    if (from.has_rt5()) {
      set_rt5(from.rt5());
    }
    if (from.has_rt6()) {
      set_rt6(from.rt6());
    }
    if (from.has_customid()) {
      set_customid(from.customid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_rt8()) {
      set_rt8(from.rt8());
    }
    if (from.has_rt9()) {
      set_rt9(from.rt9());
    }
    if (from.has_entrustbatchno()) {
      set_entrustbatchno(from.entrustbatchno());
    }
    if (from.has_rt11()) {
      set_rt11(from.rt11());
    }
    if (from.has_combinemode()) {
      set_combinemode(from.combinemode());
    }
    if (from.has_querydir()) {
      set_querydir(from.querydir());
    }
    if (from.has_rt14()) {
      set_rt14(from.rt14());
    }
    if (from.has_rt15()) {
      set_rt15(from.rt15());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_entrusttype()) {
      set_entrusttype(from.entrusttype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_QueryBatchEntrust_Req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_QueryBatchEntrust_Req::CopyFrom(const INF_QueryBatchEntrust_Req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_QueryBatchEntrust_Req::IsInitialized() const {
  
  return true;
}

void INF_QueryBatchEntrust_Req::Swap(INF_QueryBatchEntrust_Req* other) {
  if (other != this) {
    std::swap(rt0_, other->rt0_);
    std::swap(localhost_, other->localhost_);
    std::swap(reqid_, other->reqid_);
    std::swap(funcid_, other->funcid_);
    std::swap(departmentid_, other->departmentid_);
    std::swap(rt5_, other->rt5_);
    std::swap(rt6_, other->rt6_);
    std::swap(customid_, other->customid_);
    std::swap(rt8_, other->rt8_);
    std::swap(rt9_, other->rt9_);
    std::swap(entrustbatchno_, other->entrustbatchno_);
    std::swap(rt11_, other->rt11_);
    std::swap(combinemode_, other->combinemode_);
    std::swap(querydir_, other->querydir_);
    std::swap(rt14_, other->rt14_);
    std::swap(rt15_, other->rt15_);
    std::swap(entrusttype_, other->entrusttype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_QueryBatchEntrust_Req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_QueryBatchEntrust_Req_descriptor_;
  metadata.reflection = INF_QueryBatchEntrust_Req_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_BatchEntrust_Req::kRT0FieldNumber;
const int INF_BatchEntrust_Req::kLocalhostFieldNumber;
const int INF_BatchEntrust_Req::kReqIDFieldNumber;
const int INF_BatchEntrust_Req::kFuncIDFieldNumber;
const int INF_BatchEntrust_Req::kDepartmentIDFieldNumber;
const int INF_BatchEntrust_Req::kRT5FieldNumber;
const int INF_BatchEntrust_Req::kRT6FieldNumber;
const int INF_BatchEntrust_Req::kCustomIDFieldNumber;
const int INF_BatchEntrust_Req::kETFserialNOFieldNumber;
const int INF_BatchEntrust_Req::kControlArgFieldNumber;
const int INF_BatchEntrust_Req::kEntrustTypeFieldNumber;
const int INF_BatchEntrust_Req::kEntrustBatchNOFieldNumber;
const int INF_BatchEntrust_Req::kEntrustHistoryNumFieldNumber;
const int INF_BatchEntrust_Req::kEntrustDataFieldNumber;
#endif  // !_MSC_VER

INF_BatchEntrust_Req::INF_BatchEntrust_Req()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_BatchEntrust_Req::InitAsDefaultInstance() {
}

INF_BatchEntrust_Req::INF_BatchEntrust_Req(const INF_BatchEntrust_Req& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_BatchEntrust_Req::SharedCtor() {
  _cached_size_ = 0;
  rt0_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  localhost_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  reqid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  funcid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  departmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt5_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt6_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  customid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  etfserialno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  controlarg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrusttype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustbatchno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrusthistorynum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_BatchEntrust_Req::~INF_BatchEntrust_Req() {
  SharedDtor();
}

void INF_BatchEntrust_Req::SharedDtor() {
  if (rt0_ != &::google::protobuf::internal::kEmptyString) {
    delete rt0_;
  }
  if (localhost_ != &::google::protobuf::internal::kEmptyString) {
    delete localhost_;
  }
  if (reqid_ != &::google::protobuf::internal::kEmptyString) {
    delete reqid_;
  }
  if (funcid_ != &::google::protobuf::internal::kEmptyString) {
    delete funcid_;
  }
  if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
    delete departmentid_;
  }
  if (rt5_ != &::google::protobuf::internal::kEmptyString) {
    delete rt5_;
  }
  if (rt6_ != &::google::protobuf::internal::kEmptyString) {
    delete rt6_;
  }
  if (customid_ != &::google::protobuf::internal::kEmptyString) {
    delete customid_;
  }
  if (etfserialno_ != &::google::protobuf::internal::kEmptyString) {
    delete etfserialno_;
  }
  if (controlarg_ != &::google::protobuf::internal::kEmptyString) {
    delete controlarg_;
  }
  if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
    delete entrusttype_;
  }
  if (entrustbatchno_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustbatchno_;
  }
  if (entrusthistorynum_ != &::google::protobuf::internal::kEmptyString) {
    delete entrusthistorynum_;
  }
  if (entrustdata_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustdata_;
  }
  if (this != default_instance_) {
  }
}

void INF_BatchEntrust_Req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_BatchEntrust_Req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_BatchEntrust_Req_descriptor_;
}

const INF_BatchEntrust_Req& INF_BatchEntrust_Req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_BatchEntrust_Req* INF_BatchEntrust_Req::default_instance_ = NULL;

INF_BatchEntrust_Req* INF_BatchEntrust_Req::New() const {
  return new INF_BatchEntrust_Req;
}

void INF_BatchEntrust_Req::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_rt0()) {
      if (rt0_ != &::google::protobuf::internal::kEmptyString) {
        rt0_->clear();
      }
    }
    if (has_localhost()) {
      if (localhost_ != &::google::protobuf::internal::kEmptyString) {
        localhost_->clear();
      }
    }
    if (has_reqid()) {
      if (reqid_ != &::google::protobuf::internal::kEmptyString) {
        reqid_->clear();
      }
    }
    if (has_funcid()) {
      if (funcid_ != &::google::protobuf::internal::kEmptyString) {
        funcid_->clear();
      }
    }
    if (has_departmentid()) {
      if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
        departmentid_->clear();
      }
    }
    if (has_rt5()) {
      if (rt5_ != &::google::protobuf::internal::kEmptyString) {
        rt5_->clear();
      }
    }
    if (has_rt6()) {
      if (rt6_ != &::google::protobuf::internal::kEmptyString) {
        rt6_->clear();
      }
    }
    if (has_customid()) {
      if (customid_ != &::google::protobuf::internal::kEmptyString) {
        customid_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_etfserialno()) {
      if (etfserialno_ != &::google::protobuf::internal::kEmptyString) {
        etfserialno_->clear();
      }
    }
    if (has_controlarg()) {
      if (controlarg_ != &::google::protobuf::internal::kEmptyString) {
        controlarg_->clear();
      }
    }
    if (has_entrusttype()) {
      if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
        entrusttype_->clear();
      }
    }
    if (has_entrustbatchno()) {
      if (entrustbatchno_ != &::google::protobuf::internal::kEmptyString) {
        entrustbatchno_->clear();
      }
    }
    if (has_entrusthistorynum()) {
      if (entrusthistorynum_ != &::google::protobuf::internal::kEmptyString) {
        entrusthistorynum_->clear();
      }
    }
    if (has_entrustdata()) {
      if (entrustdata_ != &::google::protobuf::internal::kEmptyString) {
        entrustdata_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_BatchEntrust_Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string RT0 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt0()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt0().data(), this->rt0().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Localhost;
        break;
      }
      
      // optional string Localhost = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Localhost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localhost()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->localhost().data(), this->localhost().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_ReqID;
        break;
      }
      
      // optional string ReqID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ReqID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reqid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->reqid().data(), this->reqid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_FuncID;
        break;
      }
      
      // optional string FuncID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_FuncID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_funcid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->funcid().data(), this->funcid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_DepartmentID;
        break;
      }
      
      // optional string DepartmentID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DepartmentID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_departmentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->departmentid().data(), this->departmentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_RT5;
        break;
      }
      
      // optional string RT5 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt5().data(), this->rt5().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_RT6;
        break;
      }
      
      // optional string RT6 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT6:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt6()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt6().data(), this->rt6().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_CustomID;
        break;
      }
      
      // optional string CustomID = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CustomID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->customid().data(), this->customid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_ETFserialNO;
        break;
      }
      
      // optional string ETFserialNO = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ETFserialNO:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etfserialno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->etfserialno().data(), this->etfserialno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_ControlArg;
        break;
      }
      
      // optional string ControlArg = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ControlArg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_controlarg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->controlarg().data(), this->controlarg().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_EntrustType;
        break;
      }
      
      // optional string EntrustType = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrusttype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrusttype().data(), this->entrusttype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_EntrustBatchNO;
        break;
      }
      
      // optional string EntrustBatchNO = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustBatchNO:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustbatchno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustbatchno().data(), this->entrustbatchno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_EntrustHistoryNum;
        break;
      }
      
      // optional string EntrustHistoryNum = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustHistoryNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrusthistorynum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrusthistorynum().data(), this->entrusthistorynum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_EntrustData;
        break;
      }
      
      // optional string EntrustData = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustdata().data(), this->entrustdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_BatchEntrust_Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->rt0(), output);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->localhost(), output);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->reqid(), output);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->funcid(), output);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->departmentid(), output);
  }
  
  // optional string RT5 = 6;
  if (has_rt5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt5().data(), this->rt5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->rt5(), output);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->rt6(), output);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->customid(), output);
  }
  
  // optional string ETFserialNO = 9;
  if (has_etfserialno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etfserialno().data(), this->etfserialno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->etfserialno(), output);
  }
  
  // optional string ControlArg = 10;
  if (has_controlarg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->controlarg().data(), this->controlarg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->controlarg(), output);
  }
  
  // optional string EntrustType = 11;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->entrusttype(), output);
  }
  
  // optional string EntrustBatchNO = 12;
  if (has_entrustbatchno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustbatchno().data(), this->entrustbatchno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->entrustbatchno(), output);
  }
  
  // optional string EntrustHistoryNum = 13;
  if (has_entrusthistorynum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusthistorynum().data(), this->entrusthistorynum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->entrusthistorynum(), output);
  }
  
  // optional string EntrustData = 14;
  if (has_entrustdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustdata().data(), this->entrustdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->entrustdata(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_BatchEntrust_Req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rt0(), target);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->localhost(), target);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reqid(), target);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->funcid(), target);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->departmentid(), target);
  }
  
  // optional string RT5 = 6;
  if (has_rt5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt5().data(), this->rt5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->rt5(), target);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->rt6(), target);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->customid(), target);
  }
  
  // optional string ETFserialNO = 9;
  if (has_etfserialno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etfserialno().data(), this->etfserialno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->etfserialno(), target);
  }
  
  // optional string ControlArg = 10;
  if (has_controlarg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->controlarg().data(), this->controlarg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->controlarg(), target);
  }
  
  // optional string EntrustType = 11;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->entrusttype(), target);
  }
  
  // optional string EntrustBatchNO = 12;
  if (has_entrustbatchno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustbatchno().data(), this->entrustbatchno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->entrustbatchno(), target);
  }
  
  // optional string EntrustHistoryNum = 13;
  if (has_entrusthistorynum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusthistorynum().data(), this->entrusthistorynum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->entrusthistorynum(), target);
  }
  
  // optional string EntrustData = 14;
  if (has_entrustdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustdata().data(), this->entrustdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->entrustdata(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_BatchEntrust_Req::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string RT0 = 1;
    if (has_rt0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt0());
    }
    
    // optional string Localhost = 2;
    if (has_localhost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localhost());
    }
    
    // optional string ReqID = 3;
    if (has_reqid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reqid());
    }
    
    // optional string FuncID = 4;
    if (has_funcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->funcid());
    }
    
    // optional string DepartmentID = 5;
    if (has_departmentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->departmentid());
    }
    
    // optional string RT5 = 6;
    if (has_rt5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt5());
    }
    
    // optional string RT6 = 7;
    if (has_rt6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt6());
    }
    
    // optional string CustomID = 8;
    if (has_customid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->customid());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string ETFserialNO = 9;
    if (has_etfserialno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->etfserialno());
    }
    
    // optional string ControlArg = 10;
    if (has_controlarg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->controlarg());
    }
    
    // optional string EntrustType = 11;
    if (has_entrusttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrusttype());
    }
    
    // optional string EntrustBatchNO = 12;
    if (has_entrustbatchno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustbatchno());
    }
    
    // optional string EntrustHistoryNum = 13;
    if (has_entrusthistorynum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrusthistorynum());
    }
    
    // optional string EntrustData = 14;
    if (has_entrustdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustdata());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_BatchEntrust_Req::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_BatchEntrust_Req* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_BatchEntrust_Req*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_BatchEntrust_Req::MergeFrom(const INF_BatchEntrust_Req& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rt0()) {
      set_rt0(from.rt0());
    }
    if (from.has_localhost()) {
      set_localhost(from.localhost());
    }
    if (from.has_reqid()) {
      set_reqid(from.reqid());
    }
    if (from.has_funcid()) {
      set_funcid(from.funcid());
    }
    if (from.has_departmentid()) {
      set_departmentid(from.departmentid());
    }
    if (from.has_rt5()) {
      set_rt5(from.rt5());
    }
    if (from.has_rt6()) {
      set_rt6(from.rt6());
    }
    if (from.has_customid()) {
      set_customid(from.customid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_etfserialno()) {
      set_etfserialno(from.etfserialno());
    }
    if (from.has_controlarg()) {
      set_controlarg(from.controlarg());
    }
    if (from.has_entrusttype()) {
      set_entrusttype(from.entrusttype());
    }
    if (from.has_entrustbatchno()) {
      set_entrustbatchno(from.entrustbatchno());
    }
    if (from.has_entrusthistorynum()) {
      set_entrusthistorynum(from.entrusthistorynum());
    }
    if (from.has_entrustdata()) {
      set_entrustdata(from.entrustdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_BatchEntrust_Req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_BatchEntrust_Req::CopyFrom(const INF_BatchEntrust_Req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_BatchEntrust_Req::IsInitialized() const {
  
  return true;
}

void INF_BatchEntrust_Req::Swap(INF_BatchEntrust_Req* other) {
  if (other != this) {
    std::swap(rt0_, other->rt0_);
    std::swap(localhost_, other->localhost_);
    std::swap(reqid_, other->reqid_);
    std::swap(funcid_, other->funcid_);
    std::swap(departmentid_, other->departmentid_);
    std::swap(rt5_, other->rt5_);
    std::swap(rt6_, other->rt6_);
    std::swap(customid_, other->customid_);
    std::swap(etfserialno_, other->etfserialno_);
    std::swap(controlarg_, other->controlarg_);
    std::swap(entrusttype_, other->entrusttype_);
    std::swap(entrustbatchno_, other->entrustbatchno_);
    std::swap(entrusthistorynum_, other->entrusthistorynum_);
    std::swap(entrustdata_, other->entrustdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_BatchEntrust_Req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_BatchEntrust_Req_descriptor_;
  metadata.reflection = INF_BatchEntrust_Req_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_BatchCancel_Req::kRT0FieldNumber;
const int INF_BatchCancel_Req::kLocalhostFieldNumber;
const int INF_BatchCancel_Req::kReqIDFieldNumber;
const int INF_BatchCancel_Req::kFuncIDFieldNumber;
const int INF_BatchCancel_Req::kDepartmentIDFieldNumber;
const int INF_BatchCancel_Req::kRT5FieldNumber;
const int INF_BatchCancel_Req::kRT6FieldNumber;
const int INF_BatchCancel_Req::kCustomIDFieldNumber;
const int INF_BatchCancel_Req::kEntrustBatchNOFieldNumber;
const int INF_BatchCancel_Req::kEntrustTypeFieldNumber;
#endif  // !_MSC_VER

INF_BatchCancel_Req::INF_BatchCancel_Req()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_BatchCancel_Req::InitAsDefaultInstance() {
}

INF_BatchCancel_Req::INF_BatchCancel_Req(const INF_BatchCancel_Req& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_BatchCancel_Req::SharedCtor() {
  _cached_size_ = 0;
  rt0_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  localhost_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  reqid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  funcid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  departmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt5_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt6_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  customid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustbatchno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrusttype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_BatchCancel_Req::~INF_BatchCancel_Req() {
  SharedDtor();
}

void INF_BatchCancel_Req::SharedDtor() {
  if (rt0_ != &::google::protobuf::internal::kEmptyString) {
    delete rt0_;
  }
  if (localhost_ != &::google::protobuf::internal::kEmptyString) {
    delete localhost_;
  }
  if (reqid_ != &::google::protobuf::internal::kEmptyString) {
    delete reqid_;
  }
  if (funcid_ != &::google::protobuf::internal::kEmptyString) {
    delete funcid_;
  }
  if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
    delete departmentid_;
  }
  if (rt5_ != &::google::protobuf::internal::kEmptyString) {
    delete rt5_;
  }
  if (rt6_ != &::google::protobuf::internal::kEmptyString) {
    delete rt6_;
  }
  if (customid_ != &::google::protobuf::internal::kEmptyString) {
    delete customid_;
  }
  if (entrustbatchno_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustbatchno_;
  }
  if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
    delete entrusttype_;
  }
  if (this != default_instance_) {
  }
}

void INF_BatchCancel_Req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_BatchCancel_Req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_BatchCancel_Req_descriptor_;
}

const INF_BatchCancel_Req& INF_BatchCancel_Req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_BatchCancel_Req* INF_BatchCancel_Req::default_instance_ = NULL;

INF_BatchCancel_Req* INF_BatchCancel_Req::New() const {
  return new INF_BatchCancel_Req;
}

void INF_BatchCancel_Req::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_rt0()) {
      if (rt0_ != &::google::protobuf::internal::kEmptyString) {
        rt0_->clear();
      }
    }
    if (has_localhost()) {
      if (localhost_ != &::google::protobuf::internal::kEmptyString) {
        localhost_->clear();
      }
    }
    if (has_reqid()) {
      if (reqid_ != &::google::protobuf::internal::kEmptyString) {
        reqid_->clear();
      }
    }
    if (has_funcid()) {
      if (funcid_ != &::google::protobuf::internal::kEmptyString) {
        funcid_->clear();
      }
    }
    if (has_departmentid()) {
      if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
        departmentid_->clear();
      }
    }
    if (has_rt5()) {
      if (rt5_ != &::google::protobuf::internal::kEmptyString) {
        rt5_->clear();
      }
    }
    if (has_rt6()) {
      if (rt6_ != &::google::protobuf::internal::kEmptyString) {
        rt6_->clear();
      }
    }
    if (has_customid()) {
      if (customid_ != &::google::protobuf::internal::kEmptyString) {
        customid_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_entrustbatchno()) {
      if (entrustbatchno_ != &::google::protobuf::internal::kEmptyString) {
        entrustbatchno_->clear();
      }
    }
    if (has_entrusttype()) {
      if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
        entrusttype_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_BatchCancel_Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string RT0 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt0()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt0().data(), this->rt0().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Localhost;
        break;
      }
      
      // optional string Localhost = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Localhost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localhost()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->localhost().data(), this->localhost().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_ReqID;
        break;
      }
      
      // optional string ReqID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ReqID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reqid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->reqid().data(), this->reqid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_FuncID;
        break;
      }
      
      // optional string FuncID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_FuncID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_funcid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->funcid().data(), this->funcid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_DepartmentID;
        break;
      }
      
      // optional string DepartmentID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DepartmentID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_departmentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->departmentid().data(), this->departmentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_RT5;
        break;
      }
      
      // optional string RT5 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt5().data(), this->rt5().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_RT6;
        break;
      }
      
      // optional string RT6 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT6:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt6()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt6().data(), this->rt6().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_CustomID;
        break;
      }
      
      // optional string CustomID = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CustomID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->customid().data(), this->customid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_EntrustBatchNO;
        break;
      }
      
      // optional string EntrustBatchNO = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustBatchNO:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustbatchno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustbatchno().data(), this->entrustbatchno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_EntrustType;
        break;
      }
      
      // optional string EntrustType = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrusttype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrusttype().data(), this->entrusttype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_BatchCancel_Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->rt0(), output);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->localhost(), output);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->reqid(), output);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->funcid(), output);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->departmentid(), output);
  }
  
  // optional string RT5 = 6;
  if (has_rt5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt5().data(), this->rt5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->rt5(), output);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->rt6(), output);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->customid(), output);
  }
  
  // optional string EntrustBatchNO = 9;
  if (has_entrustbatchno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustbatchno().data(), this->entrustbatchno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->entrustbatchno(), output);
  }
  
  // optional string EntrustType = 10;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->entrusttype(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_BatchCancel_Req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rt0(), target);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->localhost(), target);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reqid(), target);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->funcid(), target);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->departmentid(), target);
  }
  
  // optional string RT5 = 6;
  if (has_rt5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt5().data(), this->rt5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->rt5(), target);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->rt6(), target);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->customid(), target);
  }
  
  // optional string EntrustBatchNO = 9;
  if (has_entrustbatchno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustbatchno().data(), this->entrustbatchno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->entrustbatchno(), target);
  }
  
  // optional string EntrustType = 10;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->entrusttype(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_BatchCancel_Req::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string RT0 = 1;
    if (has_rt0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt0());
    }
    
    // optional string Localhost = 2;
    if (has_localhost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localhost());
    }
    
    // optional string ReqID = 3;
    if (has_reqid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reqid());
    }
    
    // optional string FuncID = 4;
    if (has_funcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->funcid());
    }
    
    // optional string DepartmentID = 5;
    if (has_departmentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->departmentid());
    }
    
    // optional string RT5 = 6;
    if (has_rt5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt5());
    }
    
    // optional string RT6 = 7;
    if (has_rt6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt6());
    }
    
    // optional string CustomID = 8;
    if (has_customid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->customid());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string EntrustBatchNO = 9;
    if (has_entrustbatchno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustbatchno());
    }
    
    // optional string EntrustType = 10;
    if (has_entrusttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrusttype());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_BatchCancel_Req::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_BatchCancel_Req* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_BatchCancel_Req*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_BatchCancel_Req::MergeFrom(const INF_BatchCancel_Req& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rt0()) {
      set_rt0(from.rt0());
    }
    if (from.has_localhost()) {
      set_localhost(from.localhost());
    }
    if (from.has_reqid()) {
      set_reqid(from.reqid());
    }
    if (from.has_funcid()) {
      set_funcid(from.funcid());
    }
    if (from.has_departmentid()) {
      set_departmentid(from.departmentid());
    }
    if (from.has_rt5()) {
      set_rt5(from.rt5());
    }
    if (from.has_rt6()) {
      set_rt6(from.rt6());
    }
    if (from.has_customid()) {
      set_customid(from.customid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_entrustbatchno()) {
      set_entrustbatchno(from.entrustbatchno());
    }
    if (from.has_entrusttype()) {
      set_entrusttype(from.entrusttype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_BatchCancel_Req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_BatchCancel_Req::CopyFrom(const INF_BatchCancel_Req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_BatchCancel_Req::IsInitialized() const {
  
  return true;
}

void INF_BatchCancel_Req::Swap(INF_BatchCancel_Req* other) {
  if (other != this) {
    std::swap(rt0_, other->rt0_);
    std::swap(localhost_, other->localhost_);
    std::swap(reqid_, other->reqid_);
    std::swap(funcid_, other->funcid_);
    std::swap(departmentid_, other->departmentid_);
    std::swap(rt5_, other->rt5_);
    std::swap(rt6_, other->rt6_);
    std::swap(customid_, other->customid_);
    std::swap(entrustbatchno_, other->entrustbatchno_);
    std::swap(entrusttype_, other->entrusttype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_BatchCancel_Req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_BatchCancel_Req_descriptor_;
  metadata.reflection = INF_BatchCancel_Req_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_QueryVaildRedemNum_Req::kRT0FieldNumber;
const int INF_QueryVaildRedemNum_Req::kLocalhostFieldNumber;
const int INF_QueryVaildRedemNum_Req::kReqIDFieldNumber;
const int INF_QueryVaildRedemNum_Req::kFuncIDFieldNumber;
const int INF_QueryVaildRedemNum_Req::kDepartmentIDFieldNumber;
const int INF_QueryVaildRedemNum_Req::kRT5FieldNumber;
const int INF_QueryVaildRedemNum_Req::kRT6FieldNumber;
const int INF_QueryVaildRedemNum_Req::kCustomIDFieldNumber;
const int INF_QueryVaildRedemNum_Req::kETFserialNumberFieldNumber;
const int INF_QueryVaildRedemNum_Req::kSecurityCodeFieldNumber;
const int INF_QueryVaildRedemNum_Req::kPurRedemFlagFieldNumber;
const int INF_QueryVaildRedemNum_Req::kEntrustTypeFieldNumber;
#endif  // !_MSC_VER

INF_QueryVaildRedemNum_Req::INF_QueryVaildRedemNum_Req()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_QueryVaildRedemNum_Req::InitAsDefaultInstance() {
}

INF_QueryVaildRedemNum_Req::INF_QueryVaildRedemNum_Req(const INF_QueryVaildRedemNum_Req& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_QueryVaildRedemNum_Req::SharedCtor() {
  _cached_size_ = 0;
  rt0_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  localhost_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  reqid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  funcid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  departmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt5_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rt6_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  customid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  etfserialnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  securitycode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  purredemflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrusttype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_QueryVaildRedemNum_Req::~INF_QueryVaildRedemNum_Req() {
  SharedDtor();
}

void INF_QueryVaildRedemNum_Req::SharedDtor() {
  if (rt0_ != &::google::protobuf::internal::kEmptyString) {
    delete rt0_;
  }
  if (localhost_ != &::google::protobuf::internal::kEmptyString) {
    delete localhost_;
  }
  if (reqid_ != &::google::protobuf::internal::kEmptyString) {
    delete reqid_;
  }
  if (funcid_ != &::google::protobuf::internal::kEmptyString) {
    delete funcid_;
  }
  if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
    delete departmentid_;
  }
  if (rt5_ != &::google::protobuf::internal::kEmptyString) {
    delete rt5_;
  }
  if (rt6_ != &::google::protobuf::internal::kEmptyString) {
    delete rt6_;
  }
  if (customid_ != &::google::protobuf::internal::kEmptyString) {
    delete customid_;
  }
  if (etfserialnumber_ != &::google::protobuf::internal::kEmptyString) {
    delete etfserialnumber_;
  }
  if (securitycode_ != &::google::protobuf::internal::kEmptyString) {
    delete securitycode_;
  }
  if (purredemflag_ != &::google::protobuf::internal::kEmptyString) {
    delete purredemflag_;
  }
  if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
    delete entrusttype_;
  }
  if (this != default_instance_) {
  }
}

void INF_QueryVaildRedemNum_Req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_QueryVaildRedemNum_Req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_QueryVaildRedemNum_Req_descriptor_;
}

const INF_QueryVaildRedemNum_Req& INF_QueryVaildRedemNum_Req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_QueryVaildRedemNum_Req* INF_QueryVaildRedemNum_Req::default_instance_ = NULL;

INF_QueryVaildRedemNum_Req* INF_QueryVaildRedemNum_Req::New() const {
  return new INF_QueryVaildRedemNum_Req;
}

void INF_QueryVaildRedemNum_Req::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_rt0()) {
      if (rt0_ != &::google::protobuf::internal::kEmptyString) {
        rt0_->clear();
      }
    }
    if (has_localhost()) {
      if (localhost_ != &::google::protobuf::internal::kEmptyString) {
        localhost_->clear();
      }
    }
    if (has_reqid()) {
      if (reqid_ != &::google::protobuf::internal::kEmptyString) {
        reqid_->clear();
      }
    }
    if (has_funcid()) {
      if (funcid_ != &::google::protobuf::internal::kEmptyString) {
        funcid_->clear();
      }
    }
    if (has_departmentid()) {
      if (departmentid_ != &::google::protobuf::internal::kEmptyString) {
        departmentid_->clear();
      }
    }
    if (has_rt5()) {
      if (rt5_ != &::google::protobuf::internal::kEmptyString) {
        rt5_->clear();
      }
    }
    if (has_rt6()) {
      if (rt6_ != &::google::protobuf::internal::kEmptyString) {
        rt6_->clear();
      }
    }
    if (has_customid()) {
      if (customid_ != &::google::protobuf::internal::kEmptyString) {
        customid_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_etfserialnumber()) {
      if (etfserialnumber_ != &::google::protobuf::internal::kEmptyString) {
        etfserialnumber_->clear();
      }
    }
    if (has_securitycode()) {
      if (securitycode_ != &::google::protobuf::internal::kEmptyString) {
        securitycode_->clear();
      }
    }
    if (has_purredemflag()) {
      if (purredemflag_ != &::google::protobuf::internal::kEmptyString) {
        purredemflag_->clear();
      }
    }
    if (has_entrusttype()) {
      if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
        entrusttype_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_QueryVaildRedemNum_Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string RT0 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt0()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt0().data(), this->rt0().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Localhost;
        break;
      }
      
      // optional string Localhost = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Localhost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localhost()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->localhost().data(), this->localhost().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_ReqID;
        break;
      }
      
      // optional string ReqID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ReqID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reqid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->reqid().data(), this->reqid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_FuncID;
        break;
      }
      
      // optional string FuncID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_FuncID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_funcid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->funcid().data(), this->funcid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_DepartmentID;
        break;
      }
      
      // optional string DepartmentID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DepartmentID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_departmentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->departmentid().data(), this->departmentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_RT5;
        break;
      }
      
      // optional string RT5 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt5().data(), this->rt5().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_RT6;
        break;
      }
      
      // optional string RT6 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RT6:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rt6()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rt6().data(), this->rt6().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_CustomID;
        break;
      }
      
      // optional string CustomID = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CustomID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->customid().data(), this->customid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_ETFserialNumber;
        break;
      }
      
      // optional string ETFserialNumber = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ETFserialNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etfserialnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->etfserialnumber().data(), this->etfserialnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_SecurityCode;
        break;
      }
      
      // optional string SecurityCode = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SecurityCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_securitycode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->securitycode().data(), this->securitycode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_PurRedemFlag;
        break;
      }
      
      // optional string PurRedemFlag = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_PurRedemFlag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_purredemflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->purredemflag().data(), this->purredemflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_EntrustType;
        break;
      }
      
      // optional string EntrustType = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrusttype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrusttype().data(), this->entrusttype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_QueryVaildRedemNum_Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->rt0(), output);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->localhost(), output);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->reqid(), output);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->funcid(), output);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->departmentid(), output);
  }
  
  // optional string RT5 = 6;
  if (has_rt5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt5().data(), this->rt5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->rt5(), output);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->rt6(), output);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->customid(), output);
  }
  
  // optional string ETFserialNumber = 9;
  if (has_etfserialnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etfserialnumber().data(), this->etfserialnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->etfserialnumber(), output);
  }
  
  // optional string SecurityCode = 10;
  if (has_securitycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitycode().data(), this->securitycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->securitycode(), output);
  }
  
  // optional string PurRedemFlag = 11;
  if (has_purredemflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->purredemflag().data(), this->purredemflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->purredemflag(), output);
  }
  
  // optional string EntrustType = 12;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->entrusttype(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_QueryVaildRedemNum_Req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string RT0 = 1;
  if (has_rt0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt0().data(), this->rt0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rt0(), target);
  }
  
  // optional string Localhost = 2;
  if (has_localhost()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localhost().data(), this->localhost().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->localhost(), target);
  }
  
  // optional string ReqID = 3;
  if (has_reqid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->reqid().data(), this->reqid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reqid(), target);
  }
  
  // optional string FuncID = 4;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->funcid(), target);
  }
  
  // optional string DepartmentID = 5;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->departmentid(), target);
  }
  
  // optional string RT5 = 6;
  if (has_rt5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt5().data(), this->rt5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->rt5(), target);
  }
  
  // optional string RT6 = 7;
  if (has_rt6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rt6().data(), this->rt6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->rt6(), target);
  }
  
  // optional string CustomID = 8;
  if (has_customid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->customid().data(), this->customid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->customid(), target);
  }
  
  // optional string ETFserialNumber = 9;
  if (has_etfserialnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etfserialnumber().data(), this->etfserialnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->etfserialnumber(), target);
  }
  
  // optional string SecurityCode = 10;
  if (has_securitycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitycode().data(), this->securitycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->securitycode(), target);
  }
  
  // optional string PurRedemFlag = 11;
  if (has_purredemflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->purredemflag().data(), this->purredemflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->purredemflag(), target);
  }
  
  // optional string EntrustType = 12;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->entrusttype(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_QueryVaildRedemNum_Req::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string RT0 = 1;
    if (has_rt0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt0());
    }
    
    // optional string Localhost = 2;
    if (has_localhost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localhost());
    }
    
    // optional string ReqID = 3;
    if (has_reqid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reqid());
    }
    
    // optional string FuncID = 4;
    if (has_funcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->funcid());
    }
    
    // optional string DepartmentID = 5;
    if (has_departmentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->departmentid());
    }
    
    // optional string RT5 = 6;
    if (has_rt5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt5());
    }
    
    // optional string RT6 = 7;
    if (has_rt6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rt6());
    }
    
    // optional string CustomID = 8;
    if (has_customid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->customid());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string ETFserialNumber = 9;
    if (has_etfserialnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->etfserialnumber());
    }
    
    // optional string SecurityCode = 10;
    if (has_securitycode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->securitycode());
    }
    
    // optional string PurRedemFlag = 11;
    if (has_purredemflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->purredemflag());
    }
    
    // optional string EntrustType = 12;
    if (has_entrusttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrusttype());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_QueryVaildRedemNum_Req::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_QueryVaildRedemNum_Req* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_QueryVaildRedemNum_Req*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_QueryVaildRedemNum_Req::MergeFrom(const INF_QueryVaildRedemNum_Req& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rt0()) {
      set_rt0(from.rt0());
    }
    if (from.has_localhost()) {
      set_localhost(from.localhost());
    }
    if (from.has_reqid()) {
      set_reqid(from.reqid());
    }
    if (from.has_funcid()) {
      set_funcid(from.funcid());
    }
    if (from.has_departmentid()) {
      set_departmentid(from.departmentid());
    }
    if (from.has_rt5()) {
      set_rt5(from.rt5());
    }
    if (from.has_rt6()) {
      set_rt6(from.rt6());
    }
    if (from.has_customid()) {
      set_customid(from.customid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_etfserialnumber()) {
      set_etfserialnumber(from.etfserialnumber());
    }
    if (from.has_securitycode()) {
      set_securitycode(from.securitycode());
    }
    if (from.has_purredemflag()) {
      set_purredemflag(from.purredemflag());
    }
    if (from.has_entrusttype()) {
      set_entrusttype(from.entrusttype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_QueryVaildRedemNum_Req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_QueryVaildRedemNum_Req::CopyFrom(const INF_QueryVaildRedemNum_Req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_QueryVaildRedemNum_Req::IsInitialized() const {
  
  return true;
}

void INF_QueryVaildRedemNum_Req::Swap(INF_QueryVaildRedemNum_Req* other) {
  if (other != this) {
    std::swap(rt0_, other->rt0_);
    std::swap(localhost_, other->localhost_);
    std::swap(reqid_, other->reqid_);
    std::swap(funcid_, other->funcid_);
    std::swap(departmentid_, other->departmentid_);
    std::swap(rt5_, other->rt5_);
    std::swap(rt6_, other->rt6_);
    std::swap(customid_, other->customid_);
    std::swap(etfserialnumber_, other->etfserialnumber_);
    std::swap(securitycode_, other->securitycode_);
    std::swap(purredemflag_, other->purredemflag_);
    std::swap(entrusttype_, other->entrusttype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_QueryVaildRedemNum_Req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_QueryVaildRedemNum_Req_descriptor_;
  metadata.reflection = INF_QueryVaildRedemNum_Req_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_OneEntrust_Ack::kEntrustSerialFieldNumber;
const int INF_OneEntrust_Ack::kValidFieldNumber;
const int INF_OneEntrust_Ack::kRespFlagFieldNumber;
const int INF_OneEntrust_Ack::kIsSuccessFieldNumber;
const int INF_OneEntrust_Ack::kEntrustSeqFieldNumber;
const int INF_OneEntrust_Ack::kEntrustBatchNOFieldNumber;
const int INF_OneEntrust_Ack::kSuccessNumFieldNumber;
#endif  // !_MSC_VER

INF_OneEntrust_Ack::INF_OneEntrust_Ack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_OneEntrust_Ack::InitAsDefaultInstance() {
}

INF_OneEntrust_Ack::INF_OneEntrust_Ack(const INF_OneEntrust_Ack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_OneEntrust_Ack::SharedCtor() {
  _cached_size_ = 0;
  entrustserial_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  valid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  respflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  issuccess_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustseq_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustbatchno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  successnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_OneEntrust_Ack::~INF_OneEntrust_Ack() {
  SharedDtor();
}

void INF_OneEntrust_Ack::SharedDtor() {
  if (entrustserial_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustserial_;
  }
  if (valid_ != &::google::protobuf::internal::kEmptyString) {
    delete valid_;
  }
  if (respflag_ != &::google::protobuf::internal::kEmptyString) {
    delete respflag_;
  }
  if (issuccess_ != &::google::protobuf::internal::kEmptyString) {
    delete issuccess_;
  }
  if (entrustseq_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustseq_;
  }
  if (entrustbatchno_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustbatchno_;
  }
  if (successnum_ != &::google::protobuf::internal::kEmptyString) {
    delete successnum_;
  }
  if (this != default_instance_) {
  }
}

void INF_OneEntrust_Ack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_OneEntrust_Ack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_OneEntrust_Ack_descriptor_;
}

const INF_OneEntrust_Ack& INF_OneEntrust_Ack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_OneEntrust_Ack* INF_OneEntrust_Ack::default_instance_ = NULL;

INF_OneEntrust_Ack* INF_OneEntrust_Ack::New() const {
  return new INF_OneEntrust_Ack;
}

void INF_OneEntrust_Ack::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_entrustserial()) {
      if (entrustserial_ != &::google::protobuf::internal::kEmptyString) {
        entrustserial_->clear();
      }
    }
    if (has_valid()) {
      if (valid_ != &::google::protobuf::internal::kEmptyString) {
        valid_->clear();
      }
    }
    if (has_respflag()) {
      if (respflag_ != &::google::protobuf::internal::kEmptyString) {
        respflag_->clear();
      }
    }
    if (has_issuccess()) {
      if (issuccess_ != &::google::protobuf::internal::kEmptyString) {
        issuccess_->clear();
      }
    }
    if (has_entrustseq()) {
      if (entrustseq_ != &::google::protobuf::internal::kEmptyString) {
        entrustseq_->clear();
      }
    }
    if (has_entrustbatchno()) {
      if (entrustbatchno_ != &::google::protobuf::internal::kEmptyString) {
        entrustbatchno_->clear();
      }
    }
    if (has_successnum()) {
      if (successnum_ != &::google::protobuf::internal::kEmptyString) {
        successnum_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_OneEntrust_Ack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string EntrustSerial = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustserial()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustserial().data(), this->entrustserial().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Valid;
        break;
      }
      
      // optional string Valid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Valid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_valid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->valid().data(), this->valid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_RespFlag;
        break;
      }
      
      // optional string RespFlag = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RespFlag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_respflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->respflag().data(), this->respflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_IsSuccess;
        break;
      }
      
      // optional string IsSuccess = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_IsSuccess:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_issuccess()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->issuccess().data(), this->issuccess().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_EntrustSeq;
        break;
      }
      
      // optional string EntrustSeq = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustSeq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustseq()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustseq().data(), this->entrustseq().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_EntrustBatchNO;
        break;
      }
      
      // optional string EntrustBatchNO = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustBatchNO:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustbatchno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustbatchno().data(), this->entrustbatchno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_SuccessNum;
        break;
      }
      
      // optional string SuccessNum = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SuccessNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_successnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->successnum().data(), this->successnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_OneEntrust_Ack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string EntrustSerial = 1;
  if (has_entrustserial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustserial().data(), this->entrustserial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->entrustserial(), output);
  }
  
  // optional string Valid = 2;
  if (has_valid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valid().data(), this->valid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->valid(), output);
  }
  
  // optional string RespFlag = 3;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->respflag(), output);
  }
  
  // optional string IsSuccess = 4;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->issuccess().data(), this->issuccess().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->issuccess(), output);
  }
  
  // optional string EntrustSeq = 5;
  if (has_entrustseq()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustseq().data(), this->entrustseq().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->entrustseq(), output);
  }
  
  // optional string EntrustBatchNO = 6;
  if (has_entrustbatchno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustbatchno().data(), this->entrustbatchno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->entrustbatchno(), output);
  }
  
  // optional string SuccessNum = 7;
  if (has_successnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->successnum().data(), this->successnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->successnum(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_OneEntrust_Ack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string EntrustSerial = 1;
  if (has_entrustserial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustserial().data(), this->entrustserial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->entrustserial(), target);
  }
  
  // optional string Valid = 2;
  if (has_valid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valid().data(), this->valid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->valid(), target);
  }
  
  // optional string RespFlag = 3;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->respflag(), target);
  }
  
  // optional string IsSuccess = 4;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->issuccess().data(), this->issuccess().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->issuccess(), target);
  }
  
  // optional string EntrustSeq = 5;
  if (has_entrustseq()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustseq().data(), this->entrustseq().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->entrustseq(), target);
  }
  
  // optional string EntrustBatchNO = 6;
  if (has_entrustbatchno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustbatchno().data(), this->entrustbatchno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->entrustbatchno(), target);
  }
  
  // optional string SuccessNum = 7;
  if (has_successnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->successnum().data(), this->successnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->successnum(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_OneEntrust_Ack::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string EntrustSerial = 1;
    if (has_entrustserial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustserial());
    }
    
    // optional string Valid = 2;
    if (has_valid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->valid());
    }
    
    // optional string RespFlag = 3;
    if (has_respflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->respflag());
    }
    
    // optional string IsSuccess = 4;
    if (has_issuccess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->issuccess());
    }
    
    // optional string EntrustSeq = 5;
    if (has_entrustseq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustseq());
    }
    
    // optional string EntrustBatchNO = 6;
    if (has_entrustbatchno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustbatchno());
    }
    
    // optional string SuccessNum = 7;
    if (has_successnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->successnum());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_OneEntrust_Ack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_OneEntrust_Ack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_OneEntrust_Ack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_OneEntrust_Ack::MergeFrom(const INF_OneEntrust_Ack& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_entrustserial()) {
      set_entrustserial(from.entrustserial());
    }
    if (from.has_valid()) {
      set_valid(from.valid());
    }
    if (from.has_respflag()) {
      set_respflag(from.respflag());
    }
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_entrustseq()) {
      set_entrustseq(from.entrustseq());
    }
    if (from.has_entrustbatchno()) {
      set_entrustbatchno(from.entrustbatchno());
    }
    if (from.has_successnum()) {
      set_successnum(from.successnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_OneEntrust_Ack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_OneEntrust_Ack::CopyFrom(const INF_OneEntrust_Ack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_OneEntrust_Ack::IsInitialized() const {
  
  return true;
}

void INF_OneEntrust_Ack::Swap(INF_OneEntrust_Ack* other) {
  if (other != this) {
    std::swap(entrustserial_, other->entrustserial_);
    std::swap(valid_, other->valid_);
    std::swap(respflag_, other->respflag_);
    std::swap(issuccess_, other->issuccess_);
    std::swap(entrustseq_, other->entrustseq_);
    std::swap(entrustbatchno_, other->entrustbatchno_);
    std::swap(successnum_, other->successnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_OneEntrust_Ack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_OneEntrust_Ack_descriptor_;
  metadata.reflection = INF_OneEntrust_Ack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_BatchEntrust_Ack::kEntrustSerialFieldNumber;
const int INF_BatchEntrust_Ack::kValidFieldNumber;
const int INF_BatchEntrust_Ack::kRespFlagFieldNumber;
const int INF_BatchEntrust_Ack::kIsSuccessFieldNumber;
const int INF_BatchEntrust_Ack::kRecordNumFieldNumber;
const int INF_BatchEntrust_Ack::kTradingResultsFieldNumber;
const int INF_BatchEntrust_Ack::kEntrustBatchNOFieldNumber;
const int INF_BatchEntrust_Ack::kBargainNOFieldNumber;
const int INF_BatchEntrust_Ack::kEntrustSeqFieldNumber;
#endif  // !_MSC_VER

INF_BatchEntrust_Ack::INF_BatchEntrust_Ack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_BatchEntrust_Ack::InitAsDefaultInstance() {
}

INF_BatchEntrust_Ack::INF_BatchEntrust_Ack(const INF_BatchEntrust_Ack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_BatchEntrust_Ack::SharedCtor() {
  _cached_size_ = 0;
  entrustserial_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  valid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  respflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  issuccess_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  recordnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  tradingresults_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustbatchno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bargainno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustseq_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_BatchEntrust_Ack::~INF_BatchEntrust_Ack() {
  SharedDtor();
}

void INF_BatchEntrust_Ack::SharedDtor() {
  if (entrustserial_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustserial_;
  }
  if (valid_ != &::google::protobuf::internal::kEmptyString) {
    delete valid_;
  }
  if (respflag_ != &::google::protobuf::internal::kEmptyString) {
    delete respflag_;
  }
  if (issuccess_ != &::google::protobuf::internal::kEmptyString) {
    delete issuccess_;
  }
  if (recordnum_ != &::google::protobuf::internal::kEmptyString) {
    delete recordnum_;
  }
  if (tradingresults_ != &::google::protobuf::internal::kEmptyString) {
    delete tradingresults_;
  }
  if (entrustbatchno_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustbatchno_;
  }
  if (bargainno_ != &::google::protobuf::internal::kEmptyString) {
    delete bargainno_;
  }
  if (entrustseq_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustseq_;
  }
  if (this != default_instance_) {
  }
}

void INF_BatchEntrust_Ack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_BatchEntrust_Ack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_BatchEntrust_Ack_descriptor_;
}

const INF_BatchEntrust_Ack& INF_BatchEntrust_Ack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_BatchEntrust_Ack* INF_BatchEntrust_Ack::default_instance_ = NULL;

INF_BatchEntrust_Ack* INF_BatchEntrust_Ack::New() const {
  return new INF_BatchEntrust_Ack;
}

void INF_BatchEntrust_Ack::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_entrustserial()) {
      if (entrustserial_ != &::google::protobuf::internal::kEmptyString) {
        entrustserial_->clear();
      }
    }
    if (has_valid()) {
      if (valid_ != &::google::protobuf::internal::kEmptyString) {
        valid_->clear();
      }
    }
    if (has_respflag()) {
      if (respflag_ != &::google::protobuf::internal::kEmptyString) {
        respflag_->clear();
      }
    }
    if (has_issuccess()) {
      if (issuccess_ != &::google::protobuf::internal::kEmptyString) {
        issuccess_->clear();
      }
    }
    if (has_recordnum()) {
      if (recordnum_ != &::google::protobuf::internal::kEmptyString) {
        recordnum_->clear();
      }
    }
    if (has_tradingresults()) {
      if (tradingresults_ != &::google::protobuf::internal::kEmptyString) {
        tradingresults_->clear();
      }
    }
    if (has_entrustbatchno()) {
      if (entrustbatchno_ != &::google::protobuf::internal::kEmptyString) {
        entrustbatchno_->clear();
      }
    }
    if (has_bargainno()) {
      if (bargainno_ != &::google::protobuf::internal::kEmptyString) {
        bargainno_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_entrustseq()) {
      if (entrustseq_ != &::google::protobuf::internal::kEmptyString) {
        entrustseq_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_BatchEntrust_Ack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string EntrustSerial = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustserial()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustserial().data(), this->entrustserial().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Valid;
        break;
      }
      
      // optional string Valid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Valid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_valid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->valid().data(), this->valid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_RespFlag;
        break;
      }
      
      // optional string RespFlag = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RespFlag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_respflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->respflag().data(), this->respflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_IsSuccess;
        break;
      }
      
      // optional string IsSuccess = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_IsSuccess:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_issuccess()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->issuccess().data(), this->issuccess().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_RecordNum;
        break;
      }
      
      // optional string RecordNum = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RecordNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recordnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->recordnum().data(), this->recordnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_TradingResults;
        break;
      }
      
      // optional string TradingResults = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_TradingResults:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tradingresults()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->tradingresults().data(), this->tradingresults().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_EntrustBatchNO;
        break;
      }
      
      // optional string EntrustBatchNO = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustBatchNO:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustbatchno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustbatchno().data(), this->entrustbatchno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_BargainNO;
        break;
      }
      
      // optional string BargainNO = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_BargainNO:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bargainno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bargainno().data(), this->bargainno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_EntrustSeq;
        break;
      }
      
      // optional string EntrustSeq = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustSeq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustseq()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustseq().data(), this->entrustseq().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_BatchEntrust_Ack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string EntrustSerial = 1;
  if (has_entrustserial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustserial().data(), this->entrustserial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->entrustserial(), output);
  }
  
  // optional string Valid = 2;
  if (has_valid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valid().data(), this->valid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->valid(), output);
  }
  
  // optional string RespFlag = 3;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->respflag(), output);
  }
  
  // optional string IsSuccess = 4;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->issuccess().data(), this->issuccess().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->issuccess(), output);
  }
  
  // optional string RecordNum = 5;
  if (has_recordnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->recordnum().data(), this->recordnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->recordnum(), output);
  }
  
  // optional string TradingResults = 6;
  if (has_tradingresults()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->tradingresults().data(), this->tradingresults().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->tradingresults(), output);
  }
  
  // optional string EntrustBatchNO = 7;
  if (has_entrustbatchno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustbatchno().data(), this->entrustbatchno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->entrustbatchno(), output);
  }
  
  // optional string BargainNO = 8;
  if (has_bargainno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bargainno().data(), this->bargainno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->bargainno(), output);
  }
  
  // optional string EntrustSeq = 9;
  if (has_entrustseq()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustseq().data(), this->entrustseq().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->entrustseq(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_BatchEntrust_Ack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string EntrustSerial = 1;
  if (has_entrustserial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustserial().data(), this->entrustserial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->entrustserial(), target);
  }
  
  // optional string Valid = 2;
  if (has_valid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valid().data(), this->valid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->valid(), target);
  }
  
  // optional string RespFlag = 3;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->respflag(), target);
  }
  
  // optional string IsSuccess = 4;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->issuccess().data(), this->issuccess().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->issuccess(), target);
  }
  
  // optional string RecordNum = 5;
  if (has_recordnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->recordnum().data(), this->recordnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->recordnum(), target);
  }
  
  // optional string TradingResults = 6;
  if (has_tradingresults()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->tradingresults().data(), this->tradingresults().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->tradingresults(), target);
  }
  
  // optional string EntrustBatchNO = 7;
  if (has_entrustbatchno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustbatchno().data(), this->entrustbatchno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->entrustbatchno(), target);
  }
  
  // optional string BargainNO = 8;
  if (has_bargainno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bargainno().data(), this->bargainno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->bargainno(), target);
  }
  
  // optional string EntrustSeq = 9;
  if (has_entrustseq()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustseq().data(), this->entrustseq().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->entrustseq(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_BatchEntrust_Ack::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string EntrustSerial = 1;
    if (has_entrustserial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustserial());
    }
    
    // optional string Valid = 2;
    if (has_valid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->valid());
    }
    
    // optional string RespFlag = 3;
    if (has_respflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->respflag());
    }
    
    // optional string IsSuccess = 4;
    if (has_issuccess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->issuccess());
    }
    
    // optional string RecordNum = 5;
    if (has_recordnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->recordnum());
    }
    
    // optional string TradingResults = 6;
    if (has_tradingresults()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tradingresults());
    }
    
    // optional string EntrustBatchNO = 7;
    if (has_entrustbatchno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustbatchno());
    }
    
    // optional string BargainNO = 8;
    if (has_bargainno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bargainno());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string EntrustSeq = 9;
    if (has_entrustseq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustseq());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_BatchEntrust_Ack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_BatchEntrust_Ack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_BatchEntrust_Ack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_BatchEntrust_Ack::MergeFrom(const INF_BatchEntrust_Ack& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_entrustserial()) {
      set_entrustserial(from.entrustserial());
    }
    if (from.has_valid()) {
      set_valid(from.valid());
    }
    if (from.has_respflag()) {
      set_respflag(from.respflag());
    }
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_recordnum()) {
      set_recordnum(from.recordnum());
    }
    if (from.has_tradingresults()) {
      set_tradingresults(from.tradingresults());
    }
    if (from.has_entrustbatchno()) {
      set_entrustbatchno(from.entrustbatchno());
    }
    if (from.has_bargainno()) {
      set_bargainno(from.bargainno());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_entrustseq()) {
      set_entrustseq(from.entrustseq());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_BatchEntrust_Ack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_BatchEntrust_Ack::CopyFrom(const INF_BatchEntrust_Ack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_BatchEntrust_Ack::IsInitialized() const {
  
  return true;
}

void INF_BatchEntrust_Ack::Swap(INF_BatchEntrust_Ack* other) {
  if (other != this) {
    std::swap(entrustserial_, other->entrustserial_);
    std::swap(valid_, other->valid_);
    std::swap(respflag_, other->respflag_);
    std::swap(issuccess_, other->issuccess_);
    std::swap(recordnum_, other->recordnum_);
    std::swap(tradingresults_, other->tradingresults_);
    std::swap(entrustbatchno_, other->entrustbatchno_);
    std::swap(bargainno_, other->bargainno_);
    std::swap(entrustseq_, other->entrustseq_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_BatchEntrust_Ack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_BatchEntrust_Ack_descriptor_;
  metadata.reflection = INF_BatchEntrust_Ack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_QueryOneEntrust_Ack::kValidFieldNumber;
const int INF_QueryOneEntrust_Ack::kSecurityCodeFieldNumber;
const int INF_QueryOneEntrust_Ack::kSecurityNameFieldNumber;
const int INF_QueryOneEntrust_Ack::kEntrustNumFieldNumber;
const int INF_QueryOneEntrust_Ack::kEntrustPriceFieldNumber;
const int INF_QueryOneEntrust_Ack::kEntrustSerialFieldNumber;
const int INF_QueryOneEntrust_Ack::kCjNumFieldNumber;
const int INF_QueryOneEntrust_Ack::kEntrustTimeFieldNumber;
const int INF_QueryOneEntrust_Ack::kMarketIDFieldNumber;
const int INF_QueryOneEntrust_Ack::kBSflagFieldNumber;
const int INF_QueryOneEntrust_Ack::kEntrustStatusFieldNumber;
const int INF_QueryOneEntrust_Ack::kCjPriceSumFieldNumber;
const int INF_QueryOneEntrust_Ack::kRespFlagFieldNumber;
const int INF_QueryOneEntrust_Ack::kIsSuccessFieldNumber;
const int INF_QueryOneEntrust_Ack::kRecordNumFieldNumber;
const int INF_QueryOneEntrust_Ack::kStockholderAccountFieldNumber;
const int INF_QueryOneEntrust_Ack::kBSTypeNameFieldNumber;
const int INF_QueryOneEntrust_Ack::kBSTypeFlagFieldNumber;
const int INF_QueryOneEntrust_Ack::kBargainNOFieldNumber;
const int INF_QueryOneEntrust_Ack::kCjPriceFieldNumber;
const int INF_QueryOneEntrust_Ack::kCjStatusNameFieldNumber;
const int INF_QueryOneEntrust_Ack::kDateFieldNumber;
const int INF_QueryOneEntrust_Ack::kErrorMsgFieldNumber;
const int INF_QueryOneEntrust_Ack::kErrorCodeFieldNumber;
const int INF_QueryOneEntrust_Ack::kCjStatusFieldNumber;
const int INF_QueryOneEntrust_Ack::kEntrustStatusFlagFieldNumber;
const int INF_QueryOneEntrust_Ack::kCancelOrderNumFieldNumber;
const int INF_QueryOneEntrust_Ack::kEntrustAttrFieldNumber;
const int INF_QueryOneEntrust_Ack::kEntrustTypeFieldNumber;
#endif  // !_MSC_VER

INF_QueryOneEntrust_Ack::INF_QueryOneEntrust_Ack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_QueryOneEntrust_Ack::InitAsDefaultInstance() {
}

INF_QueryOneEntrust_Ack::INF_QueryOneEntrust_Ack(const INF_QueryOneEntrust_Ack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_QueryOneEntrust_Ack::SharedCtor() {
  _cached_size_ = 0;
  valid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  securitycode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  securityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustprice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustserial_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cjnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrusttime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  marketid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bsflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entruststatus_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cjpricesum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  respflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  issuccess_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  recordnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stockholderaccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bstypename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bstypeflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bargainno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cjprice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cjstatusname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  date_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  errormsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  errorcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cjstatus_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entruststatusflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cancelordernum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustattr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrusttype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_QueryOneEntrust_Ack::~INF_QueryOneEntrust_Ack() {
  SharedDtor();
}

void INF_QueryOneEntrust_Ack::SharedDtor() {
  if (valid_ != &::google::protobuf::internal::kEmptyString) {
    delete valid_;
  }
  if (securitycode_ != &::google::protobuf::internal::kEmptyString) {
    delete securitycode_;
  }
  if (securityname_ != &::google::protobuf::internal::kEmptyString) {
    delete securityname_;
  }
  if (entrustnum_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustnum_;
  }
  if (entrustprice_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustprice_;
  }
  if (entrustserial_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustserial_;
  }
  if (cjnum_ != &::google::protobuf::internal::kEmptyString) {
    delete cjnum_;
  }
  if (entrusttime_ != &::google::protobuf::internal::kEmptyString) {
    delete entrusttime_;
  }
  if (marketid_ != &::google::protobuf::internal::kEmptyString) {
    delete marketid_;
  }
  if (bsflag_ != &::google::protobuf::internal::kEmptyString) {
    delete bsflag_;
  }
  if (entruststatus_ != &::google::protobuf::internal::kEmptyString) {
    delete entruststatus_;
  }
  if (cjpricesum_ != &::google::protobuf::internal::kEmptyString) {
    delete cjpricesum_;
  }
  if (respflag_ != &::google::protobuf::internal::kEmptyString) {
    delete respflag_;
  }
  if (issuccess_ != &::google::protobuf::internal::kEmptyString) {
    delete issuccess_;
  }
  if (recordnum_ != &::google::protobuf::internal::kEmptyString) {
    delete recordnum_;
  }
  if (stockholderaccount_ != &::google::protobuf::internal::kEmptyString) {
    delete stockholderaccount_;
  }
  if (bstypename_ != &::google::protobuf::internal::kEmptyString) {
    delete bstypename_;
  }
  if (bstypeflag_ != &::google::protobuf::internal::kEmptyString) {
    delete bstypeflag_;
  }
  if (bargainno_ != &::google::protobuf::internal::kEmptyString) {
    delete bargainno_;
  }
  if (cjprice_ != &::google::protobuf::internal::kEmptyString) {
    delete cjprice_;
  }
  if (cjstatusname_ != &::google::protobuf::internal::kEmptyString) {
    delete cjstatusname_;
  }
  if (date_ != &::google::protobuf::internal::kEmptyString) {
    delete date_;
  }
  if (errormsg_ != &::google::protobuf::internal::kEmptyString) {
    delete errormsg_;
  }
  if (errorcode_ != &::google::protobuf::internal::kEmptyString) {
    delete errorcode_;
  }
  if (cjstatus_ != &::google::protobuf::internal::kEmptyString) {
    delete cjstatus_;
  }
  if (entruststatusflag_ != &::google::protobuf::internal::kEmptyString) {
    delete entruststatusflag_;
  }
  if (cancelordernum_ != &::google::protobuf::internal::kEmptyString) {
    delete cancelordernum_;
  }
  if (entrustattr_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustattr_;
  }
  if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
    delete entrusttype_;
  }
  if (this != default_instance_) {
  }
}

void INF_QueryOneEntrust_Ack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_QueryOneEntrust_Ack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_QueryOneEntrust_Ack_descriptor_;
}

const INF_QueryOneEntrust_Ack& INF_QueryOneEntrust_Ack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_QueryOneEntrust_Ack* INF_QueryOneEntrust_Ack::default_instance_ = NULL;

INF_QueryOneEntrust_Ack* INF_QueryOneEntrust_Ack::New() const {
  return new INF_QueryOneEntrust_Ack;
}

void INF_QueryOneEntrust_Ack::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_valid()) {
      if (valid_ != &::google::protobuf::internal::kEmptyString) {
        valid_->clear();
      }
    }
    if (has_securitycode()) {
      if (securitycode_ != &::google::protobuf::internal::kEmptyString) {
        securitycode_->clear();
      }
    }
    if (has_securityname()) {
      if (securityname_ != &::google::protobuf::internal::kEmptyString) {
        securityname_->clear();
      }
    }
    if (has_entrustnum()) {
      if (entrustnum_ != &::google::protobuf::internal::kEmptyString) {
        entrustnum_->clear();
      }
    }
    if (has_entrustprice()) {
      if (entrustprice_ != &::google::protobuf::internal::kEmptyString) {
        entrustprice_->clear();
      }
    }
    if (has_entrustserial()) {
      if (entrustserial_ != &::google::protobuf::internal::kEmptyString) {
        entrustserial_->clear();
      }
    }
    if (has_cjnum()) {
      if (cjnum_ != &::google::protobuf::internal::kEmptyString) {
        cjnum_->clear();
      }
    }
    if (has_entrusttime()) {
      if (entrusttime_ != &::google::protobuf::internal::kEmptyString) {
        entrusttime_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_marketid()) {
      if (marketid_ != &::google::protobuf::internal::kEmptyString) {
        marketid_->clear();
      }
    }
    if (has_bsflag()) {
      if (bsflag_ != &::google::protobuf::internal::kEmptyString) {
        bsflag_->clear();
      }
    }
    if (has_entruststatus()) {
      if (entruststatus_ != &::google::protobuf::internal::kEmptyString) {
        entruststatus_->clear();
      }
    }
    if (has_cjpricesum()) {
      if (cjpricesum_ != &::google::protobuf::internal::kEmptyString) {
        cjpricesum_->clear();
      }
    }
    if (has_respflag()) {
      if (respflag_ != &::google::protobuf::internal::kEmptyString) {
        respflag_->clear();
      }
    }
    if (has_issuccess()) {
      if (issuccess_ != &::google::protobuf::internal::kEmptyString) {
        issuccess_->clear();
      }
    }
    if (has_recordnum()) {
      if (recordnum_ != &::google::protobuf::internal::kEmptyString) {
        recordnum_->clear();
      }
    }
    if (has_stockholderaccount()) {
      if (stockholderaccount_ != &::google::protobuf::internal::kEmptyString) {
        stockholderaccount_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_bstypename()) {
      if (bstypename_ != &::google::protobuf::internal::kEmptyString) {
        bstypename_->clear();
      }
    }
    if (has_bstypeflag()) {
      if (bstypeflag_ != &::google::protobuf::internal::kEmptyString) {
        bstypeflag_->clear();
      }
    }
    if (has_bargainno()) {
      if (bargainno_ != &::google::protobuf::internal::kEmptyString) {
        bargainno_->clear();
      }
    }
    if (has_cjprice()) {
      if (cjprice_ != &::google::protobuf::internal::kEmptyString) {
        cjprice_->clear();
      }
    }
    if (has_cjstatusname()) {
      if (cjstatusname_ != &::google::protobuf::internal::kEmptyString) {
        cjstatusname_->clear();
      }
    }
    if (has_date()) {
      if (date_ != &::google::protobuf::internal::kEmptyString) {
        date_->clear();
      }
    }
    if (has_errormsg()) {
      if (errormsg_ != &::google::protobuf::internal::kEmptyString) {
        errormsg_->clear();
      }
    }
    if (has_errorcode()) {
      if (errorcode_ != &::google::protobuf::internal::kEmptyString) {
        errorcode_->clear();
      }
    }
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (has_cjstatus()) {
      if (cjstatus_ != &::google::protobuf::internal::kEmptyString) {
        cjstatus_->clear();
      }
    }
    if (has_entruststatusflag()) {
      if (entruststatusflag_ != &::google::protobuf::internal::kEmptyString) {
        entruststatusflag_->clear();
      }
    }
    if (has_cancelordernum()) {
      if (cancelordernum_ != &::google::protobuf::internal::kEmptyString) {
        cancelordernum_->clear();
      }
    }
    if (has_entrustattr()) {
      if (entrustattr_ != &::google::protobuf::internal::kEmptyString) {
        entrustattr_->clear();
      }
    }
    if (has_entrusttype()) {
      if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
        entrusttype_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_QueryOneEntrust_Ack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Valid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_valid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->valid().data(), this->valid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_SecurityCode;
        break;
      }
      
      // optional string SecurityCode = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SecurityCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_securitycode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->securitycode().data(), this->securitycode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_SecurityName;
        break;
      }
      
      // optional string SecurityName = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SecurityName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_securityname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->securityname().data(), this->securityname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_EntrustNum;
        break;
      }
      
      // optional string EntrustNum = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustnum().data(), this->entrustnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_EntrustPrice;
        break;
      }
      
      // optional string EntrustPrice = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustPrice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustprice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustprice().data(), this->entrustprice().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_EntrustSerial;
        break;
      }
      
      // optional string EntrustSerial = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustSerial:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustserial()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustserial().data(), this->entrustserial().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_CjNum;
        break;
      }
      
      // optional string CjNum = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CjNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cjnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cjnum().data(), this->cjnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_EntrustTime;
        break;
      }
      
      // optional string EntrustTime = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrusttime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrusttime().data(), this->entrusttime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_MarketID;
        break;
      }
      
      // optional string MarketID = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_MarketID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_marketid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->marketid().data(), this->marketid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_BSflag;
        break;
      }
      
      // optional string BSflag = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_BSflag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bsflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bsflag().data(), this->bsflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_EntrustStatus;
        break;
      }
      
      // optional string EntrustStatus = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entruststatus()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entruststatus().data(), this->entruststatus().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_CjPriceSum;
        break;
      }
      
      // optional string CjPriceSum = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CjPriceSum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cjpricesum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cjpricesum().data(), this->cjpricesum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_RespFlag;
        break;
      }
      
      // optional string RespFlag = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RespFlag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_respflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->respflag().data(), this->respflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_IsSuccess;
        break;
      }
      
      // optional string IsSuccess = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_IsSuccess:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_issuccess()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->issuccess().data(), this->issuccess().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_RecordNum;
        break;
      }
      
      // optional string RecordNum = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RecordNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recordnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->recordnum().data(), this->recordnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_StockholderAccount;
        break;
      }
      
      // optional string StockholderAccount = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_StockholderAccount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stockholderaccount()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stockholderaccount().data(), this->stockholderaccount().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_BSTypeName;
        break;
      }
      
      // optional string BSTypeName = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_BSTypeName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bstypename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bstypename().data(), this->bstypename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_BSTypeFlag;
        break;
      }
      
      // optional string BSTypeFlag = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_BSTypeFlag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bstypeflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bstypeflag().data(), this->bstypeflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_BargainNO;
        break;
      }
      
      // optional string BargainNO = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_BargainNO:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bargainno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bargainno().data(), this->bargainno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_CjPrice;
        break;
      }
      
      // optional string CjPrice = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CjPrice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cjprice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cjprice().data(), this->cjprice().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_CjStatusName;
        break;
      }
      
      // optional string CjStatusName = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CjStatusName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cjstatusname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cjstatusname().data(), this->cjstatusname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_Date;
        break;
      }
      
      // optional string Date = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->date().data(), this->date().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_ErrorMsg;
        break;
      }
      
      // optional string ErrorMsg = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ErrorMsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errormsg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->errormsg().data(), this->errormsg().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(194)) goto parse_ErrorCode;
        break;
      }
      
      // optional string ErrorCode = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ErrorCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errorcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->errorcode().data(), this->errorcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(202)) goto parse_CjStatus;
        break;
      }
      
      // optional string CjStatus = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CjStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cjstatus()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cjstatus().data(), this->cjstatus().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(210)) goto parse_EntrustStatusFlag;
        break;
      }
      
      // optional string EntrustStatusFlag = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustStatusFlag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entruststatusflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entruststatusflag().data(), this->entruststatusflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(218)) goto parse_CancelOrderNum;
        break;
      }
      
      // optional string CancelOrderNum = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CancelOrderNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cancelordernum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cancelordernum().data(), this->cancelordernum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(226)) goto parse_EntrustAttr;
        break;
      }
      
      // optional string EntrustAttr = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustAttr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustattr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustattr().data(), this->entrustattr().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(234)) goto parse_EntrustType;
        break;
      }
      
      // optional string EntrustType = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrusttype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrusttype().data(), this->entrusttype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_QueryOneEntrust_Ack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string Valid = 1;
  if (has_valid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valid().data(), this->valid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->valid(), output);
  }
  
  // optional string SecurityCode = 2;
  if (has_securitycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitycode().data(), this->securitycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->securitycode(), output);
  }
  
  // optional string SecurityName = 3;
  if (has_securityname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securityname().data(), this->securityname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->securityname(), output);
  }
  
  // optional string EntrustNum = 4;
  if (has_entrustnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustnum().data(), this->entrustnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->entrustnum(), output);
  }
  
  // optional string EntrustPrice = 5;
  if (has_entrustprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustprice().data(), this->entrustprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->entrustprice(), output);
  }
  
  // optional string EntrustSerial = 6;
  if (has_entrustserial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustserial().data(), this->entrustserial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->entrustserial(), output);
  }
  
  // optional string CjNum = 7;
  if (has_cjnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjnum().data(), this->cjnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->cjnum(), output);
  }
  
  // optional string EntrustTime = 8;
  if (has_entrusttime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttime().data(), this->entrusttime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->entrusttime(), output);
  }
  
  // optional string MarketID = 9;
  if (has_marketid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketid().data(), this->marketid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->marketid(), output);
  }
  
  // optional string BSflag = 10;
  if (has_bsflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bsflag().data(), this->bsflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->bsflag(), output);
  }
  
  // optional string EntrustStatus = 11;
  if (has_entruststatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entruststatus().data(), this->entruststatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->entruststatus(), output);
  }
  
  // optional string CjPriceSum = 12;
  if (has_cjpricesum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjpricesum().data(), this->cjpricesum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->cjpricesum(), output);
  }
  
  // optional string RespFlag = 13;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->respflag(), output);
  }
  
  // optional string IsSuccess = 14;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->issuccess().data(), this->issuccess().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->issuccess(), output);
  }
  
  // optional string RecordNum = 15;
  if (has_recordnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->recordnum().data(), this->recordnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->recordnum(), output);
  }
  
  // optional string StockholderAccount = 16;
  if (has_stockholderaccount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stockholderaccount().data(), this->stockholderaccount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->stockholderaccount(), output);
  }
  
  // optional string BSTypeName = 17;
  if (has_bstypename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bstypename().data(), this->bstypename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->bstypename(), output);
  }
  
  // optional string BSTypeFlag = 18;
  if (has_bstypeflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bstypeflag().data(), this->bstypeflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->bstypeflag(), output);
  }
  
  // optional string BargainNO = 19;
  if (has_bargainno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bargainno().data(), this->bargainno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->bargainno(), output);
  }
  
  // optional string CjPrice = 20;
  if (has_cjprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjprice().data(), this->cjprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->cjprice(), output);
  }
  
  // optional string CjStatusName = 21;
  if (has_cjstatusname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjstatusname().data(), this->cjstatusname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      21, this->cjstatusname(), output);
  }
  
  // optional string Date = 22;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      22, this->date(), output);
  }
  
  // optional string ErrorMsg = 23;
  if (has_errormsg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->errormsg().data(), this->errormsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      23, this->errormsg(), output);
  }
  
  // optional string ErrorCode = 24;
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->errorcode().data(), this->errorcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      24, this->errorcode(), output);
  }
  
  // optional string CjStatus = 25;
  if (has_cjstatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjstatus().data(), this->cjstatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      25, this->cjstatus(), output);
  }
  
  // optional string EntrustStatusFlag = 26;
  if (has_entruststatusflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entruststatusflag().data(), this->entruststatusflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      26, this->entruststatusflag(), output);
  }
  
  // optional string CancelOrderNum = 27;
  if (has_cancelordernum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cancelordernum().data(), this->cancelordernum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      27, this->cancelordernum(), output);
  }
  
  // optional string EntrustAttr = 28;
  if (has_entrustattr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustattr().data(), this->entrustattr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      28, this->entrustattr(), output);
  }
  
  // optional string EntrustType = 29;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      29, this->entrusttype(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_QueryOneEntrust_Ack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string Valid = 1;
  if (has_valid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valid().data(), this->valid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->valid(), target);
  }
  
  // optional string SecurityCode = 2;
  if (has_securitycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitycode().data(), this->securitycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->securitycode(), target);
  }
  
  // optional string SecurityName = 3;
  if (has_securityname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securityname().data(), this->securityname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->securityname(), target);
  }
  
  // optional string EntrustNum = 4;
  if (has_entrustnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustnum().data(), this->entrustnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->entrustnum(), target);
  }
  
  // optional string EntrustPrice = 5;
  if (has_entrustprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustprice().data(), this->entrustprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->entrustprice(), target);
  }
  
  // optional string EntrustSerial = 6;
  if (has_entrustserial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustserial().data(), this->entrustserial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->entrustserial(), target);
  }
  
  // optional string CjNum = 7;
  if (has_cjnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjnum().data(), this->cjnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->cjnum(), target);
  }
  
  // optional string EntrustTime = 8;
  if (has_entrusttime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttime().data(), this->entrusttime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->entrusttime(), target);
  }
  
  // optional string MarketID = 9;
  if (has_marketid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketid().data(), this->marketid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->marketid(), target);
  }
  
  // optional string BSflag = 10;
  if (has_bsflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bsflag().data(), this->bsflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->bsflag(), target);
  }
  
  // optional string EntrustStatus = 11;
  if (has_entruststatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entruststatus().data(), this->entruststatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->entruststatus(), target);
  }
  
  // optional string CjPriceSum = 12;
  if (has_cjpricesum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjpricesum().data(), this->cjpricesum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->cjpricesum(), target);
  }
  
  // optional string RespFlag = 13;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->respflag(), target);
  }
  
  // optional string IsSuccess = 14;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->issuccess().data(), this->issuccess().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->issuccess(), target);
  }
  
  // optional string RecordNum = 15;
  if (has_recordnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->recordnum().data(), this->recordnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->recordnum(), target);
  }
  
  // optional string StockholderAccount = 16;
  if (has_stockholderaccount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stockholderaccount().data(), this->stockholderaccount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->stockholderaccount(), target);
  }
  
  // optional string BSTypeName = 17;
  if (has_bstypename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bstypename().data(), this->bstypename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->bstypename(), target);
  }
  
  // optional string BSTypeFlag = 18;
  if (has_bstypeflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bstypeflag().data(), this->bstypeflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->bstypeflag(), target);
  }
  
  // optional string BargainNO = 19;
  if (has_bargainno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bargainno().data(), this->bargainno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->bargainno(), target);
  }
  
  // optional string CjPrice = 20;
  if (has_cjprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjprice().data(), this->cjprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->cjprice(), target);
  }
  
  // optional string CjStatusName = 21;
  if (has_cjstatusname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjstatusname().data(), this->cjstatusname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->cjstatusname(), target);
  }
  
  // optional string Date = 22;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->date(), target);
  }
  
  // optional string ErrorMsg = 23;
  if (has_errormsg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->errormsg().data(), this->errormsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->errormsg(), target);
  }
  
  // optional string ErrorCode = 24;
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->errorcode().data(), this->errorcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->errorcode(), target);
  }
  
  // optional string CjStatus = 25;
  if (has_cjstatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjstatus().data(), this->cjstatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->cjstatus(), target);
  }
  
  // optional string EntrustStatusFlag = 26;
  if (has_entruststatusflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entruststatusflag().data(), this->entruststatusflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->entruststatusflag(), target);
  }
  
  // optional string CancelOrderNum = 27;
  if (has_cancelordernum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cancelordernum().data(), this->cancelordernum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->cancelordernum(), target);
  }
  
  // optional string EntrustAttr = 28;
  if (has_entrustattr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustattr().data(), this->entrustattr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->entrustattr(), target);
  }
  
  // optional string EntrustType = 29;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->entrusttype(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_QueryOneEntrust_Ack::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string Valid = 1;
    if (has_valid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->valid());
    }
    
    // optional string SecurityCode = 2;
    if (has_securitycode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->securitycode());
    }
    
    // optional string SecurityName = 3;
    if (has_securityname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->securityname());
    }
    
    // optional string EntrustNum = 4;
    if (has_entrustnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustnum());
    }
    
    // optional string EntrustPrice = 5;
    if (has_entrustprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustprice());
    }
    
    // optional string EntrustSerial = 6;
    if (has_entrustserial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustserial());
    }
    
    // optional string CjNum = 7;
    if (has_cjnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cjnum());
    }
    
    // optional string EntrustTime = 8;
    if (has_entrusttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrusttime());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string MarketID = 9;
    if (has_marketid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->marketid());
    }
    
    // optional string BSflag = 10;
    if (has_bsflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bsflag());
    }
    
    // optional string EntrustStatus = 11;
    if (has_entruststatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entruststatus());
    }
    
    // optional string CjPriceSum = 12;
    if (has_cjpricesum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cjpricesum());
    }
    
    // optional string RespFlag = 13;
    if (has_respflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->respflag());
    }
    
    // optional string IsSuccess = 14;
    if (has_issuccess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->issuccess());
    }
    
    // optional string RecordNum = 15;
    if (has_recordnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->recordnum());
    }
    
    // optional string StockholderAccount = 16;
    if (has_stockholderaccount()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stockholderaccount());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string BSTypeName = 17;
    if (has_bstypename()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bstypename());
    }
    
    // optional string BSTypeFlag = 18;
    if (has_bstypeflag()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bstypeflag());
    }
    
    // optional string BargainNO = 19;
    if (has_bargainno()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bargainno());
    }
    
    // optional string CjPrice = 20;
    if (has_cjprice()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cjprice());
    }
    
    // optional string CjStatusName = 21;
    if (has_cjstatusname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cjstatusname());
    }
    
    // optional string Date = 22;
    if (has_date()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->date());
    }
    
    // optional string ErrorMsg = 23;
    if (has_errormsg()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->errormsg());
    }
    
    // optional string ErrorCode = 24;
    if (has_errorcode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->errorcode());
    }
    
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional string CjStatus = 25;
    if (has_cjstatus()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cjstatus());
    }
    
    // optional string EntrustStatusFlag = 26;
    if (has_entruststatusflag()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entruststatusflag());
    }
    
    // optional string CancelOrderNum = 27;
    if (has_cancelordernum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cancelordernum());
    }
    
    // optional string EntrustAttr = 28;
    if (has_entrustattr()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustattr());
    }
    
    // optional string EntrustType = 29;
    if (has_entrusttype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrusttype());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_QueryOneEntrust_Ack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_QueryOneEntrust_Ack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_QueryOneEntrust_Ack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_QueryOneEntrust_Ack::MergeFrom(const INF_QueryOneEntrust_Ack& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_valid()) {
      set_valid(from.valid());
    }
    if (from.has_securitycode()) {
      set_securitycode(from.securitycode());
    }
    if (from.has_securityname()) {
      set_securityname(from.securityname());
    }
    if (from.has_entrustnum()) {
      set_entrustnum(from.entrustnum());
    }
    if (from.has_entrustprice()) {
      set_entrustprice(from.entrustprice());
    }
    if (from.has_entrustserial()) {
      set_entrustserial(from.entrustserial());
    }
    if (from.has_cjnum()) {
      set_cjnum(from.cjnum());
    }
    if (from.has_entrusttime()) {
      set_entrusttime(from.entrusttime());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_marketid()) {
      set_marketid(from.marketid());
    }
    if (from.has_bsflag()) {
      set_bsflag(from.bsflag());
    }
    if (from.has_entruststatus()) {
      set_entruststatus(from.entruststatus());
    }
    if (from.has_cjpricesum()) {
      set_cjpricesum(from.cjpricesum());
    }
    if (from.has_respflag()) {
      set_respflag(from.respflag());
    }
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_recordnum()) {
      set_recordnum(from.recordnum());
    }
    if (from.has_stockholderaccount()) {
      set_stockholderaccount(from.stockholderaccount());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_bstypename()) {
      set_bstypename(from.bstypename());
    }
    if (from.has_bstypeflag()) {
      set_bstypeflag(from.bstypeflag());
    }
    if (from.has_bargainno()) {
      set_bargainno(from.bargainno());
    }
    if (from.has_cjprice()) {
      set_cjprice(from.cjprice());
    }
    if (from.has_cjstatusname()) {
      set_cjstatusname(from.cjstatusname());
    }
    if (from.has_date()) {
      set_date(from.date());
    }
    if (from.has_errormsg()) {
      set_errormsg(from.errormsg());
    }
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_cjstatus()) {
      set_cjstatus(from.cjstatus());
    }
    if (from.has_entruststatusflag()) {
      set_entruststatusflag(from.entruststatusflag());
    }
    if (from.has_cancelordernum()) {
      set_cancelordernum(from.cancelordernum());
    }
    if (from.has_entrustattr()) {
      set_entrustattr(from.entrustattr());
    }
    if (from.has_entrusttype()) {
      set_entrusttype(from.entrusttype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_QueryOneEntrust_Ack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_QueryOneEntrust_Ack::CopyFrom(const INF_QueryOneEntrust_Ack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_QueryOneEntrust_Ack::IsInitialized() const {
  
  return true;
}

void INF_QueryOneEntrust_Ack::Swap(INF_QueryOneEntrust_Ack* other) {
  if (other != this) {
    std::swap(valid_, other->valid_);
    std::swap(securitycode_, other->securitycode_);
    std::swap(securityname_, other->securityname_);
    std::swap(entrustnum_, other->entrustnum_);
    std::swap(entrustprice_, other->entrustprice_);
    std::swap(entrustserial_, other->entrustserial_);
    std::swap(cjnum_, other->cjnum_);
    std::swap(entrusttime_, other->entrusttime_);
    std::swap(marketid_, other->marketid_);
    std::swap(bsflag_, other->bsflag_);
    std::swap(entruststatus_, other->entruststatus_);
    std::swap(cjpricesum_, other->cjpricesum_);
    std::swap(respflag_, other->respflag_);
    std::swap(issuccess_, other->issuccess_);
    std::swap(recordnum_, other->recordnum_);
    std::swap(stockholderaccount_, other->stockholderaccount_);
    std::swap(bstypename_, other->bstypename_);
    std::swap(bstypeflag_, other->bstypeflag_);
    std::swap(bargainno_, other->bargainno_);
    std::swap(cjprice_, other->cjprice_);
    std::swap(cjstatusname_, other->cjstatusname_);
    std::swap(date_, other->date_);
    std::swap(errormsg_, other->errormsg_);
    std::swap(errorcode_, other->errorcode_);
    std::swap(cjstatus_, other->cjstatus_);
    std::swap(entruststatusflag_, other->entruststatusflag_);
    std::swap(cancelordernum_, other->cancelordernum_);
    std::swap(entrustattr_, other->entrustattr_);
    std::swap(entrusttype_, other->entrusttype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_QueryOneEntrust_Ack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_QueryOneEntrust_Ack_descriptor_;
  metadata.reflection = INF_QueryOneEntrust_Ack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_QueryBatchEntrust_Ack::kEntrustBatchNOFieldNumber;
const int INF_QueryBatchEntrust_Ack::kEntrustSeqFieldNumber;
const int INF_QueryBatchEntrust_Ack::kMarketIDFieldNumber;
const int INF_QueryBatchEntrust_Ack::kSecurityCodeFieldNumber;
const int INF_QueryBatchEntrust_Ack::kBSflagFieldNumber;
const int INF_QueryBatchEntrust_Ack::kEntrustNumFieldNumber;
const int INF_QueryBatchEntrust_Ack::kEntrustPriceFieldNumber;
const int INF_QueryBatchEntrust_Ack::kEntrustStatusFieldNumber;
const int INF_QueryBatchEntrust_Ack::kCjNumFieldNumber;
const int INF_QueryBatchEntrust_Ack::kCjPriceFieldNumber;
const int INF_QueryBatchEntrust_Ack::kEntrustTimeFieldNumber;
const int INF_QueryBatchEntrust_Ack::kValidFieldNumber;
const int INF_QueryBatchEntrust_Ack::kRespFlagFieldNumber;
const int INF_QueryBatchEntrust_Ack::kIsSuccessFieldNumber;
const int INF_QueryBatchEntrust_Ack::kRecordNumFieldNumber;
const int INF_QueryBatchEntrust_Ack::kCurrentDateFieldNumber;
const int INF_QueryBatchEntrust_Ack::kEntrustNoFieldNumber;
const int INF_QueryBatchEntrust_Ack::kDeclareNoFieldNumber;
const int INF_QueryBatchEntrust_Ack::kClientNoFieldNumber;
const int INF_QueryBatchEntrust_Ack::kStockholderAccountFieldNumber;
const int INF_QueryBatchEntrust_Ack::kSecurityNameFieldNumber;
const int INF_QueryBatchEntrust_Ack::kEntrustTypeFieldNumber;
const int INF_QueryBatchEntrust_Ack::kBSflagNameFieldNumber;
const int INF_QueryBatchEntrust_Ack::kCjStatusFieldNumber;
const int INF_QueryBatchEntrust_Ack::kCjStatusNameFieldNumber;
const int INF_QueryBatchEntrust_Ack::kCjDateFieldNumber;
const int INF_QueryBatchEntrust_Ack::kDeclareTimeFieldNumber;
const int INF_QueryBatchEntrust_Ack::kEntrustPenNumFieldNumber;
const int INF_QueryBatchEntrust_Ack::kPageStartPosFieldNumber;
const int INF_QueryBatchEntrust_Ack::kHaveCancelNumFieldNumber;
#endif  // !_MSC_VER

INF_QueryBatchEntrust_Ack::INF_QueryBatchEntrust_Ack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_QueryBatchEntrust_Ack::InitAsDefaultInstance() {
}

INF_QueryBatchEntrust_Ack::INF_QueryBatchEntrust_Ack(const INF_QueryBatchEntrust_Ack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_QueryBatchEntrust_Ack::SharedCtor() {
  _cached_size_ = 0;
  entrustbatchno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustseq_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  marketid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  securitycode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bsflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustprice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entruststatus_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cjnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cjprice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrusttime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  valid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  respflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  issuccess_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  recordnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  currentdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  declareno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  clientno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stockholderaccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  securityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrusttype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bsflagname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cjstatus_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cjstatusname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cjdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  declaretime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustpennum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  pagestartpos_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  havecancelnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_QueryBatchEntrust_Ack::~INF_QueryBatchEntrust_Ack() {
  SharedDtor();
}

void INF_QueryBatchEntrust_Ack::SharedDtor() {
  if (entrustbatchno_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustbatchno_;
  }
  if (entrustseq_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustseq_;
  }
  if (marketid_ != &::google::protobuf::internal::kEmptyString) {
    delete marketid_;
  }
  if (securitycode_ != &::google::protobuf::internal::kEmptyString) {
    delete securitycode_;
  }
  if (bsflag_ != &::google::protobuf::internal::kEmptyString) {
    delete bsflag_;
  }
  if (entrustnum_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustnum_;
  }
  if (entrustprice_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustprice_;
  }
  if (entruststatus_ != &::google::protobuf::internal::kEmptyString) {
    delete entruststatus_;
  }
  if (cjnum_ != &::google::protobuf::internal::kEmptyString) {
    delete cjnum_;
  }
  if (cjprice_ != &::google::protobuf::internal::kEmptyString) {
    delete cjprice_;
  }
  if (entrusttime_ != &::google::protobuf::internal::kEmptyString) {
    delete entrusttime_;
  }
  if (valid_ != &::google::protobuf::internal::kEmptyString) {
    delete valid_;
  }
  if (respflag_ != &::google::protobuf::internal::kEmptyString) {
    delete respflag_;
  }
  if (issuccess_ != &::google::protobuf::internal::kEmptyString) {
    delete issuccess_;
  }
  if (recordnum_ != &::google::protobuf::internal::kEmptyString) {
    delete recordnum_;
  }
  if (currentdate_ != &::google::protobuf::internal::kEmptyString) {
    delete currentdate_;
  }
  if (entrustno_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustno_;
  }
  if (declareno_ != &::google::protobuf::internal::kEmptyString) {
    delete declareno_;
  }
  if (clientno_ != &::google::protobuf::internal::kEmptyString) {
    delete clientno_;
  }
  if (stockholderaccount_ != &::google::protobuf::internal::kEmptyString) {
    delete stockholderaccount_;
  }
  if (securityname_ != &::google::protobuf::internal::kEmptyString) {
    delete securityname_;
  }
  if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
    delete entrusttype_;
  }
  if (bsflagname_ != &::google::protobuf::internal::kEmptyString) {
    delete bsflagname_;
  }
  if (cjstatus_ != &::google::protobuf::internal::kEmptyString) {
    delete cjstatus_;
  }
  if (cjstatusname_ != &::google::protobuf::internal::kEmptyString) {
    delete cjstatusname_;
  }
  if (cjdate_ != &::google::protobuf::internal::kEmptyString) {
    delete cjdate_;
  }
  if (declaretime_ != &::google::protobuf::internal::kEmptyString) {
    delete declaretime_;
  }
  if (entrustpennum_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustpennum_;
  }
  if (pagestartpos_ != &::google::protobuf::internal::kEmptyString) {
    delete pagestartpos_;
  }
  if (havecancelnum_ != &::google::protobuf::internal::kEmptyString) {
    delete havecancelnum_;
  }
  if (this != default_instance_) {
  }
}

void INF_QueryBatchEntrust_Ack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_QueryBatchEntrust_Ack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_QueryBatchEntrust_Ack_descriptor_;
}

const INF_QueryBatchEntrust_Ack& INF_QueryBatchEntrust_Ack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_QueryBatchEntrust_Ack* INF_QueryBatchEntrust_Ack::default_instance_ = NULL;

INF_QueryBatchEntrust_Ack* INF_QueryBatchEntrust_Ack::New() const {
  return new INF_QueryBatchEntrust_Ack;
}

void INF_QueryBatchEntrust_Ack::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_entrustbatchno()) {
      if (entrustbatchno_ != &::google::protobuf::internal::kEmptyString) {
        entrustbatchno_->clear();
      }
    }
    if (has_entrustseq()) {
      if (entrustseq_ != &::google::protobuf::internal::kEmptyString) {
        entrustseq_->clear();
      }
    }
    if (has_marketid()) {
      if (marketid_ != &::google::protobuf::internal::kEmptyString) {
        marketid_->clear();
      }
    }
    if (has_securitycode()) {
      if (securitycode_ != &::google::protobuf::internal::kEmptyString) {
        securitycode_->clear();
      }
    }
    if (has_bsflag()) {
      if (bsflag_ != &::google::protobuf::internal::kEmptyString) {
        bsflag_->clear();
      }
    }
    if (has_entrustnum()) {
      if (entrustnum_ != &::google::protobuf::internal::kEmptyString) {
        entrustnum_->clear();
      }
    }
    if (has_entrustprice()) {
      if (entrustprice_ != &::google::protobuf::internal::kEmptyString) {
        entrustprice_->clear();
      }
    }
    if (has_entruststatus()) {
      if (entruststatus_ != &::google::protobuf::internal::kEmptyString) {
        entruststatus_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_cjnum()) {
      if (cjnum_ != &::google::protobuf::internal::kEmptyString) {
        cjnum_->clear();
      }
    }
    if (has_cjprice()) {
      if (cjprice_ != &::google::protobuf::internal::kEmptyString) {
        cjprice_->clear();
      }
    }
    if (has_entrusttime()) {
      if (entrusttime_ != &::google::protobuf::internal::kEmptyString) {
        entrusttime_->clear();
      }
    }
    if (has_valid()) {
      if (valid_ != &::google::protobuf::internal::kEmptyString) {
        valid_->clear();
      }
    }
    if (has_respflag()) {
      if (respflag_ != &::google::protobuf::internal::kEmptyString) {
        respflag_->clear();
      }
    }
    if (has_issuccess()) {
      if (issuccess_ != &::google::protobuf::internal::kEmptyString) {
        issuccess_->clear();
      }
    }
    if (has_recordnum()) {
      if (recordnum_ != &::google::protobuf::internal::kEmptyString) {
        recordnum_->clear();
      }
    }
    if (has_currentdate()) {
      if (currentdate_ != &::google::protobuf::internal::kEmptyString) {
        currentdate_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_entrustno()) {
      if (entrustno_ != &::google::protobuf::internal::kEmptyString) {
        entrustno_->clear();
      }
    }
    if (has_declareno()) {
      if (declareno_ != &::google::protobuf::internal::kEmptyString) {
        declareno_->clear();
      }
    }
    if (has_clientno()) {
      if (clientno_ != &::google::protobuf::internal::kEmptyString) {
        clientno_->clear();
      }
    }
    if (has_stockholderaccount()) {
      if (stockholderaccount_ != &::google::protobuf::internal::kEmptyString) {
        stockholderaccount_->clear();
      }
    }
    if (has_securityname()) {
      if (securityname_ != &::google::protobuf::internal::kEmptyString) {
        securityname_->clear();
      }
    }
    if (has_entrusttype()) {
      if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
        entrusttype_->clear();
      }
    }
    if (has_bsflagname()) {
      if (bsflagname_ != &::google::protobuf::internal::kEmptyString) {
        bsflagname_->clear();
      }
    }
    if (has_cjstatus()) {
      if (cjstatus_ != &::google::protobuf::internal::kEmptyString) {
        cjstatus_->clear();
      }
    }
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (has_cjstatusname()) {
      if (cjstatusname_ != &::google::protobuf::internal::kEmptyString) {
        cjstatusname_->clear();
      }
    }
    if (has_cjdate()) {
      if (cjdate_ != &::google::protobuf::internal::kEmptyString) {
        cjdate_->clear();
      }
    }
    if (has_declaretime()) {
      if (declaretime_ != &::google::protobuf::internal::kEmptyString) {
        declaretime_->clear();
      }
    }
    if (has_entrustpennum()) {
      if (entrustpennum_ != &::google::protobuf::internal::kEmptyString) {
        entrustpennum_->clear();
      }
    }
    if (has_pagestartpos()) {
      if (pagestartpos_ != &::google::protobuf::internal::kEmptyString) {
        pagestartpos_->clear();
      }
    }
    if (has_havecancelnum()) {
      if (havecancelnum_ != &::google::protobuf::internal::kEmptyString) {
        havecancelnum_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_QueryBatchEntrust_Ack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string EntrustBatchNO = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustbatchno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustbatchno().data(), this->entrustbatchno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_EntrustSeq;
        break;
      }
      
      // optional string EntrustSeq = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustSeq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustseq()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustseq().data(), this->entrustseq().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_MarketID;
        break;
      }
      
      // optional string MarketID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_MarketID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_marketid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->marketid().data(), this->marketid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_SecurityCode;
        break;
      }
      
      // optional string SecurityCode = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SecurityCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_securitycode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->securitycode().data(), this->securitycode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_BSflag;
        break;
      }
      
      // optional string BSflag = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_BSflag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bsflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bsflag().data(), this->bsflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_EntrustNum;
        break;
      }
      
      // optional string EntrustNum = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustnum().data(), this->entrustnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_EntrustPrice;
        break;
      }
      
      // optional string EntrustPrice = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustPrice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustprice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustprice().data(), this->entrustprice().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_EntrustStatus;
        break;
      }
      
      // optional string EntrustStatus = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entruststatus()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entruststatus().data(), this->entruststatus().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_CjNum;
        break;
      }
      
      // optional string CjNum = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CjNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cjnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cjnum().data(), this->cjnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_CjPrice;
        break;
      }
      
      // optional string CjPrice = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CjPrice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cjprice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cjprice().data(), this->cjprice().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_EntrustTime;
        break;
      }
      
      // optional string EntrustTime = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrusttime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrusttime().data(), this->entrusttime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_Valid;
        break;
      }
      
      // optional string Valid = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Valid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_valid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->valid().data(), this->valid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_RespFlag;
        break;
      }
      
      // optional string RespFlag = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RespFlag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_respflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->respflag().data(), this->respflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_IsSuccess;
        break;
      }
      
      // optional string IsSuccess = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_IsSuccess:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_issuccess()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->issuccess().data(), this->issuccess().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_RecordNum;
        break;
      }
      
      // optional string RecordNum = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RecordNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recordnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->recordnum().data(), this->recordnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_CurrentDate;
        break;
      }
      
      // optional string CurrentDate = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CurrentDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currentdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->currentdate().data(), this->currentdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_EntrustNo;
        break;
      }
      
      // optional string EntrustNo = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustno().data(), this->entrustno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_DeclareNo;
        break;
      }
      
      // optional string DeclareNo = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DeclareNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_declareno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->declareno().data(), this->declareno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_ClientNo;
        break;
      }
      
      // optional string ClientNo = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ClientNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->clientno().data(), this->clientno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_StockholderAccount;
        break;
      }
      
      // optional string StockholderAccount = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_StockholderAccount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stockholderaccount()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stockholderaccount().data(), this->stockholderaccount().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_SecurityName;
        break;
      }
      
      // optional string SecurityName = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SecurityName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_securityname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->securityname().data(), this->securityname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_EntrustType;
        break;
      }
      
      // optional string EntrustType = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrusttype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrusttype().data(), this->entrusttype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_BSflagName;
        break;
      }
      
      // optional string BSflagName = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_BSflagName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bsflagname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bsflagname().data(), this->bsflagname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(194)) goto parse_CjStatus;
        break;
      }
      
      // optional string CjStatus = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CjStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cjstatus()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cjstatus().data(), this->cjstatus().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(202)) goto parse_CjStatusName;
        break;
      }
      
      // optional string CjStatusName = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CjStatusName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cjstatusname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cjstatusname().data(), this->cjstatusname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(210)) goto parse_CjDate;
        break;
      }
      
      // optional string CjDate = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CjDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cjdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cjdate().data(), this->cjdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(218)) goto parse_DeclareTime;
        break;
      }
      
      // optional string DeclareTime = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DeclareTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_declaretime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->declaretime().data(), this->declaretime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(226)) goto parse_EntrustPenNum;
        break;
      }
      
      // optional string EntrustPenNum = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustPenNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustpennum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustpennum().data(), this->entrustpennum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(234)) goto parse_PageStartPos;
        break;
      }
      
      // optional string PageStartPos = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_PageStartPos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pagestartpos()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->pagestartpos().data(), this->pagestartpos().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(242)) goto parse_HaveCancelNum;
        break;
      }
      
      // optional string HaveCancelNum = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_HaveCancelNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_havecancelnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->havecancelnum().data(), this->havecancelnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_QueryBatchEntrust_Ack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string EntrustBatchNO = 1;
  if (has_entrustbatchno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustbatchno().data(), this->entrustbatchno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->entrustbatchno(), output);
  }
  
  // optional string EntrustSeq = 2;
  if (has_entrustseq()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustseq().data(), this->entrustseq().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->entrustseq(), output);
  }
  
  // optional string MarketID = 3;
  if (has_marketid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketid().data(), this->marketid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->marketid(), output);
  }
  
  // optional string SecurityCode = 4;
  if (has_securitycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitycode().data(), this->securitycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->securitycode(), output);
  }
  
  // optional string BSflag = 5;
  if (has_bsflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bsflag().data(), this->bsflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->bsflag(), output);
  }
  
  // optional string EntrustNum = 6;
  if (has_entrustnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustnum().data(), this->entrustnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->entrustnum(), output);
  }
  
  // optional string EntrustPrice = 7;
  if (has_entrustprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustprice().data(), this->entrustprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->entrustprice(), output);
  }
  
  // optional string EntrustStatus = 8;
  if (has_entruststatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entruststatus().data(), this->entruststatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->entruststatus(), output);
  }
  
  // optional string CjNum = 9;
  if (has_cjnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjnum().data(), this->cjnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->cjnum(), output);
  }
  
  // optional string CjPrice = 10;
  if (has_cjprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjprice().data(), this->cjprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->cjprice(), output);
  }
  
  // optional string EntrustTime = 11;
  if (has_entrusttime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttime().data(), this->entrusttime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->entrusttime(), output);
  }
  
  // optional string Valid = 12;
  if (has_valid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valid().data(), this->valid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->valid(), output);
  }
  
  // optional string RespFlag = 13;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->respflag(), output);
  }
  
  // optional string IsSuccess = 14;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->issuccess().data(), this->issuccess().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->issuccess(), output);
  }
  
  // optional string RecordNum = 15;
  if (has_recordnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->recordnum().data(), this->recordnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->recordnum(), output);
  }
  
  // optional string CurrentDate = 16;
  if (has_currentdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->currentdate().data(), this->currentdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->currentdate(), output);
  }
  
  // optional string EntrustNo = 17;
  if (has_entrustno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustno().data(), this->entrustno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->entrustno(), output);
  }
  
  // optional string DeclareNo = 18;
  if (has_declareno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->declareno().data(), this->declareno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->declareno(), output);
  }
  
  // optional string ClientNo = 19;
  if (has_clientno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clientno().data(), this->clientno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->clientno(), output);
  }
  
  // optional string StockholderAccount = 20;
  if (has_stockholderaccount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stockholderaccount().data(), this->stockholderaccount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->stockholderaccount(), output);
  }
  
  // optional string SecurityName = 21;
  if (has_securityname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securityname().data(), this->securityname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      21, this->securityname(), output);
  }
  
  // optional string EntrustType = 22;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      22, this->entrusttype(), output);
  }
  
  // optional string BSflagName = 23;
  if (has_bsflagname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bsflagname().data(), this->bsflagname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      23, this->bsflagname(), output);
  }
  
  // optional string CjStatus = 24;
  if (has_cjstatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjstatus().data(), this->cjstatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      24, this->cjstatus(), output);
  }
  
  // optional string CjStatusName = 25;
  if (has_cjstatusname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjstatusname().data(), this->cjstatusname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      25, this->cjstatusname(), output);
  }
  
  // optional string CjDate = 26;
  if (has_cjdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjdate().data(), this->cjdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      26, this->cjdate(), output);
  }
  
  // optional string DeclareTime = 27;
  if (has_declaretime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->declaretime().data(), this->declaretime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      27, this->declaretime(), output);
  }
  
  // optional string EntrustPenNum = 28;
  if (has_entrustpennum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustpennum().data(), this->entrustpennum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      28, this->entrustpennum(), output);
  }
  
  // optional string PageStartPos = 29;
  if (has_pagestartpos()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->pagestartpos().data(), this->pagestartpos().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      29, this->pagestartpos(), output);
  }
  
  // optional string HaveCancelNum = 30;
  if (has_havecancelnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->havecancelnum().data(), this->havecancelnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      30, this->havecancelnum(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_QueryBatchEntrust_Ack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string EntrustBatchNO = 1;
  if (has_entrustbatchno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustbatchno().data(), this->entrustbatchno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->entrustbatchno(), target);
  }
  
  // optional string EntrustSeq = 2;
  if (has_entrustseq()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustseq().data(), this->entrustseq().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->entrustseq(), target);
  }
  
  // optional string MarketID = 3;
  if (has_marketid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketid().data(), this->marketid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->marketid(), target);
  }
  
  // optional string SecurityCode = 4;
  if (has_securitycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitycode().data(), this->securitycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->securitycode(), target);
  }
  
  // optional string BSflag = 5;
  if (has_bsflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bsflag().data(), this->bsflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->bsflag(), target);
  }
  
  // optional string EntrustNum = 6;
  if (has_entrustnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustnum().data(), this->entrustnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->entrustnum(), target);
  }
  
  // optional string EntrustPrice = 7;
  if (has_entrustprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustprice().data(), this->entrustprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->entrustprice(), target);
  }
  
  // optional string EntrustStatus = 8;
  if (has_entruststatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entruststatus().data(), this->entruststatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->entruststatus(), target);
  }
  
  // optional string CjNum = 9;
  if (has_cjnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjnum().data(), this->cjnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->cjnum(), target);
  }
  
  // optional string CjPrice = 10;
  if (has_cjprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjprice().data(), this->cjprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->cjprice(), target);
  }
  
  // optional string EntrustTime = 11;
  if (has_entrusttime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttime().data(), this->entrusttime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->entrusttime(), target);
  }
  
  // optional string Valid = 12;
  if (has_valid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valid().data(), this->valid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->valid(), target);
  }
  
  // optional string RespFlag = 13;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->respflag(), target);
  }
  
  // optional string IsSuccess = 14;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->issuccess().data(), this->issuccess().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->issuccess(), target);
  }
  
  // optional string RecordNum = 15;
  if (has_recordnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->recordnum().data(), this->recordnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->recordnum(), target);
  }
  
  // optional string CurrentDate = 16;
  if (has_currentdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->currentdate().data(), this->currentdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->currentdate(), target);
  }
  
  // optional string EntrustNo = 17;
  if (has_entrustno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustno().data(), this->entrustno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->entrustno(), target);
  }
  
  // optional string DeclareNo = 18;
  if (has_declareno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->declareno().data(), this->declareno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->declareno(), target);
  }
  
  // optional string ClientNo = 19;
  if (has_clientno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->clientno().data(), this->clientno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->clientno(), target);
  }
  
  // optional string StockholderAccount = 20;
  if (has_stockholderaccount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stockholderaccount().data(), this->stockholderaccount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->stockholderaccount(), target);
  }
  
  // optional string SecurityName = 21;
  if (has_securityname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securityname().data(), this->securityname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->securityname(), target);
  }
  
  // optional string EntrustType = 22;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->entrusttype(), target);
  }
  
  // optional string BSflagName = 23;
  if (has_bsflagname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bsflagname().data(), this->bsflagname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->bsflagname(), target);
  }
  
  // optional string CjStatus = 24;
  if (has_cjstatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjstatus().data(), this->cjstatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->cjstatus(), target);
  }
  
  // optional string CjStatusName = 25;
  if (has_cjstatusname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjstatusname().data(), this->cjstatusname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->cjstatusname(), target);
  }
  
  // optional string CjDate = 26;
  if (has_cjdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjdate().data(), this->cjdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->cjdate(), target);
  }
  
  // optional string DeclareTime = 27;
  if (has_declaretime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->declaretime().data(), this->declaretime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->declaretime(), target);
  }
  
  // optional string EntrustPenNum = 28;
  if (has_entrustpennum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustpennum().data(), this->entrustpennum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->entrustpennum(), target);
  }
  
  // optional string PageStartPos = 29;
  if (has_pagestartpos()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->pagestartpos().data(), this->pagestartpos().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->pagestartpos(), target);
  }
  
  // optional string HaveCancelNum = 30;
  if (has_havecancelnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->havecancelnum().data(), this->havecancelnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->havecancelnum(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_QueryBatchEntrust_Ack::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string EntrustBatchNO = 1;
    if (has_entrustbatchno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustbatchno());
    }
    
    // optional string EntrustSeq = 2;
    if (has_entrustseq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustseq());
    }
    
    // optional string MarketID = 3;
    if (has_marketid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->marketid());
    }
    
    // optional string SecurityCode = 4;
    if (has_securitycode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->securitycode());
    }
    
    // optional string BSflag = 5;
    if (has_bsflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bsflag());
    }
    
    // optional string EntrustNum = 6;
    if (has_entrustnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustnum());
    }
    
    // optional string EntrustPrice = 7;
    if (has_entrustprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustprice());
    }
    
    // optional string EntrustStatus = 8;
    if (has_entruststatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entruststatus());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string CjNum = 9;
    if (has_cjnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cjnum());
    }
    
    // optional string CjPrice = 10;
    if (has_cjprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cjprice());
    }
    
    // optional string EntrustTime = 11;
    if (has_entrusttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrusttime());
    }
    
    // optional string Valid = 12;
    if (has_valid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->valid());
    }
    
    // optional string RespFlag = 13;
    if (has_respflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->respflag());
    }
    
    // optional string IsSuccess = 14;
    if (has_issuccess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->issuccess());
    }
    
    // optional string RecordNum = 15;
    if (has_recordnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->recordnum());
    }
    
    // optional string CurrentDate = 16;
    if (has_currentdate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->currentdate());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string EntrustNo = 17;
    if (has_entrustno()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustno());
    }
    
    // optional string DeclareNo = 18;
    if (has_declareno()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->declareno());
    }
    
    // optional string ClientNo = 19;
    if (has_clientno()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->clientno());
    }
    
    // optional string StockholderAccount = 20;
    if (has_stockholderaccount()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stockholderaccount());
    }
    
    // optional string SecurityName = 21;
    if (has_securityname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->securityname());
    }
    
    // optional string EntrustType = 22;
    if (has_entrusttype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrusttype());
    }
    
    // optional string BSflagName = 23;
    if (has_bsflagname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bsflagname());
    }
    
    // optional string CjStatus = 24;
    if (has_cjstatus()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cjstatus());
    }
    
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional string CjStatusName = 25;
    if (has_cjstatusname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cjstatusname());
    }
    
    // optional string CjDate = 26;
    if (has_cjdate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cjdate());
    }
    
    // optional string DeclareTime = 27;
    if (has_declaretime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->declaretime());
    }
    
    // optional string EntrustPenNum = 28;
    if (has_entrustpennum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustpennum());
    }
    
    // optional string PageStartPos = 29;
    if (has_pagestartpos()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pagestartpos());
    }
    
    // optional string HaveCancelNum = 30;
    if (has_havecancelnum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->havecancelnum());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_QueryBatchEntrust_Ack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_QueryBatchEntrust_Ack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_QueryBatchEntrust_Ack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_QueryBatchEntrust_Ack::MergeFrom(const INF_QueryBatchEntrust_Ack& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_entrustbatchno()) {
      set_entrustbatchno(from.entrustbatchno());
    }
    if (from.has_entrustseq()) {
      set_entrustseq(from.entrustseq());
    }
    if (from.has_marketid()) {
      set_marketid(from.marketid());
    }
    if (from.has_securitycode()) {
      set_securitycode(from.securitycode());
    }
    if (from.has_bsflag()) {
      set_bsflag(from.bsflag());
    }
    if (from.has_entrustnum()) {
      set_entrustnum(from.entrustnum());
    }
    if (from.has_entrustprice()) {
      set_entrustprice(from.entrustprice());
    }
    if (from.has_entruststatus()) {
      set_entruststatus(from.entruststatus());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_cjnum()) {
      set_cjnum(from.cjnum());
    }
    if (from.has_cjprice()) {
      set_cjprice(from.cjprice());
    }
    if (from.has_entrusttime()) {
      set_entrusttime(from.entrusttime());
    }
    if (from.has_valid()) {
      set_valid(from.valid());
    }
    if (from.has_respflag()) {
      set_respflag(from.respflag());
    }
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_recordnum()) {
      set_recordnum(from.recordnum());
    }
    if (from.has_currentdate()) {
      set_currentdate(from.currentdate());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_entrustno()) {
      set_entrustno(from.entrustno());
    }
    if (from.has_declareno()) {
      set_declareno(from.declareno());
    }
    if (from.has_clientno()) {
      set_clientno(from.clientno());
    }
    if (from.has_stockholderaccount()) {
      set_stockholderaccount(from.stockholderaccount());
    }
    if (from.has_securityname()) {
      set_securityname(from.securityname());
    }
    if (from.has_entrusttype()) {
      set_entrusttype(from.entrusttype());
    }
    if (from.has_bsflagname()) {
      set_bsflagname(from.bsflagname());
    }
    if (from.has_cjstatus()) {
      set_cjstatus(from.cjstatus());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_cjstatusname()) {
      set_cjstatusname(from.cjstatusname());
    }
    if (from.has_cjdate()) {
      set_cjdate(from.cjdate());
    }
    if (from.has_declaretime()) {
      set_declaretime(from.declaretime());
    }
    if (from.has_entrustpennum()) {
      set_entrustpennum(from.entrustpennum());
    }
    if (from.has_pagestartpos()) {
      set_pagestartpos(from.pagestartpos());
    }
    if (from.has_havecancelnum()) {
      set_havecancelnum(from.havecancelnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_QueryBatchEntrust_Ack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_QueryBatchEntrust_Ack::CopyFrom(const INF_QueryBatchEntrust_Ack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_QueryBatchEntrust_Ack::IsInitialized() const {
  
  return true;
}

void INF_QueryBatchEntrust_Ack::Swap(INF_QueryBatchEntrust_Ack* other) {
  if (other != this) {
    std::swap(entrustbatchno_, other->entrustbatchno_);
    std::swap(entrustseq_, other->entrustseq_);
    std::swap(marketid_, other->marketid_);
    std::swap(securitycode_, other->securitycode_);
    std::swap(bsflag_, other->bsflag_);
    std::swap(entrustnum_, other->entrustnum_);
    std::swap(entrustprice_, other->entrustprice_);
    std::swap(entruststatus_, other->entruststatus_);
    std::swap(cjnum_, other->cjnum_);
    std::swap(cjprice_, other->cjprice_);
    std::swap(entrusttime_, other->entrusttime_);
    std::swap(valid_, other->valid_);
    std::swap(respflag_, other->respflag_);
    std::swap(issuccess_, other->issuccess_);
    std::swap(recordnum_, other->recordnum_);
    std::swap(currentdate_, other->currentdate_);
    std::swap(entrustno_, other->entrustno_);
    std::swap(declareno_, other->declareno_);
    std::swap(clientno_, other->clientno_);
    std::swap(stockholderaccount_, other->stockholderaccount_);
    std::swap(securityname_, other->securityname_);
    std::swap(entrusttype_, other->entrusttype_);
    std::swap(bsflagname_, other->bsflagname_);
    std::swap(cjstatus_, other->cjstatus_);
    std::swap(cjstatusname_, other->cjstatusname_);
    std::swap(cjdate_, other->cjdate_);
    std::swap(declaretime_, other->declaretime_);
    std::swap(entrustpennum_, other->entrustpennum_);
    std::swap(pagestartpos_, other->pagestartpos_);
    std::swap(havecancelnum_, other->havecancelnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_QueryBatchEntrust_Ack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_QueryBatchEntrust_Ack_descriptor_;
  metadata.reflection = INF_QueryBatchEntrust_Ack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_OneCancel_Ack::kValidFieldNumber;
const int INF_OneCancel_Ack::kRespFlagFieldNumber;
const int INF_OneCancel_Ack::kIsSuccessFieldNumber;
#endif  // !_MSC_VER

INF_OneCancel_Ack::INF_OneCancel_Ack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_OneCancel_Ack::InitAsDefaultInstance() {
}

INF_OneCancel_Ack::INF_OneCancel_Ack(const INF_OneCancel_Ack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_OneCancel_Ack::SharedCtor() {
  _cached_size_ = 0;
  valid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  respflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  issuccess_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_OneCancel_Ack::~INF_OneCancel_Ack() {
  SharedDtor();
}

void INF_OneCancel_Ack::SharedDtor() {
  if (valid_ != &::google::protobuf::internal::kEmptyString) {
    delete valid_;
  }
  if (respflag_ != &::google::protobuf::internal::kEmptyString) {
    delete respflag_;
  }
  if (issuccess_ != &::google::protobuf::internal::kEmptyString) {
    delete issuccess_;
  }
  if (this != default_instance_) {
  }
}

void INF_OneCancel_Ack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_OneCancel_Ack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_OneCancel_Ack_descriptor_;
}

const INF_OneCancel_Ack& INF_OneCancel_Ack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_OneCancel_Ack* INF_OneCancel_Ack::default_instance_ = NULL;

INF_OneCancel_Ack* INF_OneCancel_Ack::New() const {
  return new INF_OneCancel_Ack;
}

void INF_OneCancel_Ack::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_valid()) {
      if (valid_ != &::google::protobuf::internal::kEmptyString) {
        valid_->clear();
      }
    }
    if (has_respflag()) {
      if (respflag_ != &::google::protobuf::internal::kEmptyString) {
        respflag_->clear();
      }
    }
    if (has_issuccess()) {
      if (issuccess_ != &::google::protobuf::internal::kEmptyString) {
        issuccess_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_OneCancel_Ack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Valid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_valid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->valid().data(), this->valid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_RespFlag;
        break;
      }
      
      // optional string RespFlag = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RespFlag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_respflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->respflag().data(), this->respflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_IsSuccess;
        break;
      }
      
      // optional string IsSuccess = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_IsSuccess:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_issuccess()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->issuccess().data(), this->issuccess().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_OneCancel_Ack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string Valid = 1;
  if (has_valid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valid().data(), this->valid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->valid(), output);
  }
  
  // optional string RespFlag = 2;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->respflag(), output);
  }
  
  // optional string IsSuccess = 3;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->issuccess().data(), this->issuccess().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->issuccess(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_OneCancel_Ack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string Valid = 1;
  if (has_valid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valid().data(), this->valid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->valid(), target);
  }
  
  // optional string RespFlag = 2;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->respflag(), target);
  }
  
  // optional string IsSuccess = 3;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->issuccess().data(), this->issuccess().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->issuccess(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_OneCancel_Ack::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string Valid = 1;
    if (has_valid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->valid());
    }
    
    // optional string RespFlag = 2;
    if (has_respflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->respflag());
    }
    
    // optional string IsSuccess = 3;
    if (has_issuccess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->issuccess());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_OneCancel_Ack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_OneCancel_Ack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_OneCancel_Ack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_OneCancel_Ack::MergeFrom(const INF_OneCancel_Ack& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_valid()) {
      set_valid(from.valid());
    }
    if (from.has_respflag()) {
      set_respflag(from.respflag());
    }
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_OneCancel_Ack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_OneCancel_Ack::CopyFrom(const INF_OneCancel_Ack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_OneCancel_Ack::IsInitialized() const {
  
  return true;
}

void INF_OneCancel_Ack::Swap(INF_OneCancel_Ack* other) {
  if (other != this) {
    std::swap(valid_, other->valid_);
    std::swap(respflag_, other->respflag_);
    std::swap(issuccess_, other->issuccess_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_OneCancel_Ack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_OneCancel_Ack_descriptor_;
  metadata.reflection = INF_OneCancel_Ack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_BatchCancel_Ack::kValidFieldNumber;
const int INF_BatchCancel_Ack::kRespFlagFieldNumber;
const int INF_BatchCancel_Ack::kIsSuccessFieldNumber;
const int INF_BatchCancel_Ack::kCancelPenNumFieldNumber;
const int INF_BatchCancel_Ack::kCancelNumFieldNumber;
#endif  // !_MSC_VER

INF_BatchCancel_Ack::INF_BatchCancel_Ack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_BatchCancel_Ack::InitAsDefaultInstance() {
}

INF_BatchCancel_Ack::INF_BatchCancel_Ack(const INF_BatchCancel_Ack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_BatchCancel_Ack::SharedCtor() {
  _cached_size_ = 0;
  valid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  respflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  issuccess_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cancelpennum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cancelnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_BatchCancel_Ack::~INF_BatchCancel_Ack() {
  SharedDtor();
}

void INF_BatchCancel_Ack::SharedDtor() {
  if (valid_ != &::google::protobuf::internal::kEmptyString) {
    delete valid_;
  }
  if (respflag_ != &::google::protobuf::internal::kEmptyString) {
    delete respflag_;
  }
  if (issuccess_ != &::google::protobuf::internal::kEmptyString) {
    delete issuccess_;
  }
  if (cancelpennum_ != &::google::protobuf::internal::kEmptyString) {
    delete cancelpennum_;
  }
  if (cancelnum_ != &::google::protobuf::internal::kEmptyString) {
    delete cancelnum_;
  }
  if (this != default_instance_) {
  }
}

void INF_BatchCancel_Ack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_BatchCancel_Ack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_BatchCancel_Ack_descriptor_;
}

const INF_BatchCancel_Ack& INF_BatchCancel_Ack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_BatchCancel_Ack* INF_BatchCancel_Ack::default_instance_ = NULL;

INF_BatchCancel_Ack* INF_BatchCancel_Ack::New() const {
  return new INF_BatchCancel_Ack;
}

void INF_BatchCancel_Ack::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_valid()) {
      if (valid_ != &::google::protobuf::internal::kEmptyString) {
        valid_->clear();
      }
    }
    if (has_respflag()) {
      if (respflag_ != &::google::protobuf::internal::kEmptyString) {
        respflag_->clear();
      }
    }
    if (has_issuccess()) {
      if (issuccess_ != &::google::protobuf::internal::kEmptyString) {
        issuccess_->clear();
      }
    }
    if (has_cancelpennum()) {
      if (cancelpennum_ != &::google::protobuf::internal::kEmptyString) {
        cancelpennum_->clear();
      }
    }
    if (has_cancelnum()) {
      if (cancelnum_ != &::google::protobuf::internal::kEmptyString) {
        cancelnum_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_BatchCancel_Ack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Valid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_valid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->valid().data(), this->valid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_RespFlag;
        break;
      }
      
      // optional string RespFlag = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RespFlag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_respflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->respflag().data(), this->respflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_IsSuccess;
        break;
      }
      
      // optional string IsSuccess = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_IsSuccess:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_issuccess()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->issuccess().data(), this->issuccess().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_CancelPenNum;
        break;
      }
      
      // optional string CancelPenNum = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CancelPenNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cancelpennum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cancelpennum().data(), this->cancelpennum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_CancelNum;
        break;
      }
      
      // optional string CancelNum = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CancelNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cancelnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cancelnum().data(), this->cancelnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_BatchCancel_Ack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string Valid = 1;
  if (has_valid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valid().data(), this->valid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->valid(), output);
  }
  
  // optional string RespFlag = 2;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->respflag(), output);
  }
  
  // optional string IsSuccess = 3;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->issuccess().data(), this->issuccess().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->issuccess(), output);
  }
  
  // optional string CancelPenNum = 4;
  if (has_cancelpennum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cancelpennum().data(), this->cancelpennum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->cancelpennum(), output);
  }
  
  // optional string CancelNum = 5;
  if (has_cancelnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cancelnum().data(), this->cancelnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->cancelnum(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_BatchCancel_Ack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string Valid = 1;
  if (has_valid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valid().data(), this->valid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->valid(), target);
  }
  
  // optional string RespFlag = 2;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->respflag(), target);
  }
  
  // optional string IsSuccess = 3;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->issuccess().data(), this->issuccess().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->issuccess(), target);
  }
  
  // optional string CancelPenNum = 4;
  if (has_cancelpennum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cancelpennum().data(), this->cancelpennum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->cancelpennum(), target);
  }
  
  // optional string CancelNum = 5;
  if (has_cancelnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cancelnum().data(), this->cancelnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->cancelnum(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_BatchCancel_Ack::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string Valid = 1;
    if (has_valid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->valid());
    }
    
    // optional string RespFlag = 2;
    if (has_respflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->respflag());
    }
    
    // optional string IsSuccess = 3;
    if (has_issuccess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->issuccess());
    }
    
    // optional string CancelPenNum = 4;
    if (has_cancelpennum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cancelpennum());
    }
    
    // optional string CancelNum = 5;
    if (has_cancelnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cancelnum());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_BatchCancel_Ack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_BatchCancel_Ack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_BatchCancel_Ack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_BatchCancel_Ack::MergeFrom(const INF_BatchCancel_Ack& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_valid()) {
      set_valid(from.valid());
    }
    if (from.has_respflag()) {
      set_respflag(from.respflag());
    }
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_cancelpennum()) {
      set_cancelpennum(from.cancelpennum());
    }
    if (from.has_cancelnum()) {
      set_cancelnum(from.cancelnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_BatchCancel_Ack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_BatchCancel_Ack::CopyFrom(const INF_BatchCancel_Ack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_BatchCancel_Ack::IsInitialized() const {
  
  return true;
}

void INF_BatchCancel_Ack::Swap(INF_BatchCancel_Ack* other) {
  if (other != this) {
    std::swap(valid_, other->valid_);
    std::swap(respflag_, other->respflag_);
    std::swap(issuccess_, other->issuccess_);
    std::swap(cancelpennum_, other->cancelpennum_);
    std::swap(cancelnum_, other->cancelnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_BatchCancel_Ack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_BatchCancel_Ack_descriptor_;
  metadata.reflection = INF_BatchCancel_Ack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_QueryETFbaseInfo_Ack::kETFNameFieldNumber;
const int INF_QueryETFbaseInfo_Ack::kOneMarketCodeFieldNumber;
const int INF_QueryETFbaseInfo_Ack::kTwoMarketCodeFieldNumber;
const int INF_QueryETFbaseInfo_Ack::kETFminPurRedemUnitFieldNumber;
const int INF_QueryETFbaseInfo_Ack::kCashDifferFieldNumber;
const int INF_QueryETFbaseInfo_Ack::kCastReplaceRatioFieldNumber;
const int INF_QueryETFbaseInfo_Ack::kPurRedemStatusFieldNumber;
const int INF_QueryETFbaseInfo_Ack::kEstimDifferFieldNumber;
const int INF_QueryETFbaseInfo_Ack::kUnitNetValueFieldNumber;
const int INF_QueryETFbaseInfo_Ack::kAllStocksNumFieldNumber;
const int INF_QueryETFbaseInfo_Ack::kRespFlagFieldNumber;
const int INF_QueryETFbaseInfo_Ack::kIsSuccessFieldNumber;
const int INF_QueryETFbaseInfo_Ack::kRecordNumFieldNumber;
const int INF_QueryETFbaseInfo_Ack::kSubscriptCodeFieldNumber;
const int INF_QueryETFbaseInfo_Ack::kETFNumFieldNumber;
const int INF_QueryETFbaseInfo_Ack::kCashBalancesFieldNumber;
const int INF_QueryETFbaseInfo_Ack::kIsPurRedeemFieldNumber;
const int INF_QueryETFbaseInfo_Ack::kTrailerDateFieldNumber;
const int INF_QueryETFbaseInfo_Ack::kPreCashDifferFieldNumber;
const int INF_QueryETFbaseInfo_Ack::kFundNetFieldNumber;
const int INF_QueryETFbaseInfo_Ack::kStockNumFieldNumber;
const int INF_QueryETFbaseInfo_Ack::kETFAttrFieldNumber;
#endif  // !_MSC_VER

INF_QueryETFbaseInfo_Ack::INF_QueryETFbaseInfo_Ack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_QueryETFbaseInfo_Ack::InitAsDefaultInstance() {
}

INF_QueryETFbaseInfo_Ack::INF_QueryETFbaseInfo_Ack(const INF_QueryETFbaseInfo_Ack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_QueryETFbaseInfo_Ack::SharedCtor() {
  _cached_size_ = 0;
  etfname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  onemarketcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  twomarketcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  etfminpurredemunit_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cashdiffer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  castreplaceratio_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  purredemstatus_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  estimdiffer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  unitnetvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  allstocksnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  respflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  issuccess_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  recordnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  subscriptcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  etfnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cashbalances_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ispurredeem_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  trailerdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  precashdiffer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  fundnet_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stocknum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  etfattr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_QueryETFbaseInfo_Ack::~INF_QueryETFbaseInfo_Ack() {
  SharedDtor();
}

void INF_QueryETFbaseInfo_Ack::SharedDtor() {
  if (etfname_ != &::google::protobuf::internal::kEmptyString) {
    delete etfname_;
  }
  if (onemarketcode_ != &::google::protobuf::internal::kEmptyString) {
    delete onemarketcode_;
  }
  if (twomarketcode_ != &::google::protobuf::internal::kEmptyString) {
    delete twomarketcode_;
  }
  if (etfminpurredemunit_ != &::google::protobuf::internal::kEmptyString) {
    delete etfminpurredemunit_;
  }
  if (cashdiffer_ != &::google::protobuf::internal::kEmptyString) {
    delete cashdiffer_;
  }
  if (castreplaceratio_ != &::google::protobuf::internal::kEmptyString) {
    delete castreplaceratio_;
  }
  if (purredemstatus_ != &::google::protobuf::internal::kEmptyString) {
    delete purredemstatus_;
  }
  if (estimdiffer_ != &::google::protobuf::internal::kEmptyString) {
    delete estimdiffer_;
  }
  if (unitnetvalue_ != &::google::protobuf::internal::kEmptyString) {
    delete unitnetvalue_;
  }
  if (allstocksnum_ != &::google::protobuf::internal::kEmptyString) {
    delete allstocksnum_;
  }
  if (respflag_ != &::google::protobuf::internal::kEmptyString) {
    delete respflag_;
  }
  if (issuccess_ != &::google::protobuf::internal::kEmptyString) {
    delete issuccess_;
  }
  if (recordnum_ != &::google::protobuf::internal::kEmptyString) {
    delete recordnum_;
  }
  if (subscriptcode_ != &::google::protobuf::internal::kEmptyString) {
    delete subscriptcode_;
  }
  if (etfnum_ != &::google::protobuf::internal::kEmptyString) {
    delete etfnum_;
  }
  if (cashbalances_ != &::google::protobuf::internal::kEmptyString) {
    delete cashbalances_;
  }
  if (ispurredeem_ != &::google::protobuf::internal::kEmptyString) {
    delete ispurredeem_;
  }
  if (trailerdate_ != &::google::protobuf::internal::kEmptyString) {
    delete trailerdate_;
  }
  if (precashdiffer_ != &::google::protobuf::internal::kEmptyString) {
    delete precashdiffer_;
  }
  if (fundnet_ != &::google::protobuf::internal::kEmptyString) {
    delete fundnet_;
  }
  if (stocknum_ != &::google::protobuf::internal::kEmptyString) {
    delete stocknum_;
  }
  if (etfattr_ != &::google::protobuf::internal::kEmptyString) {
    delete etfattr_;
  }
  if (this != default_instance_) {
  }
}

void INF_QueryETFbaseInfo_Ack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_QueryETFbaseInfo_Ack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_QueryETFbaseInfo_Ack_descriptor_;
}

const INF_QueryETFbaseInfo_Ack& INF_QueryETFbaseInfo_Ack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_QueryETFbaseInfo_Ack* INF_QueryETFbaseInfo_Ack::default_instance_ = NULL;

INF_QueryETFbaseInfo_Ack* INF_QueryETFbaseInfo_Ack::New() const {
  return new INF_QueryETFbaseInfo_Ack;
}

void INF_QueryETFbaseInfo_Ack::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_etfname()) {
      if (etfname_ != &::google::protobuf::internal::kEmptyString) {
        etfname_->clear();
      }
    }
    if (has_onemarketcode()) {
      if (onemarketcode_ != &::google::protobuf::internal::kEmptyString) {
        onemarketcode_->clear();
      }
    }
    if (has_twomarketcode()) {
      if (twomarketcode_ != &::google::protobuf::internal::kEmptyString) {
        twomarketcode_->clear();
      }
    }
    if (has_etfminpurredemunit()) {
      if (etfminpurredemunit_ != &::google::protobuf::internal::kEmptyString) {
        etfminpurredemunit_->clear();
      }
    }
    if (has_cashdiffer()) {
      if (cashdiffer_ != &::google::protobuf::internal::kEmptyString) {
        cashdiffer_->clear();
      }
    }
    if (has_castreplaceratio()) {
      if (castreplaceratio_ != &::google::protobuf::internal::kEmptyString) {
        castreplaceratio_->clear();
      }
    }
    if (has_purredemstatus()) {
      if (purredemstatus_ != &::google::protobuf::internal::kEmptyString) {
        purredemstatus_->clear();
      }
    }
    if (has_estimdiffer()) {
      if (estimdiffer_ != &::google::protobuf::internal::kEmptyString) {
        estimdiffer_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_unitnetvalue()) {
      if (unitnetvalue_ != &::google::protobuf::internal::kEmptyString) {
        unitnetvalue_->clear();
      }
    }
    if (has_allstocksnum()) {
      if (allstocksnum_ != &::google::protobuf::internal::kEmptyString) {
        allstocksnum_->clear();
      }
    }
    if (has_respflag()) {
      if (respflag_ != &::google::protobuf::internal::kEmptyString) {
        respflag_->clear();
      }
    }
    if (has_issuccess()) {
      if (issuccess_ != &::google::protobuf::internal::kEmptyString) {
        issuccess_->clear();
      }
    }
    if (has_recordnum()) {
      if (recordnum_ != &::google::protobuf::internal::kEmptyString) {
        recordnum_->clear();
      }
    }
    if (has_subscriptcode()) {
      if (subscriptcode_ != &::google::protobuf::internal::kEmptyString) {
        subscriptcode_->clear();
      }
    }
    if (has_etfnum()) {
      if (etfnum_ != &::google::protobuf::internal::kEmptyString) {
        etfnum_->clear();
      }
    }
    if (has_cashbalances()) {
      if (cashbalances_ != &::google::protobuf::internal::kEmptyString) {
        cashbalances_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_ispurredeem()) {
      if (ispurredeem_ != &::google::protobuf::internal::kEmptyString) {
        ispurredeem_->clear();
      }
    }
    if (has_trailerdate()) {
      if (trailerdate_ != &::google::protobuf::internal::kEmptyString) {
        trailerdate_->clear();
      }
    }
    if (has_precashdiffer()) {
      if (precashdiffer_ != &::google::protobuf::internal::kEmptyString) {
        precashdiffer_->clear();
      }
    }
    if (has_fundnet()) {
      if (fundnet_ != &::google::protobuf::internal::kEmptyString) {
        fundnet_->clear();
      }
    }
    if (has_stocknum()) {
      if (stocknum_ != &::google::protobuf::internal::kEmptyString) {
        stocknum_->clear();
      }
    }
    if (has_etfattr()) {
      if (etfattr_ != &::google::protobuf::internal::kEmptyString) {
        etfattr_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_QueryETFbaseInfo_Ack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ETFName = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etfname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->etfname().data(), this->etfname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_OneMarketCode;
        break;
      }
      
      // optional string OneMarketCode = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OneMarketCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_onemarketcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->onemarketcode().data(), this->onemarketcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_TwoMarketCode;
        break;
      }
      
      // optional string TwoMarketCode = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_TwoMarketCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_twomarketcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->twomarketcode().data(), this->twomarketcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_ETFminPurRedemUnit;
        break;
      }
      
      // optional string ETFminPurRedemUnit = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ETFminPurRedemUnit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etfminpurredemunit()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->etfminpurredemunit().data(), this->etfminpurredemunit().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_CashDiffer;
        break;
      }
      
      // optional string CashDiffer = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CashDiffer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cashdiffer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cashdiffer().data(), this->cashdiffer().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_CastReplaceRatio;
        break;
      }
      
      // optional string CastReplaceRatio = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CastReplaceRatio:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_castreplaceratio()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->castreplaceratio().data(), this->castreplaceratio().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_PurRedemStatus;
        break;
      }
      
      // optional string PurRedemStatus = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_PurRedemStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_purredemstatus()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->purredemstatus().data(), this->purredemstatus().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_EstimDiffer;
        break;
      }
      
      // optional string EstimDiffer = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EstimDiffer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_estimdiffer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->estimdiffer().data(), this->estimdiffer().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_UnitNetValue;
        break;
      }
      
      // optional string UnitNetValue = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_UnitNetValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unitnetvalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->unitnetvalue().data(), this->unitnetvalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_AllStocksNum;
        break;
      }
      
      // optional string AllStocksNum = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_AllStocksNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_allstocksnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->allstocksnum().data(), this->allstocksnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_RespFlag;
        break;
      }
      
      // optional string RespFlag = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RespFlag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_respflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->respflag().data(), this->respflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_IsSuccess;
        break;
      }
      
      // optional string IsSuccess = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_IsSuccess:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_issuccess()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->issuccess().data(), this->issuccess().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_RecordNum;
        break;
      }
      
      // optional string RecordNum = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RecordNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recordnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->recordnum().data(), this->recordnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_subscriptCode;
        break;
      }
      
      // optional string subscriptCode = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_subscriptCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subscriptcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->subscriptcode().data(), this->subscriptcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_ETFNum;
        break;
      }
      
      // optional string ETFNum = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ETFNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etfnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->etfnum().data(), this->etfnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_CashBalances;
        break;
      }
      
      // optional string CashBalances = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CashBalances:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cashbalances()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cashbalances().data(), this->cashbalances().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_IsPurRedeem;
        break;
      }
      
      // optional string IsPurRedeem = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_IsPurRedeem:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ispurredeem()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ispurredeem().data(), this->ispurredeem().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_TrailerDate;
        break;
      }
      
      // optional string TrailerDate = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_TrailerDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trailerdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->trailerdate().data(), this->trailerdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_PreCashDiffer;
        break;
      }
      
      // optional string PreCashDiffer = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_PreCashDiffer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_precashdiffer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->precashdiffer().data(), this->precashdiffer().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_FundNet;
        break;
      }
      
      // optional string FundNet = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_FundNet:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fundnet()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->fundnet().data(), this->fundnet().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_StockNum;
        break;
      }
      
      // optional string StockNum = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_StockNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stocknum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stocknum().data(), this->stocknum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_ETFAttr;
        break;
      }
      
      // optional string ETFAttr = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ETFAttr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etfattr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->etfattr().data(), this->etfattr().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_QueryETFbaseInfo_Ack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string ETFName = 1;
  if (has_etfname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etfname().data(), this->etfname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->etfname(), output);
  }
  
  // optional string OneMarketCode = 2;
  if (has_onemarketcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->onemarketcode().data(), this->onemarketcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->onemarketcode(), output);
  }
  
  // optional string TwoMarketCode = 3;
  if (has_twomarketcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->twomarketcode().data(), this->twomarketcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->twomarketcode(), output);
  }
  
  // optional string ETFminPurRedemUnit = 4;
  if (has_etfminpurredemunit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etfminpurredemunit().data(), this->etfminpurredemunit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->etfminpurredemunit(), output);
  }
  
  // optional string CashDiffer = 5;
  if (has_cashdiffer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cashdiffer().data(), this->cashdiffer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->cashdiffer(), output);
  }
  
  // optional string CastReplaceRatio = 6;
  if (has_castreplaceratio()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->castreplaceratio().data(), this->castreplaceratio().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->castreplaceratio(), output);
  }
  
  // optional string PurRedemStatus = 7;
  if (has_purredemstatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->purredemstatus().data(), this->purredemstatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->purredemstatus(), output);
  }
  
  // optional string EstimDiffer = 8;
  if (has_estimdiffer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->estimdiffer().data(), this->estimdiffer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->estimdiffer(), output);
  }
  
  // optional string UnitNetValue = 9;
  if (has_unitnetvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->unitnetvalue().data(), this->unitnetvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->unitnetvalue(), output);
  }
  
  // optional string AllStocksNum = 10;
  if (has_allstocksnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->allstocksnum().data(), this->allstocksnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->allstocksnum(), output);
  }
  
  // optional string RespFlag = 11;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->respflag(), output);
  }
  
  // optional string IsSuccess = 12;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->issuccess().data(), this->issuccess().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->issuccess(), output);
  }
  
  // optional string RecordNum = 13;
  if (has_recordnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->recordnum().data(), this->recordnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->recordnum(), output);
  }
  
  // optional string subscriptCode = 14;
  if (has_subscriptcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->subscriptcode().data(), this->subscriptcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->subscriptcode(), output);
  }
  
  // optional string ETFNum = 15;
  if (has_etfnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etfnum().data(), this->etfnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->etfnum(), output);
  }
  
  // optional string CashBalances = 16;
  if (has_cashbalances()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cashbalances().data(), this->cashbalances().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->cashbalances(), output);
  }
  
  // optional string IsPurRedeem = 17;
  if (has_ispurredeem()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ispurredeem().data(), this->ispurredeem().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->ispurredeem(), output);
  }
  
  // optional string TrailerDate = 18;
  if (has_trailerdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->trailerdate().data(), this->trailerdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->trailerdate(), output);
  }
  
  // optional string PreCashDiffer = 19;
  if (has_precashdiffer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->precashdiffer().data(), this->precashdiffer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->precashdiffer(), output);
  }
  
  // optional string FundNet = 20;
  if (has_fundnet()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fundnet().data(), this->fundnet().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->fundnet(), output);
  }
  
  // optional string StockNum = 21;
  if (has_stocknum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stocknum().data(), this->stocknum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      21, this->stocknum(), output);
  }
  
  // optional string ETFAttr = 22;
  if (has_etfattr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etfattr().data(), this->etfattr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      22, this->etfattr(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_QueryETFbaseInfo_Ack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string ETFName = 1;
  if (has_etfname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etfname().data(), this->etfname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->etfname(), target);
  }
  
  // optional string OneMarketCode = 2;
  if (has_onemarketcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->onemarketcode().data(), this->onemarketcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->onemarketcode(), target);
  }
  
  // optional string TwoMarketCode = 3;
  if (has_twomarketcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->twomarketcode().data(), this->twomarketcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->twomarketcode(), target);
  }
  
  // optional string ETFminPurRedemUnit = 4;
  if (has_etfminpurredemunit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etfminpurredemunit().data(), this->etfminpurredemunit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->etfminpurredemunit(), target);
  }
  
  // optional string CashDiffer = 5;
  if (has_cashdiffer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cashdiffer().data(), this->cashdiffer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->cashdiffer(), target);
  }
  
  // optional string CastReplaceRatio = 6;
  if (has_castreplaceratio()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->castreplaceratio().data(), this->castreplaceratio().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->castreplaceratio(), target);
  }
  
  // optional string PurRedemStatus = 7;
  if (has_purredemstatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->purredemstatus().data(), this->purredemstatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->purredemstatus(), target);
  }
  
  // optional string EstimDiffer = 8;
  if (has_estimdiffer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->estimdiffer().data(), this->estimdiffer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->estimdiffer(), target);
  }
  
  // optional string UnitNetValue = 9;
  if (has_unitnetvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->unitnetvalue().data(), this->unitnetvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->unitnetvalue(), target);
  }
  
  // optional string AllStocksNum = 10;
  if (has_allstocksnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->allstocksnum().data(), this->allstocksnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->allstocksnum(), target);
  }
  
  // optional string RespFlag = 11;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->respflag(), target);
  }
  
  // optional string IsSuccess = 12;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->issuccess().data(), this->issuccess().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->issuccess(), target);
  }
  
  // optional string RecordNum = 13;
  if (has_recordnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->recordnum().data(), this->recordnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->recordnum(), target);
  }
  
  // optional string subscriptCode = 14;
  if (has_subscriptcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->subscriptcode().data(), this->subscriptcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->subscriptcode(), target);
  }
  
  // optional string ETFNum = 15;
  if (has_etfnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etfnum().data(), this->etfnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->etfnum(), target);
  }
  
  // optional string CashBalances = 16;
  if (has_cashbalances()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cashbalances().data(), this->cashbalances().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->cashbalances(), target);
  }
  
  // optional string IsPurRedeem = 17;
  if (has_ispurredeem()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ispurredeem().data(), this->ispurredeem().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->ispurredeem(), target);
  }
  
  // optional string TrailerDate = 18;
  if (has_trailerdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->trailerdate().data(), this->trailerdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->trailerdate(), target);
  }
  
  // optional string PreCashDiffer = 19;
  if (has_precashdiffer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->precashdiffer().data(), this->precashdiffer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->precashdiffer(), target);
  }
  
  // optional string FundNet = 20;
  if (has_fundnet()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fundnet().data(), this->fundnet().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->fundnet(), target);
  }
  
  // optional string StockNum = 21;
  if (has_stocknum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stocknum().data(), this->stocknum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->stocknum(), target);
  }
  
  // optional string ETFAttr = 22;
  if (has_etfattr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etfattr().data(), this->etfattr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->etfattr(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_QueryETFbaseInfo_Ack::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string ETFName = 1;
    if (has_etfname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->etfname());
    }
    
    // optional string OneMarketCode = 2;
    if (has_onemarketcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->onemarketcode());
    }
    
    // optional string TwoMarketCode = 3;
    if (has_twomarketcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->twomarketcode());
    }
    
    // optional string ETFminPurRedemUnit = 4;
    if (has_etfminpurredemunit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->etfminpurredemunit());
    }
    
    // optional string CashDiffer = 5;
    if (has_cashdiffer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cashdiffer());
    }
    
    // optional string CastReplaceRatio = 6;
    if (has_castreplaceratio()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->castreplaceratio());
    }
    
    // optional string PurRedemStatus = 7;
    if (has_purredemstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->purredemstatus());
    }
    
    // optional string EstimDiffer = 8;
    if (has_estimdiffer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->estimdiffer());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string UnitNetValue = 9;
    if (has_unitnetvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->unitnetvalue());
    }
    
    // optional string AllStocksNum = 10;
    if (has_allstocksnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->allstocksnum());
    }
    
    // optional string RespFlag = 11;
    if (has_respflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->respflag());
    }
    
    // optional string IsSuccess = 12;
    if (has_issuccess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->issuccess());
    }
    
    // optional string RecordNum = 13;
    if (has_recordnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->recordnum());
    }
    
    // optional string subscriptCode = 14;
    if (has_subscriptcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->subscriptcode());
    }
    
    // optional string ETFNum = 15;
    if (has_etfnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->etfnum());
    }
    
    // optional string CashBalances = 16;
    if (has_cashbalances()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cashbalances());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string IsPurRedeem = 17;
    if (has_ispurredeem()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ispurredeem());
    }
    
    // optional string TrailerDate = 18;
    if (has_trailerdate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->trailerdate());
    }
    
    // optional string PreCashDiffer = 19;
    if (has_precashdiffer()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->precashdiffer());
    }
    
    // optional string FundNet = 20;
    if (has_fundnet()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fundnet());
    }
    
    // optional string StockNum = 21;
    if (has_stocknum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stocknum());
    }
    
    // optional string ETFAttr = 22;
    if (has_etfattr()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->etfattr());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_QueryETFbaseInfo_Ack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_QueryETFbaseInfo_Ack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_QueryETFbaseInfo_Ack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_QueryETFbaseInfo_Ack::MergeFrom(const INF_QueryETFbaseInfo_Ack& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_etfname()) {
      set_etfname(from.etfname());
    }
    if (from.has_onemarketcode()) {
      set_onemarketcode(from.onemarketcode());
    }
    if (from.has_twomarketcode()) {
      set_twomarketcode(from.twomarketcode());
    }
    if (from.has_etfminpurredemunit()) {
      set_etfminpurredemunit(from.etfminpurredemunit());
    }
    if (from.has_cashdiffer()) {
      set_cashdiffer(from.cashdiffer());
    }
    if (from.has_castreplaceratio()) {
      set_castreplaceratio(from.castreplaceratio());
    }
    if (from.has_purredemstatus()) {
      set_purredemstatus(from.purredemstatus());
    }
    if (from.has_estimdiffer()) {
      set_estimdiffer(from.estimdiffer());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_unitnetvalue()) {
      set_unitnetvalue(from.unitnetvalue());
    }
    if (from.has_allstocksnum()) {
      set_allstocksnum(from.allstocksnum());
    }
    if (from.has_respflag()) {
      set_respflag(from.respflag());
    }
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_recordnum()) {
      set_recordnum(from.recordnum());
    }
    if (from.has_subscriptcode()) {
      set_subscriptcode(from.subscriptcode());
    }
    if (from.has_etfnum()) {
      set_etfnum(from.etfnum());
    }
    if (from.has_cashbalances()) {
      set_cashbalances(from.cashbalances());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_ispurredeem()) {
      set_ispurredeem(from.ispurredeem());
    }
    if (from.has_trailerdate()) {
      set_trailerdate(from.trailerdate());
    }
    if (from.has_precashdiffer()) {
      set_precashdiffer(from.precashdiffer());
    }
    if (from.has_fundnet()) {
      set_fundnet(from.fundnet());
    }
    if (from.has_stocknum()) {
      set_stocknum(from.stocknum());
    }
    if (from.has_etfattr()) {
      set_etfattr(from.etfattr());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_QueryETFbaseInfo_Ack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_QueryETFbaseInfo_Ack::CopyFrom(const INF_QueryETFbaseInfo_Ack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_QueryETFbaseInfo_Ack::IsInitialized() const {
  
  return true;
}

void INF_QueryETFbaseInfo_Ack::Swap(INF_QueryETFbaseInfo_Ack* other) {
  if (other != this) {
    std::swap(etfname_, other->etfname_);
    std::swap(onemarketcode_, other->onemarketcode_);
    std::swap(twomarketcode_, other->twomarketcode_);
    std::swap(etfminpurredemunit_, other->etfminpurredemunit_);
    std::swap(cashdiffer_, other->cashdiffer_);
    std::swap(castreplaceratio_, other->castreplaceratio_);
    std::swap(purredemstatus_, other->purredemstatus_);
    std::swap(estimdiffer_, other->estimdiffer_);
    std::swap(unitnetvalue_, other->unitnetvalue_);
    std::swap(allstocksnum_, other->allstocksnum_);
    std::swap(respflag_, other->respflag_);
    std::swap(issuccess_, other->issuccess_);
    std::swap(recordnum_, other->recordnum_);
    std::swap(subscriptcode_, other->subscriptcode_);
    std::swap(etfnum_, other->etfnum_);
    std::swap(cashbalances_, other->cashbalances_);
    std::swap(ispurredeem_, other->ispurredeem_);
    std::swap(trailerdate_, other->trailerdate_);
    std::swap(precashdiffer_, other->precashdiffer_);
    std::swap(fundnet_, other->fundnet_);
    std::swap(stocknum_, other->stocknum_);
    std::swap(etfattr_, other->etfattr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_QueryETFbaseInfo_Ack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_QueryETFbaseInfo_Ack_descriptor_;
  metadata.reflection = INF_QueryETFbaseInfo_Ack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_QueryETFlistInfo_Ack::kMarketIDFieldNumber;
const int INF_QueryETFlistInfo_Ack::kSecurityCodeFieldNumber;
const int INF_QueryETFlistInfo_Ack::kSecurityNameFieldNumber;
const int INF_QueryETFlistInfo_Ack::kSecurityNumFieldNumber;
const int INF_QueryETFlistInfo_Ack::kCastReplaceFlagFieldNumber;
const int INF_QueryETFlistInfo_Ack::kCastReplaceRateFieldNumber;
const int INF_QueryETFlistInfo_Ack::kFundReplaceSumFieldNumber;
const int INF_QueryETFlistInfo_Ack::kRespFlagFieldNumber;
const int INF_QueryETFlistInfo_Ack::kDisplayNoFieldNumber;
const int INF_QueryETFlistInfo_Ack::kStockOfMarketFieldNumber;
#endif  // !_MSC_VER

INF_QueryETFlistInfo_Ack::INF_QueryETFlistInfo_Ack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_QueryETFlistInfo_Ack::InitAsDefaultInstance() {
}

INF_QueryETFlistInfo_Ack::INF_QueryETFlistInfo_Ack(const INF_QueryETFlistInfo_Ack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_QueryETFlistInfo_Ack::SharedCtor() {
  _cached_size_ = 0;
  marketid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  securitycode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  securityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  securitynum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  castreplaceflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  castreplacerate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  fundreplacesum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  respflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  displayno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stockofmarket_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_QueryETFlistInfo_Ack::~INF_QueryETFlistInfo_Ack() {
  SharedDtor();
}

void INF_QueryETFlistInfo_Ack::SharedDtor() {
  if (marketid_ != &::google::protobuf::internal::kEmptyString) {
    delete marketid_;
  }
  if (securitycode_ != &::google::protobuf::internal::kEmptyString) {
    delete securitycode_;
  }
  if (securityname_ != &::google::protobuf::internal::kEmptyString) {
    delete securityname_;
  }
  if (securitynum_ != &::google::protobuf::internal::kEmptyString) {
    delete securitynum_;
  }
  if (castreplaceflag_ != &::google::protobuf::internal::kEmptyString) {
    delete castreplaceflag_;
  }
  if (castreplacerate_ != &::google::protobuf::internal::kEmptyString) {
    delete castreplacerate_;
  }
  if (fundreplacesum_ != &::google::protobuf::internal::kEmptyString) {
    delete fundreplacesum_;
  }
  if (respflag_ != &::google::protobuf::internal::kEmptyString) {
    delete respflag_;
  }
  if (displayno_ != &::google::protobuf::internal::kEmptyString) {
    delete displayno_;
  }
  if (stockofmarket_ != &::google::protobuf::internal::kEmptyString) {
    delete stockofmarket_;
  }
  if (this != default_instance_) {
  }
}

void INF_QueryETFlistInfo_Ack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_QueryETFlistInfo_Ack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_QueryETFlistInfo_Ack_descriptor_;
}

const INF_QueryETFlistInfo_Ack& INF_QueryETFlistInfo_Ack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_QueryETFlistInfo_Ack* INF_QueryETFlistInfo_Ack::default_instance_ = NULL;

INF_QueryETFlistInfo_Ack* INF_QueryETFlistInfo_Ack::New() const {
  return new INF_QueryETFlistInfo_Ack;
}

void INF_QueryETFlistInfo_Ack::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_marketid()) {
      if (marketid_ != &::google::protobuf::internal::kEmptyString) {
        marketid_->clear();
      }
    }
    if (has_securitycode()) {
      if (securitycode_ != &::google::protobuf::internal::kEmptyString) {
        securitycode_->clear();
      }
    }
    if (has_securityname()) {
      if (securityname_ != &::google::protobuf::internal::kEmptyString) {
        securityname_->clear();
      }
    }
    if (has_securitynum()) {
      if (securitynum_ != &::google::protobuf::internal::kEmptyString) {
        securitynum_->clear();
      }
    }
    if (has_castreplaceflag()) {
      if (castreplaceflag_ != &::google::protobuf::internal::kEmptyString) {
        castreplaceflag_->clear();
      }
    }
    if (has_castreplacerate()) {
      if (castreplacerate_ != &::google::protobuf::internal::kEmptyString) {
        castreplacerate_->clear();
      }
    }
    if (has_fundreplacesum()) {
      if (fundreplacesum_ != &::google::protobuf::internal::kEmptyString) {
        fundreplacesum_->clear();
      }
    }
    if (has_respflag()) {
      if (respflag_ != &::google::protobuf::internal::kEmptyString) {
        respflag_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_displayno()) {
      if (displayno_ != &::google::protobuf::internal::kEmptyString) {
        displayno_->clear();
      }
    }
    if (has_stockofmarket()) {
      if (stockofmarket_ != &::google::protobuf::internal::kEmptyString) {
        stockofmarket_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_QueryETFlistInfo_Ack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string MarketID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_marketid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->marketid().data(), this->marketid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_SecurityCode;
        break;
      }
      
      // optional string SecurityCode = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SecurityCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_securitycode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->securitycode().data(), this->securitycode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_SecurityName;
        break;
      }
      
      // optional string SecurityName = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SecurityName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_securityname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->securityname().data(), this->securityname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_SecurityNum;
        break;
      }
      
      // optional string SecurityNum = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SecurityNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_securitynum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->securitynum().data(), this->securitynum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_CastReplaceFlag;
        break;
      }
      
      // optional string CastReplaceFlag = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CastReplaceFlag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_castreplaceflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->castreplaceflag().data(), this->castreplaceflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_CastReplaceRate;
        break;
      }
      
      // optional string CastReplaceRate = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CastReplaceRate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_castreplacerate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->castreplacerate().data(), this->castreplacerate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_FundReplaceSum;
        break;
      }
      
      // optional string FundReplaceSum = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_FundReplaceSum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fundreplacesum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->fundreplacesum().data(), this->fundreplacesum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_RespFlag;
        break;
      }
      
      // optional string RespFlag = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RespFlag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_respflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->respflag().data(), this->respflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_DisplayNo;
        break;
      }
      
      // optional string DisplayNo = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DisplayNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_displayno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->displayno().data(), this->displayno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_StockOfMarket;
        break;
      }
      
      // optional string StockOfMarket = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_StockOfMarket:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stockofmarket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stockofmarket().data(), this->stockofmarket().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_QueryETFlistInfo_Ack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string MarketID = 1;
  if (has_marketid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketid().data(), this->marketid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->marketid(), output);
  }
  
  // optional string SecurityCode = 2;
  if (has_securitycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitycode().data(), this->securitycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->securitycode(), output);
  }
  
  // optional string SecurityName = 3;
  if (has_securityname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securityname().data(), this->securityname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->securityname(), output);
  }
  
  // optional string SecurityNum = 4;
  if (has_securitynum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitynum().data(), this->securitynum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->securitynum(), output);
  }
  
  // optional string CastReplaceFlag = 5;
  if (has_castreplaceflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->castreplaceflag().data(), this->castreplaceflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->castreplaceflag(), output);
  }
  
  // optional string CastReplaceRate = 6;
  if (has_castreplacerate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->castreplacerate().data(), this->castreplacerate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->castreplacerate(), output);
  }
  
  // optional string FundReplaceSum = 7;
  if (has_fundreplacesum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fundreplacesum().data(), this->fundreplacesum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->fundreplacesum(), output);
  }
  
  // optional string RespFlag = 8;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->respflag(), output);
  }
  
  // optional string DisplayNo = 9;
  if (has_displayno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->displayno().data(), this->displayno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->displayno(), output);
  }
  
  // optional string StockOfMarket = 10;
  if (has_stockofmarket()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stockofmarket().data(), this->stockofmarket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->stockofmarket(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_QueryETFlistInfo_Ack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string MarketID = 1;
  if (has_marketid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketid().data(), this->marketid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->marketid(), target);
  }
  
  // optional string SecurityCode = 2;
  if (has_securitycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitycode().data(), this->securitycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->securitycode(), target);
  }
  
  // optional string SecurityName = 3;
  if (has_securityname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securityname().data(), this->securityname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->securityname(), target);
  }
  
  // optional string SecurityNum = 4;
  if (has_securitynum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitynum().data(), this->securitynum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->securitynum(), target);
  }
  
  // optional string CastReplaceFlag = 5;
  if (has_castreplaceflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->castreplaceflag().data(), this->castreplaceflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->castreplaceflag(), target);
  }
  
  // optional string CastReplaceRate = 6;
  if (has_castreplacerate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->castreplacerate().data(), this->castreplacerate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->castreplacerate(), target);
  }
  
  // optional string FundReplaceSum = 7;
  if (has_fundreplacesum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fundreplacesum().data(), this->fundreplacesum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->fundreplacesum(), target);
  }
  
  // optional string RespFlag = 8;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->respflag(), target);
  }
  
  // optional string DisplayNo = 9;
  if (has_displayno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->displayno().data(), this->displayno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->displayno(), target);
  }
  
  // optional string StockOfMarket = 10;
  if (has_stockofmarket()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stockofmarket().data(), this->stockofmarket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->stockofmarket(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_QueryETFlistInfo_Ack::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string MarketID = 1;
    if (has_marketid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->marketid());
    }
    
    // optional string SecurityCode = 2;
    if (has_securitycode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->securitycode());
    }
    
    // optional string SecurityName = 3;
    if (has_securityname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->securityname());
    }
    
    // optional string SecurityNum = 4;
    if (has_securitynum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->securitynum());
    }
    
    // optional string CastReplaceFlag = 5;
    if (has_castreplaceflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->castreplaceflag());
    }
    
    // optional string CastReplaceRate = 6;
    if (has_castreplacerate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->castreplacerate());
    }
    
    // optional string FundReplaceSum = 7;
    if (has_fundreplacesum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fundreplacesum());
    }
    
    // optional string RespFlag = 8;
    if (has_respflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->respflag());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string DisplayNo = 9;
    if (has_displayno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->displayno());
    }
    
    // optional string StockOfMarket = 10;
    if (has_stockofmarket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stockofmarket());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_QueryETFlistInfo_Ack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_QueryETFlistInfo_Ack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_QueryETFlistInfo_Ack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_QueryETFlistInfo_Ack::MergeFrom(const INF_QueryETFlistInfo_Ack& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_marketid()) {
      set_marketid(from.marketid());
    }
    if (from.has_securitycode()) {
      set_securitycode(from.securitycode());
    }
    if (from.has_securityname()) {
      set_securityname(from.securityname());
    }
    if (from.has_securitynum()) {
      set_securitynum(from.securitynum());
    }
    if (from.has_castreplaceflag()) {
      set_castreplaceflag(from.castreplaceflag());
    }
    if (from.has_castreplacerate()) {
      set_castreplacerate(from.castreplacerate());
    }
    if (from.has_fundreplacesum()) {
      set_fundreplacesum(from.fundreplacesum());
    }
    if (from.has_respflag()) {
      set_respflag(from.respflag());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_displayno()) {
      set_displayno(from.displayno());
    }
    if (from.has_stockofmarket()) {
      set_stockofmarket(from.stockofmarket());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_QueryETFlistInfo_Ack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_QueryETFlistInfo_Ack::CopyFrom(const INF_QueryETFlistInfo_Ack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_QueryETFlistInfo_Ack::IsInitialized() const {
  
  return true;
}

void INF_QueryETFlistInfo_Ack::Swap(INF_QueryETFlistInfo_Ack* other) {
  if (other != this) {
    std::swap(marketid_, other->marketid_);
    std::swap(securitycode_, other->securitycode_);
    std::swap(securityname_, other->securityname_);
    std::swap(securitynum_, other->securitynum_);
    std::swap(castreplaceflag_, other->castreplaceflag_);
    std::swap(castreplacerate_, other->castreplacerate_);
    std::swap(fundreplacesum_, other->fundreplacesum_);
    std::swap(respflag_, other->respflag_);
    std::swap(displayno_, other->displayno_);
    std::swap(stockofmarket_, other->stockofmarket_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_QueryETFlistInfo_Ack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_QueryETFlistInfo_Ack_descriptor_;
  metadata.reflection = INF_QueryETFlistInfo_Ack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_QueryETFdynamicInfo_Ack::kMarketIDFieldNumber;
const int INF_QueryETFdynamicInfo_Ack::kETFCodeFieldNumber;
const int INF_QueryETFdynamicInfo_Ack::kValidPurRedemNumFieldNumber;
const int INF_QueryETFdynamicInfo_Ack::kRespFlagFieldNumber;
const int INF_QueryETFdynamicInfo_Ack::kETFNameFieldNumber;
const int INF_QueryETFdynamicInfo_Ack::kBaskeAskNumFieldNumber;
const int INF_QueryETFdynamicInfo_Ack::kNeedBuyNumFieldNumber;
const int INF_QueryETFdynamicInfo_Ack::kCanReplaceFundFieldNumber;
const int INF_QueryETFdynamicInfo_Ack::kMustReplaceFundFieldNumber;
const int INF_QueryETFdynamicInfo_Ack::kPositionOfUndealFieldNumber;
const int INF_QueryETFdynamicInfo_Ack::kMaxPurRedemNumFieldNumber;
#endif  // !_MSC_VER

INF_QueryETFdynamicInfo_Ack::INF_QueryETFdynamicInfo_Ack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_QueryETFdynamicInfo_Ack::InitAsDefaultInstance() {
}

INF_QueryETFdynamicInfo_Ack::INF_QueryETFdynamicInfo_Ack(const INF_QueryETFdynamicInfo_Ack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_QueryETFdynamicInfo_Ack::SharedCtor() {
  _cached_size_ = 0;
  marketid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  etfcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  validpurredemnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  respflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  etfname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  baskeasknum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  needbuynum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  canreplacefund_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  mustreplacefund_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  positionofundeal_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  maxpurredemnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_QueryETFdynamicInfo_Ack::~INF_QueryETFdynamicInfo_Ack() {
  SharedDtor();
}

void INF_QueryETFdynamicInfo_Ack::SharedDtor() {
  if (marketid_ != &::google::protobuf::internal::kEmptyString) {
    delete marketid_;
  }
  if (etfcode_ != &::google::protobuf::internal::kEmptyString) {
    delete etfcode_;
  }
  if (validpurredemnum_ != &::google::protobuf::internal::kEmptyString) {
    delete validpurredemnum_;
  }
  if (respflag_ != &::google::protobuf::internal::kEmptyString) {
    delete respflag_;
  }
  if (etfname_ != &::google::protobuf::internal::kEmptyString) {
    delete etfname_;
  }
  if (baskeasknum_ != &::google::protobuf::internal::kEmptyString) {
    delete baskeasknum_;
  }
  if (needbuynum_ != &::google::protobuf::internal::kEmptyString) {
    delete needbuynum_;
  }
  if (canreplacefund_ != &::google::protobuf::internal::kEmptyString) {
    delete canreplacefund_;
  }
  if (mustreplacefund_ != &::google::protobuf::internal::kEmptyString) {
    delete mustreplacefund_;
  }
  if (positionofundeal_ != &::google::protobuf::internal::kEmptyString) {
    delete positionofundeal_;
  }
  if (maxpurredemnum_ != &::google::protobuf::internal::kEmptyString) {
    delete maxpurredemnum_;
  }
  if (this != default_instance_) {
  }
}

void INF_QueryETFdynamicInfo_Ack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_QueryETFdynamicInfo_Ack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_QueryETFdynamicInfo_Ack_descriptor_;
}

const INF_QueryETFdynamicInfo_Ack& INF_QueryETFdynamicInfo_Ack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_QueryETFdynamicInfo_Ack* INF_QueryETFdynamicInfo_Ack::default_instance_ = NULL;

INF_QueryETFdynamicInfo_Ack* INF_QueryETFdynamicInfo_Ack::New() const {
  return new INF_QueryETFdynamicInfo_Ack;
}

void INF_QueryETFdynamicInfo_Ack::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_marketid()) {
      if (marketid_ != &::google::protobuf::internal::kEmptyString) {
        marketid_->clear();
      }
    }
    if (has_etfcode()) {
      if (etfcode_ != &::google::protobuf::internal::kEmptyString) {
        etfcode_->clear();
      }
    }
    if (has_validpurredemnum()) {
      if (validpurredemnum_ != &::google::protobuf::internal::kEmptyString) {
        validpurredemnum_->clear();
      }
    }
    if (has_respflag()) {
      if (respflag_ != &::google::protobuf::internal::kEmptyString) {
        respflag_->clear();
      }
    }
    if (has_etfname()) {
      if (etfname_ != &::google::protobuf::internal::kEmptyString) {
        etfname_->clear();
      }
    }
    if (has_baskeasknum()) {
      if (baskeasknum_ != &::google::protobuf::internal::kEmptyString) {
        baskeasknum_->clear();
      }
    }
    if (has_needbuynum()) {
      if (needbuynum_ != &::google::protobuf::internal::kEmptyString) {
        needbuynum_->clear();
      }
    }
    if (has_canreplacefund()) {
      if (canreplacefund_ != &::google::protobuf::internal::kEmptyString) {
        canreplacefund_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_mustreplacefund()) {
      if (mustreplacefund_ != &::google::protobuf::internal::kEmptyString) {
        mustreplacefund_->clear();
      }
    }
    if (has_positionofundeal()) {
      if (positionofundeal_ != &::google::protobuf::internal::kEmptyString) {
        positionofundeal_->clear();
      }
    }
    if (has_maxpurredemnum()) {
      if (maxpurredemnum_ != &::google::protobuf::internal::kEmptyString) {
        maxpurredemnum_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_QueryETFdynamicInfo_Ack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string MarketID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_marketid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->marketid().data(), this->marketid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_ETFCode;
        break;
      }
      
      // optional string ETFCode = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ETFCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etfcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->etfcode().data(), this->etfcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_ValidPurRedemNum;
        break;
      }
      
      // optional string ValidPurRedemNum = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ValidPurRedemNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_validpurredemnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->validpurredemnum().data(), this->validpurredemnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_RespFlag;
        break;
      }
      
      // optional string RespFlag = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RespFlag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_respflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->respflag().data(), this->respflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_ETFName;
        break;
      }
      
      // optional string ETFName = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ETFName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etfname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->etfname().data(), this->etfname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_BaskeAskNum;
        break;
      }
      
      // optional string BaskeAskNum = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_BaskeAskNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_baskeasknum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->baskeasknum().data(), this->baskeasknum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_NeedBuyNum;
        break;
      }
      
      // optional string NeedBuyNum = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_NeedBuyNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_needbuynum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->needbuynum().data(), this->needbuynum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_CanReplaceFund;
        break;
      }
      
      // optional string CanReplaceFund = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CanReplaceFund:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_canreplacefund()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->canreplacefund().data(), this->canreplacefund().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_MustReplaceFund;
        break;
      }
      
      // optional string MustReplaceFund = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_MustReplaceFund:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mustreplacefund()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mustreplacefund().data(), this->mustreplacefund().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_PositionOfUndeal;
        break;
      }
      
      // optional string PositionOfUndeal = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_PositionOfUndeal:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_positionofundeal()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->positionofundeal().data(), this->positionofundeal().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_MaxPurRedemNum;
        break;
      }
      
      // optional string MaxPurRedemNum = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_MaxPurRedemNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_maxpurredemnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->maxpurredemnum().data(), this->maxpurredemnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_QueryETFdynamicInfo_Ack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string MarketID = 1;
  if (has_marketid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketid().data(), this->marketid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->marketid(), output);
  }
  
  // optional string ETFCode = 2;
  if (has_etfcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etfcode().data(), this->etfcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->etfcode(), output);
  }
  
  // optional string ValidPurRedemNum = 3;
  if (has_validpurredemnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->validpurredemnum().data(), this->validpurredemnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->validpurredemnum(), output);
  }
  
  // optional string RespFlag = 4;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->respflag(), output);
  }
  
  // optional string ETFName = 5;
  if (has_etfname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etfname().data(), this->etfname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->etfname(), output);
  }
  
  // optional string BaskeAskNum = 6;
  if (has_baskeasknum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->baskeasknum().data(), this->baskeasknum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->baskeasknum(), output);
  }
  
  // optional string NeedBuyNum = 7;
  if (has_needbuynum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->needbuynum().data(), this->needbuynum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->needbuynum(), output);
  }
  
  // optional string CanReplaceFund = 8;
  if (has_canreplacefund()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->canreplacefund().data(), this->canreplacefund().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->canreplacefund(), output);
  }
  
  // optional string MustReplaceFund = 9;
  if (has_mustreplacefund()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mustreplacefund().data(), this->mustreplacefund().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->mustreplacefund(), output);
  }
  
  // optional string PositionOfUndeal = 10;
  if (has_positionofundeal()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->positionofundeal().data(), this->positionofundeal().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->positionofundeal(), output);
  }
  
  // optional string MaxPurRedemNum = 11;
  if (has_maxpurredemnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->maxpurredemnum().data(), this->maxpurredemnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->maxpurredemnum(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_QueryETFdynamicInfo_Ack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string MarketID = 1;
  if (has_marketid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketid().data(), this->marketid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->marketid(), target);
  }
  
  // optional string ETFCode = 2;
  if (has_etfcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etfcode().data(), this->etfcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->etfcode(), target);
  }
  
  // optional string ValidPurRedemNum = 3;
  if (has_validpurredemnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->validpurredemnum().data(), this->validpurredemnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->validpurredemnum(), target);
  }
  
  // optional string RespFlag = 4;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->respflag(), target);
  }
  
  // optional string ETFName = 5;
  if (has_etfname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etfname().data(), this->etfname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->etfname(), target);
  }
  
  // optional string BaskeAskNum = 6;
  if (has_baskeasknum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->baskeasknum().data(), this->baskeasknum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->baskeasknum(), target);
  }
  
  // optional string NeedBuyNum = 7;
  if (has_needbuynum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->needbuynum().data(), this->needbuynum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->needbuynum(), target);
  }
  
  // optional string CanReplaceFund = 8;
  if (has_canreplacefund()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->canreplacefund().data(), this->canreplacefund().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->canreplacefund(), target);
  }
  
  // optional string MustReplaceFund = 9;
  if (has_mustreplacefund()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mustreplacefund().data(), this->mustreplacefund().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->mustreplacefund(), target);
  }
  
  // optional string PositionOfUndeal = 10;
  if (has_positionofundeal()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->positionofundeal().data(), this->positionofundeal().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->positionofundeal(), target);
  }
  
  // optional string MaxPurRedemNum = 11;
  if (has_maxpurredemnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->maxpurredemnum().data(), this->maxpurredemnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->maxpurredemnum(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_QueryETFdynamicInfo_Ack::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string MarketID = 1;
    if (has_marketid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->marketid());
    }
    
    // optional string ETFCode = 2;
    if (has_etfcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->etfcode());
    }
    
    // optional string ValidPurRedemNum = 3;
    if (has_validpurredemnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->validpurredemnum());
    }
    
    // optional string RespFlag = 4;
    if (has_respflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->respflag());
    }
    
    // optional string ETFName = 5;
    if (has_etfname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->etfname());
    }
    
    // optional string BaskeAskNum = 6;
    if (has_baskeasknum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->baskeasknum());
    }
    
    // optional string NeedBuyNum = 7;
    if (has_needbuynum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->needbuynum());
    }
    
    // optional string CanReplaceFund = 8;
    if (has_canreplacefund()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->canreplacefund());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string MustReplaceFund = 9;
    if (has_mustreplacefund()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mustreplacefund());
    }
    
    // optional string PositionOfUndeal = 10;
    if (has_positionofundeal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->positionofundeal());
    }
    
    // optional string MaxPurRedemNum = 11;
    if (has_maxpurredemnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->maxpurredemnum());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_QueryETFdynamicInfo_Ack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_QueryETFdynamicInfo_Ack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_QueryETFdynamicInfo_Ack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_QueryETFdynamicInfo_Ack::MergeFrom(const INF_QueryETFdynamicInfo_Ack& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_marketid()) {
      set_marketid(from.marketid());
    }
    if (from.has_etfcode()) {
      set_etfcode(from.etfcode());
    }
    if (from.has_validpurredemnum()) {
      set_validpurredemnum(from.validpurredemnum());
    }
    if (from.has_respflag()) {
      set_respflag(from.respflag());
    }
    if (from.has_etfname()) {
      set_etfname(from.etfname());
    }
    if (from.has_baskeasknum()) {
      set_baskeasknum(from.baskeasknum());
    }
    if (from.has_needbuynum()) {
      set_needbuynum(from.needbuynum());
    }
    if (from.has_canreplacefund()) {
      set_canreplacefund(from.canreplacefund());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_mustreplacefund()) {
      set_mustreplacefund(from.mustreplacefund());
    }
    if (from.has_positionofundeal()) {
      set_positionofundeal(from.positionofundeal());
    }
    if (from.has_maxpurredemnum()) {
      set_maxpurredemnum(from.maxpurredemnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_QueryETFdynamicInfo_Ack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_QueryETFdynamicInfo_Ack::CopyFrom(const INF_QueryETFdynamicInfo_Ack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_QueryETFdynamicInfo_Ack::IsInitialized() const {
  
  return true;
}

void INF_QueryETFdynamicInfo_Ack::Swap(INF_QueryETFdynamicInfo_Ack* other) {
  if (other != this) {
    std::swap(marketid_, other->marketid_);
    std::swap(etfcode_, other->etfcode_);
    std::swap(validpurredemnum_, other->validpurredemnum_);
    std::swap(respflag_, other->respflag_);
    std::swap(etfname_, other->etfname_);
    std::swap(baskeasknum_, other->baskeasknum_);
    std::swap(needbuynum_, other->needbuynum_);
    std::swap(canreplacefund_, other->canreplacefund_);
    std::swap(mustreplacefund_, other->mustreplacefund_);
    std::swap(positionofundeal_, other->positionofundeal_);
    std::swap(maxpurredemnum_, other->maxpurredemnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_QueryETFdynamicInfo_Ack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_QueryETFdynamicInfo_Ack_descriptor_;
  metadata.reflection = INF_QueryETFdynamicInfo_Ack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_QueryFundCondition_Ack::kValidFieldNumber;
const int INF_QueryFundCondition_Ack::kFundRemainFieldNumber;
const int INF_QueryFundCondition_Ack::kValidfundFieldNumber;
const int INF_QueryFundCondition_Ack::kMarketValueFieldNumber;
const int INF_QueryFundCondition_Ack::kRespFlagFieldNumber;
const int INF_QueryFundCondition_Ack::kIsSuccessFieldNumber;
const int INF_QueryFundCondition_Ack::kFundSumFieldNumber;
const int INF_QueryFundCondition_Ack::kTodayBuyCjFieldNumber;
const int INF_QueryFundCondition_Ack::kTodaySellCjFieldNumber;
const int INF_QueryFundCondition_Ack::kSumFloatProfitLossFieldNumber;
const int INF_QueryFundCondition_Ack::kFundOfTodayBuyUndealFieldNumber;
const int INF_QueryFundCondition_Ack::kFundOfBuyUnsettledFieldNumber;
const int INF_QueryFundCondition_Ack::kFundOfSellUnsettledFieldNumber;
const int INF_QueryFundCondition_Ack::kMoneyNameFieldNumber;
const int INF_QueryFundCondition_Ack::kFundOfExceptLockFieldNumber;
const int INF_QueryFundCondition_Ack::kMoneyIDFieldNumber;
const int INF_QueryFundCondition_Ack::kPositionRateFieldNumber;
const int INF_QueryFundCondition_Ack::kNetAssetsFieldNumber;
#endif  // !_MSC_VER

INF_QueryFundCondition_Ack::INF_QueryFundCondition_Ack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_QueryFundCondition_Ack::InitAsDefaultInstance() {
}

INF_QueryFundCondition_Ack::INF_QueryFundCondition_Ack(const INF_QueryFundCondition_Ack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_QueryFundCondition_Ack::SharedCtor() {
  _cached_size_ = 0;
  valid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  fundremain_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  validfund_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  marketvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  respflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  issuccess_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  fundsum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  todaybuycj_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  todaysellcj_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sumfloatprofitloss_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  fundoftodaybuyundeal_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  fundofbuyunsettled_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  fundofsellunsettled_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  moneyname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  fundofexceptlock_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  moneyid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  positionrate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  netassets_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_QueryFundCondition_Ack::~INF_QueryFundCondition_Ack() {
  SharedDtor();
}

void INF_QueryFundCondition_Ack::SharedDtor() {
  if (valid_ != &::google::protobuf::internal::kEmptyString) {
    delete valid_;
  }
  if (fundremain_ != &::google::protobuf::internal::kEmptyString) {
    delete fundremain_;
  }
  if (validfund_ != &::google::protobuf::internal::kEmptyString) {
    delete validfund_;
  }
  if (marketvalue_ != &::google::protobuf::internal::kEmptyString) {
    delete marketvalue_;
  }
  if (respflag_ != &::google::protobuf::internal::kEmptyString) {
    delete respflag_;
  }
  if (issuccess_ != &::google::protobuf::internal::kEmptyString) {
    delete issuccess_;
  }
  if (fundsum_ != &::google::protobuf::internal::kEmptyString) {
    delete fundsum_;
  }
  if (todaybuycj_ != &::google::protobuf::internal::kEmptyString) {
    delete todaybuycj_;
  }
  if (todaysellcj_ != &::google::protobuf::internal::kEmptyString) {
    delete todaysellcj_;
  }
  if (sumfloatprofitloss_ != &::google::protobuf::internal::kEmptyString) {
    delete sumfloatprofitloss_;
  }
  if (fundoftodaybuyundeal_ != &::google::protobuf::internal::kEmptyString) {
    delete fundoftodaybuyundeal_;
  }
  if (fundofbuyunsettled_ != &::google::protobuf::internal::kEmptyString) {
    delete fundofbuyunsettled_;
  }
  if (fundofsellunsettled_ != &::google::protobuf::internal::kEmptyString) {
    delete fundofsellunsettled_;
  }
  if (moneyname_ != &::google::protobuf::internal::kEmptyString) {
    delete moneyname_;
  }
  if (fundofexceptlock_ != &::google::protobuf::internal::kEmptyString) {
    delete fundofexceptlock_;
  }
  if (moneyid_ != &::google::protobuf::internal::kEmptyString) {
    delete moneyid_;
  }
  if (positionrate_ != &::google::protobuf::internal::kEmptyString) {
    delete positionrate_;
  }
  if (netassets_ != &::google::protobuf::internal::kEmptyString) {
    delete netassets_;
  }
  if (this != default_instance_) {
  }
}

void INF_QueryFundCondition_Ack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_QueryFundCondition_Ack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_QueryFundCondition_Ack_descriptor_;
}

const INF_QueryFundCondition_Ack& INF_QueryFundCondition_Ack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_QueryFundCondition_Ack* INF_QueryFundCondition_Ack::default_instance_ = NULL;

INF_QueryFundCondition_Ack* INF_QueryFundCondition_Ack::New() const {
  return new INF_QueryFundCondition_Ack;
}

void INF_QueryFundCondition_Ack::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_valid()) {
      if (valid_ != &::google::protobuf::internal::kEmptyString) {
        valid_->clear();
      }
    }
    if (has_fundremain()) {
      if (fundremain_ != &::google::protobuf::internal::kEmptyString) {
        fundremain_->clear();
      }
    }
    if (has_validfund()) {
      if (validfund_ != &::google::protobuf::internal::kEmptyString) {
        validfund_->clear();
      }
    }
    if (has_marketvalue()) {
      if (marketvalue_ != &::google::protobuf::internal::kEmptyString) {
        marketvalue_->clear();
      }
    }
    if (has_respflag()) {
      if (respflag_ != &::google::protobuf::internal::kEmptyString) {
        respflag_->clear();
      }
    }
    if (has_issuccess()) {
      if (issuccess_ != &::google::protobuf::internal::kEmptyString) {
        issuccess_->clear();
      }
    }
    if (has_fundsum()) {
      if (fundsum_ != &::google::protobuf::internal::kEmptyString) {
        fundsum_->clear();
      }
    }
    if (has_todaybuycj()) {
      if (todaybuycj_ != &::google::protobuf::internal::kEmptyString) {
        todaybuycj_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_todaysellcj()) {
      if (todaysellcj_ != &::google::protobuf::internal::kEmptyString) {
        todaysellcj_->clear();
      }
    }
    if (has_sumfloatprofitloss()) {
      if (sumfloatprofitloss_ != &::google::protobuf::internal::kEmptyString) {
        sumfloatprofitloss_->clear();
      }
    }
    if (has_fundoftodaybuyundeal()) {
      if (fundoftodaybuyundeal_ != &::google::protobuf::internal::kEmptyString) {
        fundoftodaybuyundeal_->clear();
      }
    }
    if (has_fundofbuyunsettled()) {
      if (fundofbuyunsettled_ != &::google::protobuf::internal::kEmptyString) {
        fundofbuyunsettled_->clear();
      }
    }
    if (has_fundofsellunsettled()) {
      if (fundofsellunsettled_ != &::google::protobuf::internal::kEmptyString) {
        fundofsellunsettled_->clear();
      }
    }
    if (has_moneyname()) {
      if (moneyname_ != &::google::protobuf::internal::kEmptyString) {
        moneyname_->clear();
      }
    }
    if (has_fundofexceptlock()) {
      if (fundofexceptlock_ != &::google::protobuf::internal::kEmptyString) {
        fundofexceptlock_->clear();
      }
    }
    if (has_moneyid()) {
      if (moneyid_ != &::google::protobuf::internal::kEmptyString) {
        moneyid_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_positionrate()) {
      if (positionrate_ != &::google::protobuf::internal::kEmptyString) {
        positionrate_->clear();
      }
    }
    if (has_netassets()) {
      if (netassets_ != &::google::protobuf::internal::kEmptyString) {
        netassets_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_QueryFundCondition_Ack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Valid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_valid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->valid().data(), this->valid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_FundRemain;
        break;
      }
      
      // optional string FundRemain = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_FundRemain:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fundremain()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->fundremain().data(), this->fundremain().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_Validfund;
        break;
      }
      
      // optional string Validfund = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Validfund:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_validfund()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->validfund().data(), this->validfund().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_MarketValue;
        break;
      }
      
      // optional string MarketValue = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_MarketValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_marketvalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->marketvalue().data(), this->marketvalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_RespFlag;
        break;
      }
      
      // optional string RespFlag = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RespFlag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_respflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->respflag().data(), this->respflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_IsSuccess;
        break;
      }
      
      // optional string IsSuccess = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_IsSuccess:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_issuccess()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->issuccess().data(), this->issuccess().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_FundSum;
        break;
      }
      
      // optional string FundSum = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_FundSum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fundsum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->fundsum().data(), this->fundsum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_TodayBuyCj;
        break;
      }
      
      // optional string TodayBuyCj = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_TodayBuyCj:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_todaybuycj()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->todaybuycj().data(), this->todaybuycj().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_TodaySellCj;
        break;
      }
      
      // optional string TodaySellCj = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_TodaySellCj:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_todaysellcj()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->todaysellcj().data(), this->todaysellcj().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_SumFloatProfitLoss;
        break;
      }
      
      // optional string SumFloatProfitLoss = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SumFloatProfitLoss:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sumfloatprofitloss()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sumfloatprofitloss().data(), this->sumfloatprofitloss().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_FundOfTodayBuyUndeal;
        break;
      }
      
      // optional string FundOfTodayBuyUndeal = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_FundOfTodayBuyUndeal:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fundoftodaybuyundeal()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->fundoftodaybuyundeal().data(), this->fundoftodaybuyundeal().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_FundOfBuyUnsettled;
        break;
      }
      
      // optional string FundOfBuyUnsettled = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_FundOfBuyUnsettled:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fundofbuyunsettled()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->fundofbuyunsettled().data(), this->fundofbuyunsettled().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_FundOfSellUnsettled;
        break;
      }
      
      // optional string FundOfSellUnsettled = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_FundOfSellUnsettled:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fundofsellunsettled()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->fundofsellunsettled().data(), this->fundofsellunsettled().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_MoneyName;
        break;
      }
      
      // optional string MoneyName = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_MoneyName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_moneyname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->moneyname().data(), this->moneyname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_FundOfExceptLock;
        break;
      }
      
      // optional string FundOfExceptLock = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_FundOfExceptLock:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fundofexceptlock()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->fundofexceptlock().data(), this->fundofexceptlock().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_MoneyID;
        break;
      }
      
      // optional string MoneyID = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_MoneyID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_moneyid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->moneyid().data(), this->moneyid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_PositionRate;
        break;
      }
      
      // optional string PositionRate = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_PositionRate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_positionrate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->positionrate().data(), this->positionrate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_NetAssets;
        break;
      }
      
      // optional string NetAssets = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_NetAssets:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_netassets()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->netassets().data(), this->netassets().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_QueryFundCondition_Ack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string Valid = 1;
  if (has_valid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valid().data(), this->valid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->valid(), output);
  }
  
  // optional string FundRemain = 2;
  if (has_fundremain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fundremain().data(), this->fundremain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->fundremain(), output);
  }
  
  // optional string Validfund = 3;
  if (has_validfund()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->validfund().data(), this->validfund().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->validfund(), output);
  }
  
  // optional string MarketValue = 4;
  if (has_marketvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketvalue().data(), this->marketvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->marketvalue(), output);
  }
  
  // optional string RespFlag = 5;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->respflag(), output);
  }
  
  // optional string IsSuccess = 6;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->issuccess().data(), this->issuccess().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->issuccess(), output);
  }
  
  // optional string FundSum = 7;
  if (has_fundsum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fundsum().data(), this->fundsum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->fundsum(), output);
  }
  
  // optional string TodayBuyCj = 8;
  if (has_todaybuycj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->todaybuycj().data(), this->todaybuycj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->todaybuycj(), output);
  }
  
  // optional string TodaySellCj = 9;
  if (has_todaysellcj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->todaysellcj().data(), this->todaysellcj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->todaysellcj(), output);
  }
  
  // optional string SumFloatProfitLoss = 10;
  if (has_sumfloatprofitloss()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sumfloatprofitloss().data(), this->sumfloatprofitloss().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->sumfloatprofitloss(), output);
  }
  
  // optional string FundOfTodayBuyUndeal = 11;
  if (has_fundoftodaybuyundeal()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fundoftodaybuyundeal().data(), this->fundoftodaybuyundeal().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->fundoftodaybuyundeal(), output);
  }
  
  // optional string FundOfBuyUnsettled = 12;
  if (has_fundofbuyunsettled()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fundofbuyunsettled().data(), this->fundofbuyunsettled().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->fundofbuyunsettled(), output);
  }
  
  // optional string FundOfSellUnsettled = 13;
  if (has_fundofsellunsettled()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fundofsellunsettled().data(), this->fundofsellunsettled().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->fundofsellunsettled(), output);
  }
  
  // optional string MoneyName = 14;
  if (has_moneyname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->moneyname().data(), this->moneyname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->moneyname(), output);
  }
  
  // optional string FundOfExceptLock = 15;
  if (has_fundofexceptlock()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fundofexceptlock().data(), this->fundofexceptlock().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->fundofexceptlock(), output);
  }
  
  // optional string MoneyID = 16;
  if (has_moneyid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->moneyid().data(), this->moneyid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->moneyid(), output);
  }
  
  // optional string PositionRate = 17;
  if (has_positionrate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->positionrate().data(), this->positionrate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->positionrate(), output);
  }
  
  // optional string NetAssets = 18;
  if (has_netassets()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->netassets().data(), this->netassets().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->netassets(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_QueryFundCondition_Ack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string Valid = 1;
  if (has_valid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valid().data(), this->valid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->valid(), target);
  }
  
  // optional string FundRemain = 2;
  if (has_fundremain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fundremain().data(), this->fundremain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->fundremain(), target);
  }
  
  // optional string Validfund = 3;
  if (has_validfund()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->validfund().data(), this->validfund().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->validfund(), target);
  }
  
  // optional string MarketValue = 4;
  if (has_marketvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketvalue().data(), this->marketvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->marketvalue(), target);
  }
  
  // optional string RespFlag = 5;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->respflag(), target);
  }
  
  // optional string IsSuccess = 6;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->issuccess().data(), this->issuccess().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->issuccess(), target);
  }
  
  // optional string FundSum = 7;
  if (has_fundsum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fundsum().data(), this->fundsum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->fundsum(), target);
  }
  
  // optional string TodayBuyCj = 8;
  if (has_todaybuycj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->todaybuycj().data(), this->todaybuycj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->todaybuycj(), target);
  }
  
  // optional string TodaySellCj = 9;
  if (has_todaysellcj()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->todaysellcj().data(), this->todaysellcj().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->todaysellcj(), target);
  }
  
  // optional string SumFloatProfitLoss = 10;
  if (has_sumfloatprofitloss()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sumfloatprofitloss().data(), this->sumfloatprofitloss().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->sumfloatprofitloss(), target);
  }
  
  // optional string FundOfTodayBuyUndeal = 11;
  if (has_fundoftodaybuyundeal()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fundoftodaybuyundeal().data(), this->fundoftodaybuyundeal().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->fundoftodaybuyundeal(), target);
  }
  
  // optional string FundOfBuyUnsettled = 12;
  if (has_fundofbuyunsettled()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fundofbuyunsettled().data(), this->fundofbuyunsettled().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->fundofbuyunsettled(), target);
  }
  
  // optional string FundOfSellUnsettled = 13;
  if (has_fundofsellunsettled()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fundofsellunsettled().data(), this->fundofsellunsettled().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->fundofsellunsettled(), target);
  }
  
  // optional string MoneyName = 14;
  if (has_moneyname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->moneyname().data(), this->moneyname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->moneyname(), target);
  }
  
  // optional string FundOfExceptLock = 15;
  if (has_fundofexceptlock()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fundofexceptlock().data(), this->fundofexceptlock().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->fundofexceptlock(), target);
  }
  
  // optional string MoneyID = 16;
  if (has_moneyid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->moneyid().data(), this->moneyid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->moneyid(), target);
  }
  
  // optional string PositionRate = 17;
  if (has_positionrate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->positionrate().data(), this->positionrate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->positionrate(), target);
  }
  
  // optional string NetAssets = 18;
  if (has_netassets()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->netassets().data(), this->netassets().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->netassets(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_QueryFundCondition_Ack::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string Valid = 1;
    if (has_valid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->valid());
    }
    
    // optional string FundRemain = 2;
    if (has_fundremain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fundremain());
    }
    
    // optional string Validfund = 3;
    if (has_validfund()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->validfund());
    }
    
    // optional string MarketValue = 4;
    if (has_marketvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->marketvalue());
    }
    
    // optional string RespFlag = 5;
    if (has_respflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->respflag());
    }
    
    // optional string IsSuccess = 6;
    if (has_issuccess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->issuccess());
    }
    
    // optional string FundSum = 7;
    if (has_fundsum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fundsum());
    }
    
    // optional string TodayBuyCj = 8;
    if (has_todaybuycj()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->todaybuycj());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string TodaySellCj = 9;
    if (has_todaysellcj()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->todaysellcj());
    }
    
    // optional string SumFloatProfitLoss = 10;
    if (has_sumfloatprofitloss()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sumfloatprofitloss());
    }
    
    // optional string FundOfTodayBuyUndeal = 11;
    if (has_fundoftodaybuyundeal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fundoftodaybuyundeal());
    }
    
    // optional string FundOfBuyUnsettled = 12;
    if (has_fundofbuyunsettled()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fundofbuyunsettled());
    }
    
    // optional string FundOfSellUnsettled = 13;
    if (has_fundofsellunsettled()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fundofsellunsettled());
    }
    
    // optional string MoneyName = 14;
    if (has_moneyname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->moneyname());
    }
    
    // optional string FundOfExceptLock = 15;
    if (has_fundofexceptlock()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fundofexceptlock());
    }
    
    // optional string MoneyID = 16;
    if (has_moneyid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->moneyid());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string PositionRate = 17;
    if (has_positionrate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->positionrate());
    }
    
    // optional string NetAssets = 18;
    if (has_netassets()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->netassets());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_QueryFundCondition_Ack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_QueryFundCondition_Ack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_QueryFundCondition_Ack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_QueryFundCondition_Ack::MergeFrom(const INF_QueryFundCondition_Ack& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_valid()) {
      set_valid(from.valid());
    }
    if (from.has_fundremain()) {
      set_fundremain(from.fundremain());
    }
    if (from.has_validfund()) {
      set_validfund(from.validfund());
    }
    if (from.has_marketvalue()) {
      set_marketvalue(from.marketvalue());
    }
    if (from.has_respflag()) {
      set_respflag(from.respflag());
    }
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_fundsum()) {
      set_fundsum(from.fundsum());
    }
    if (from.has_todaybuycj()) {
      set_todaybuycj(from.todaybuycj());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_todaysellcj()) {
      set_todaysellcj(from.todaysellcj());
    }
    if (from.has_sumfloatprofitloss()) {
      set_sumfloatprofitloss(from.sumfloatprofitloss());
    }
    if (from.has_fundoftodaybuyundeal()) {
      set_fundoftodaybuyundeal(from.fundoftodaybuyundeal());
    }
    if (from.has_fundofbuyunsettled()) {
      set_fundofbuyunsettled(from.fundofbuyunsettled());
    }
    if (from.has_fundofsellunsettled()) {
      set_fundofsellunsettled(from.fundofsellunsettled());
    }
    if (from.has_moneyname()) {
      set_moneyname(from.moneyname());
    }
    if (from.has_fundofexceptlock()) {
      set_fundofexceptlock(from.fundofexceptlock());
    }
    if (from.has_moneyid()) {
      set_moneyid(from.moneyid());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_positionrate()) {
      set_positionrate(from.positionrate());
    }
    if (from.has_netassets()) {
      set_netassets(from.netassets());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_QueryFundCondition_Ack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_QueryFundCondition_Ack::CopyFrom(const INF_QueryFundCondition_Ack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_QueryFundCondition_Ack::IsInitialized() const {
  
  return true;
}

void INF_QueryFundCondition_Ack::Swap(INF_QueryFundCondition_Ack* other) {
  if (other != this) {
    std::swap(valid_, other->valid_);
    std::swap(fundremain_, other->fundremain_);
    std::swap(validfund_, other->validfund_);
    std::swap(marketvalue_, other->marketvalue_);
    std::swap(respflag_, other->respflag_);
    std::swap(issuccess_, other->issuccess_);
    std::swap(fundsum_, other->fundsum_);
    std::swap(todaybuycj_, other->todaybuycj_);
    std::swap(todaysellcj_, other->todaysellcj_);
    std::swap(sumfloatprofitloss_, other->sumfloatprofitloss_);
    std::swap(fundoftodaybuyundeal_, other->fundoftodaybuyundeal_);
    std::swap(fundofbuyunsettled_, other->fundofbuyunsettled_);
    std::swap(fundofsellunsettled_, other->fundofsellunsettled_);
    std::swap(moneyname_, other->moneyname_);
    std::swap(fundofexceptlock_, other->fundofexceptlock_);
    std::swap(moneyid_, other->moneyid_);
    std::swap(positionrate_, other->positionrate_);
    std::swap(netassets_, other->netassets_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_QueryFundCondition_Ack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_QueryFundCondition_Ack_descriptor_;
  metadata.reflection = INF_QueryFundCondition_Ack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_QueryPosition_Ack::kMarketIDFieldNumber;
const int INF_QueryPosition_Ack::kSecurityCodeFieldNumber;
const int INF_QueryPosition_Ack::kSecurityNameFieldNumber;
const int INF_QueryPosition_Ack::kSecurityNumFieldNumber;
const int INF_QueryPosition_Ack::kMarketValueFieldNumber;
const int INF_QueryPosition_Ack::kCostPriceFieldNumber;
const int INF_QueryPosition_Ack::kYesterdayPositionFieldNumber;
const int INF_QueryPosition_Ack::kValidSecurityNumFieldNumber;
const int INF_QueryPosition_Ack::kRespFlagFieldNumber;
const int INF_QueryPosition_Ack::kStockholderAccountFieldNumber;
const int INF_QueryPosition_Ack::kFloatProfitLossFieldNumber;
const int INF_QueryPosition_Ack::kLastestPriceFieldNumber;
const int INF_QueryPosition_Ack::kStockMarketValueFieldNumber;
const int INF_QueryPosition_Ack::kCommentDateFieldNumber;
const int INF_QueryPosition_Ack::kSentenceCommentMsgFieldNumber;
const int INF_QueryPosition_Ack::kNationalDebtNetPriceFieldNumber;
const int INF_QueryPosition_Ack::kInterestFieldNumber;
const int INF_QueryPosition_Ack::kAverageBuyPriceFieldNumber;
const int INF_QueryPosition_Ack::kLiquidCostPriceFieldNumber;
const int INF_QueryPosition_Ack::kBeginStockFieldNumber;
const int INF_QueryPosition_Ack::kOverPositionBalancesFieldNumber;
#endif  // !_MSC_VER

INF_QueryPosition_Ack::INF_QueryPosition_Ack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_QueryPosition_Ack::InitAsDefaultInstance() {
}

INF_QueryPosition_Ack::INF_QueryPosition_Ack(const INF_QueryPosition_Ack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_QueryPosition_Ack::SharedCtor() {
  _cached_size_ = 0;
  marketid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  securitycode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  securityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  securitynum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  marketvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  costprice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  yesterdayposition_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  validsecuritynum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  respflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stockholderaccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  floatprofitloss_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  lastestprice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stockmarketvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  commentdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sentencecommentmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nationaldebtnetprice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  interest_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  averagebuyprice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  liquidcostprice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  beginstock_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  overpositionbalances_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_QueryPosition_Ack::~INF_QueryPosition_Ack() {
  SharedDtor();
}

void INF_QueryPosition_Ack::SharedDtor() {
  if (marketid_ != &::google::protobuf::internal::kEmptyString) {
    delete marketid_;
  }
  if (securitycode_ != &::google::protobuf::internal::kEmptyString) {
    delete securitycode_;
  }
  if (securityname_ != &::google::protobuf::internal::kEmptyString) {
    delete securityname_;
  }
  if (securitynum_ != &::google::protobuf::internal::kEmptyString) {
    delete securitynum_;
  }
  if (marketvalue_ != &::google::protobuf::internal::kEmptyString) {
    delete marketvalue_;
  }
  if (costprice_ != &::google::protobuf::internal::kEmptyString) {
    delete costprice_;
  }
  if (yesterdayposition_ != &::google::protobuf::internal::kEmptyString) {
    delete yesterdayposition_;
  }
  if (validsecuritynum_ != &::google::protobuf::internal::kEmptyString) {
    delete validsecuritynum_;
  }
  if (respflag_ != &::google::protobuf::internal::kEmptyString) {
    delete respflag_;
  }
  if (stockholderaccount_ != &::google::protobuf::internal::kEmptyString) {
    delete stockholderaccount_;
  }
  if (floatprofitloss_ != &::google::protobuf::internal::kEmptyString) {
    delete floatprofitloss_;
  }
  if (lastestprice_ != &::google::protobuf::internal::kEmptyString) {
    delete lastestprice_;
  }
  if (stockmarketvalue_ != &::google::protobuf::internal::kEmptyString) {
    delete stockmarketvalue_;
  }
  if (commentdate_ != &::google::protobuf::internal::kEmptyString) {
    delete commentdate_;
  }
  if (sentencecommentmsg_ != &::google::protobuf::internal::kEmptyString) {
    delete sentencecommentmsg_;
  }
  if (nationaldebtnetprice_ != &::google::protobuf::internal::kEmptyString) {
    delete nationaldebtnetprice_;
  }
  if (interest_ != &::google::protobuf::internal::kEmptyString) {
    delete interest_;
  }
  if (averagebuyprice_ != &::google::protobuf::internal::kEmptyString) {
    delete averagebuyprice_;
  }
  if (liquidcostprice_ != &::google::protobuf::internal::kEmptyString) {
    delete liquidcostprice_;
  }
  if (beginstock_ != &::google::protobuf::internal::kEmptyString) {
    delete beginstock_;
  }
  if (overpositionbalances_ != &::google::protobuf::internal::kEmptyString) {
    delete overpositionbalances_;
  }
  if (this != default_instance_) {
  }
}

void INF_QueryPosition_Ack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_QueryPosition_Ack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_QueryPosition_Ack_descriptor_;
}

const INF_QueryPosition_Ack& INF_QueryPosition_Ack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_QueryPosition_Ack* INF_QueryPosition_Ack::default_instance_ = NULL;

INF_QueryPosition_Ack* INF_QueryPosition_Ack::New() const {
  return new INF_QueryPosition_Ack;
}

void INF_QueryPosition_Ack::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_marketid()) {
      if (marketid_ != &::google::protobuf::internal::kEmptyString) {
        marketid_->clear();
      }
    }
    if (has_securitycode()) {
      if (securitycode_ != &::google::protobuf::internal::kEmptyString) {
        securitycode_->clear();
      }
    }
    if (has_securityname()) {
      if (securityname_ != &::google::protobuf::internal::kEmptyString) {
        securityname_->clear();
      }
    }
    if (has_securitynum()) {
      if (securitynum_ != &::google::protobuf::internal::kEmptyString) {
        securitynum_->clear();
      }
    }
    if (has_marketvalue()) {
      if (marketvalue_ != &::google::protobuf::internal::kEmptyString) {
        marketvalue_->clear();
      }
    }
    if (has_costprice()) {
      if (costprice_ != &::google::protobuf::internal::kEmptyString) {
        costprice_->clear();
      }
    }
    if (has_yesterdayposition()) {
      if (yesterdayposition_ != &::google::protobuf::internal::kEmptyString) {
        yesterdayposition_->clear();
      }
    }
    if (has_validsecuritynum()) {
      if (validsecuritynum_ != &::google::protobuf::internal::kEmptyString) {
        validsecuritynum_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_respflag()) {
      if (respflag_ != &::google::protobuf::internal::kEmptyString) {
        respflag_->clear();
      }
    }
    if (has_stockholderaccount()) {
      if (stockholderaccount_ != &::google::protobuf::internal::kEmptyString) {
        stockholderaccount_->clear();
      }
    }
    if (has_floatprofitloss()) {
      if (floatprofitloss_ != &::google::protobuf::internal::kEmptyString) {
        floatprofitloss_->clear();
      }
    }
    if (has_lastestprice()) {
      if (lastestprice_ != &::google::protobuf::internal::kEmptyString) {
        lastestprice_->clear();
      }
    }
    if (has_stockmarketvalue()) {
      if (stockmarketvalue_ != &::google::protobuf::internal::kEmptyString) {
        stockmarketvalue_->clear();
      }
    }
    if (has_commentdate()) {
      if (commentdate_ != &::google::protobuf::internal::kEmptyString) {
        commentdate_->clear();
      }
    }
    if (has_sentencecommentmsg()) {
      if (sentencecommentmsg_ != &::google::protobuf::internal::kEmptyString) {
        sentencecommentmsg_->clear();
      }
    }
    if (has_nationaldebtnetprice()) {
      if (nationaldebtnetprice_ != &::google::protobuf::internal::kEmptyString) {
        nationaldebtnetprice_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_interest()) {
      if (interest_ != &::google::protobuf::internal::kEmptyString) {
        interest_->clear();
      }
    }
    if (has_averagebuyprice()) {
      if (averagebuyprice_ != &::google::protobuf::internal::kEmptyString) {
        averagebuyprice_->clear();
      }
    }
    if (has_liquidcostprice()) {
      if (liquidcostprice_ != &::google::protobuf::internal::kEmptyString) {
        liquidcostprice_->clear();
      }
    }
    if (has_beginstock()) {
      if (beginstock_ != &::google::protobuf::internal::kEmptyString) {
        beginstock_->clear();
      }
    }
    if (has_overpositionbalances()) {
      if (overpositionbalances_ != &::google::protobuf::internal::kEmptyString) {
        overpositionbalances_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_QueryPosition_Ack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string MarketID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_marketid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->marketid().data(), this->marketid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_SecurityCode;
        break;
      }
      
      // optional string SecurityCode = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SecurityCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_securitycode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->securitycode().data(), this->securitycode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_SecurityName;
        break;
      }
      
      // optional string SecurityName = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SecurityName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_securityname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->securityname().data(), this->securityname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_SecurityNum;
        break;
      }
      
      // optional string SecurityNum = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SecurityNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_securitynum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->securitynum().data(), this->securitynum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_MarketValue;
        break;
      }
      
      // optional string MarketValue = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_MarketValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_marketvalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->marketvalue().data(), this->marketvalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_CostPrice;
        break;
      }
      
      // optional string CostPrice = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CostPrice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_costprice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->costprice().data(), this->costprice().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_YesterdayPosition;
        break;
      }
      
      // optional string YesterdayPosition = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_YesterdayPosition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_yesterdayposition()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->yesterdayposition().data(), this->yesterdayposition().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_ValidSecurityNum;
        break;
      }
      
      // optional string ValidSecurityNum = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ValidSecurityNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_validsecuritynum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->validsecuritynum().data(), this->validsecuritynum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_RespFlag;
        break;
      }
      
      // optional string RespFlag = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RespFlag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_respflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->respflag().data(), this->respflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_StockholderAccount;
        break;
      }
      
      // optional string StockholderAccount = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_StockholderAccount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stockholderaccount()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stockholderaccount().data(), this->stockholderaccount().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_FloatProfitLoss;
        break;
      }
      
      // optional string FloatProfitLoss = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_FloatProfitLoss:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_floatprofitloss()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->floatprofitloss().data(), this->floatprofitloss().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_LastestPrice;
        break;
      }
      
      // optional string LastestPrice = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_LastestPrice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lastestprice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->lastestprice().data(), this->lastestprice().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_StockMarketValue;
        break;
      }
      
      // optional string StockMarketValue = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_StockMarketValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stockmarketvalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stockmarketvalue().data(), this->stockmarketvalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_CommentDate;
        break;
      }
      
      // optional string CommentDate = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CommentDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commentdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->commentdate().data(), this->commentdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_SentenceCommentMsg;
        break;
      }
      
      // optional string SentenceCommentMsg = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SentenceCommentMsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sentencecommentmsg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sentencecommentmsg().data(), this->sentencecommentmsg().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_NationalDebtNetPrice;
        break;
      }
      
      // optional string NationalDebtNetPrice = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_NationalDebtNetPrice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nationaldebtnetprice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->nationaldebtnetprice().data(), this->nationaldebtnetprice().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_Interest;
        break;
      }
      
      // optional string Interest = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Interest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_interest()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->interest().data(), this->interest().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_AverageBuyPrice;
        break;
      }
      
      // optional string AverageBuyPrice = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_AverageBuyPrice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_averagebuyprice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->averagebuyprice().data(), this->averagebuyprice().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_LiquidCostPrice;
        break;
      }
      
      // optional string LiquidCostPrice = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_LiquidCostPrice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_liquidcostprice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->liquidcostprice().data(), this->liquidcostprice().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_BeginStock;
        break;
      }
      
      // optional string BeginStock = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_BeginStock:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_beginstock()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->beginstock().data(), this->beginstock().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_OverPositionBalances;
        break;
      }
      
      // optional string OverPositionBalances = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OverPositionBalances:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_overpositionbalances()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->overpositionbalances().data(), this->overpositionbalances().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_QueryPosition_Ack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string MarketID = 1;
  if (has_marketid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketid().data(), this->marketid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->marketid(), output);
  }
  
  // optional string SecurityCode = 2;
  if (has_securitycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitycode().data(), this->securitycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->securitycode(), output);
  }
  
  // optional string SecurityName = 3;
  if (has_securityname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securityname().data(), this->securityname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->securityname(), output);
  }
  
  // optional string SecurityNum = 4;
  if (has_securitynum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitynum().data(), this->securitynum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->securitynum(), output);
  }
  
  // optional string MarketValue = 5;
  if (has_marketvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketvalue().data(), this->marketvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->marketvalue(), output);
  }
  
  // optional string CostPrice = 6;
  if (has_costprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->costprice().data(), this->costprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->costprice(), output);
  }
  
  // optional string YesterdayPosition = 7;
  if (has_yesterdayposition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->yesterdayposition().data(), this->yesterdayposition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->yesterdayposition(), output);
  }
  
  // optional string ValidSecurityNum = 8;
  if (has_validsecuritynum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->validsecuritynum().data(), this->validsecuritynum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->validsecuritynum(), output);
  }
  
  // optional string RespFlag = 9;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->respflag(), output);
  }
  
  // optional string StockholderAccount = 10;
  if (has_stockholderaccount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stockholderaccount().data(), this->stockholderaccount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->stockholderaccount(), output);
  }
  
  // optional string FloatProfitLoss = 11;
  if (has_floatprofitloss()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->floatprofitloss().data(), this->floatprofitloss().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->floatprofitloss(), output);
  }
  
  // optional string LastestPrice = 12;
  if (has_lastestprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lastestprice().data(), this->lastestprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->lastestprice(), output);
  }
  
  // optional string StockMarketValue = 13;
  if (has_stockmarketvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stockmarketvalue().data(), this->stockmarketvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->stockmarketvalue(), output);
  }
  
  // optional string CommentDate = 14;
  if (has_commentdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->commentdate().data(), this->commentdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->commentdate(), output);
  }
  
  // optional string SentenceCommentMsg = 15;
  if (has_sentencecommentmsg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sentencecommentmsg().data(), this->sentencecommentmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->sentencecommentmsg(), output);
  }
  
  // optional string NationalDebtNetPrice = 16;
  if (has_nationaldebtnetprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nationaldebtnetprice().data(), this->nationaldebtnetprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->nationaldebtnetprice(), output);
  }
  
  // optional string Interest = 17;
  if (has_interest()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->interest().data(), this->interest().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->interest(), output);
  }
  
  // optional string AverageBuyPrice = 18;
  if (has_averagebuyprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->averagebuyprice().data(), this->averagebuyprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->averagebuyprice(), output);
  }
  
  // optional string LiquidCostPrice = 19;
  if (has_liquidcostprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->liquidcostprice().data(), this->liquidcostprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->liquidcostprice(), output);
  }
  
  // optional string BeginStock = 20;
  if (has_beginstock()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->beginstock().data(), this->beginstock().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->beginstock(), output);
  }
  
  // optional string OverPositionBalances = 21;
  if (has_overpositionbalances()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->overpositionbalances().data(), this->overpositionbalances().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      21, this->overpositionbalances(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_QueryPosition_Ack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string MarketID = 1;
  if (has_marketid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketid().data(), this->marketid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->marketid(), target);
  }
  
  // optional string SecurityCode = 2;
  if (has_securitycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitycode().data(), this->securitycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->securitycode(), target);
  }
  
  // optional string SecurityName = 3;
  if (has_securityname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securityname().data(), this->securityname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->securityname(), target);
  }
  
  // optional string SecurityNum = 4;
  if (has_securitynum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitynum().data(), this->securitynum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->securitynum(), target);
  }
  
  // optional string MarketValue = 5;
  if (has_marketvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketvalue().data(), this->marketvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->marketvalue(), target);
  }
  
  // optional string CostPrice = 6;
  if (has_costprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->costprice().data(), this->costprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->costprice(), target);
  }
  
  // optional string YesterdayPosition = 7;
  if (has_yesterdayposition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->yesterdayposition().data(), this->yesterdayposition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->yesterdayposition(), target);
  }
  
  // optional string ValidSecurityNum = 8;
  if (has_validsecuritynum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->validsecuritynum().data(), this->validsecuritynum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->validsecuritynum(), target);
  }
  
  // optional string RespFlag = 9;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->respflag(), target);
  }
  
  // optional string StockholderAccount = 10;
  if (has_stockholderaccount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stockholderaccount().data(), this->stockholderaccount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->stockholderaccount(), target);
  }
  
  // optional string FloatProfitLoss = 11;
  if (has_floatprofitloss()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->floatprofitloss().data(), this->floatprofitloss().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->floatprofitloss(), target);
  }
  
  // optional string LastestPrice = 12;
  if (has_lastestprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lastestprice().data(), this->lastestprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->lastestprice(), target);
  }
  
  // optional string StockMarketValue = 13;
  if (has_stockmarketvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stockmarketvalue().data(), this->stockmarketvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->stockmarketvalue(), target);
  }
  
  // optional string CommentDate = 14;
  if (has_commentdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->commentdate().data(), this->commentdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->commentdate(), target);
  }
  
  // optional string SentenceCommentMsg = 15;
  if (has_sentencecommentmsg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sentencecommentmsg().data(), this->sentencecommentmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->sentencecommentmsg(), target);
  }
  
  // optional string NationalDebtNetPrice = 16;
  if (has_nationaldebtnetprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nationaldebtnetprice().data(), this->nationaldebtnetprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->nationaldebtnetprice(), target);
  }
  
  // optional string Interest = 17;
  if (has_interest()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->interest().data(), this->interest().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->interest(), target);
  }
  
  // optional string AverageBuyPrice = 18;
  if (has_averagebuyprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->averagebuyprice().data(), this->averagebuyprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->averagebuyprice(), target);
  }
  
  // optional string LiquidCostPrice = 19;
  if (has_liquidcostprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->liquidcostprice().data(), this->liquidcostprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->liquidcostprice(), target);
  }
  
  // optional string BeginStock = 20;
  if (has_beginstock()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->beginstock().data(), this->beginstock().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->beginstock(), target);
  }
  
  // optional string OverPositionBalances = 21;
  if (has_overpositionbalances()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->overpositionbalances().data(), this->overpositionbalances().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->overpositionbalances(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_QueryPosition_Ack::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string MarketID = 1;
    if (has_marketid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->marketid());
    }
    
    // optional string SecurityCode = 2;
    if (has_securitycode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->securitycode());
    }
    
    // optional string SecurityName = 3;
    if (has_securityname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->securityname());
    }
    
    // optional string SecurityNum = 4;
    if (has_securitynum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->securitynum());
    }
    
    // optional string MarketValue = 5;
    if (has_marketvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->marketvalue());
    }
    
    // optional string CostPrice = 6;
    if (has_costprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->costprice());
    }
    
    // optional string YesterdayPosition = 7;
    if (has_yesterdayposition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->yesterdayposition());
    }
    
    // optional string ValidSecurityNum = 8;
    if (has_validsecuritynum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->validsecuritynum());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string RespFlag = 9;
    if (has_respflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->respflag());
    }
    
    // optional string StockholderAccount = 10;
    if (has_stockholderaccount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stockholderaccount());
    }
    
    // optional string FloatProfitLoss = 11;
    if (has_floatprofitloss()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->floatprofitloss());
    }
    
    // optional string LastestPrice = 12;
    if (has_lastestprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lastestprice());
    }
    
    // optional string StockMarketValue = 13;
    if (has_stockmarketvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stockmarketvalue());
    }
    
    // optional string CommentDate = 14;
    if (has_commentdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->commentdate());
    }
    
    // optional string SentenceCommentMsg = 15;
    if (has_sentencecommentmsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sentencecommentmsg());
    }
    
    // optional string NationalDebtNetPrice = 16;
    if (has_nationaldebtnetprice()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nationaldebtnetprice());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string Interest = 17;
    if (has_interest()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->interest());
    }
    
    // optional string AverageBuyPrice = 18;
    if (has_averagebuyprice()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->averagebuyprice());
    }
    
    // optional string LiquidCostPrice = 19;
    if (has_liquidcostprice()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->liquidcostprice());
    }
    
    // optional string BeginStock = 20;
    if (has_beginstock()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->beginstock());
    }
    
    // optional string OverPositionBalances = 21;
    if (has_overpositionbalances()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->overpositionbalances());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_QueryPosition_Ack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_QueryPosition_Ack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_QueryPosition_Ack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_QueryPosition_Ack::MergeFrom(const INF_QueryPosition_Ack& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_marketid()) {
      set_marketid(from.marketid());
    }
    if (from.has_securitycode()) {
      set_securitycode(from.securitycode());
    }
    if (from.has_securityname()) {
      set_securityname(from.securityname());
    }
    if (from.has_securitynum()) {
      set_securitynum(from.securitynum());
    }
    if (from.has_marketvalue()) {
      set_marketvalue(from.marketvalue());
    }
    if (from.has_costprice()) {
      set_costprice(from.costprice());
    }
    if (from.has_yesterdayposition()) {
      set_yesterdayposition(from.yesterdayposition());
    }
    if (from.has_validsecuritynum()) {
      set_validsecuritynum(from.validsecuritynum());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_respflag()) {
      set_respflag(from.respflag());
    }
    if (from.has_stockholderaccount()) {
      set_stockholderaccount(from.stockholderaccount());
    }
    if (from.has_floatprofitloss()) {
      set_floatprofitloss(from.floatprofitloss());
    }
    if (from.has_lastestprice()) {
      set_lastestprice(from.lastestprice());
    }
    if (from.has_stockmarketvalue()) {
      set_stockmarketvalue(from.stockmarketvalue());
    }
    if (from.has_commentdate()) {
      set_commentdate(from.commentdate());
    }
    if (from.has_sentencecommentmsg()) {
      set_sentencecommentmsg(from.sentencecommentmsg());
    }
    if (from.has_nationaldebtnetprice()) {
      set_nationaldebtnetprice(from.nationaldebtnetprice());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_interest()) {
      set_interest(from.interest());
    }
    if (from.has_averagebuyprice()) {
      set_averagebuyprice(from.averagebuyprice());
    }
    if (from.has_liquidcostprice()) {
      set_liquidcostprice(from.liquidcostprice());
    }
    if (from.has_beginstock()) {
      set_beginstock(from.beginstock());
    }
    if (from.has_overpositionbalances()) {
      set_overpositionbalances(from.overpositionbalances());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_QueryPosition_Ack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_QueryPosition_Ack::CopyFrom(const INF_QueryPosition_Ack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_QueryPosition_Ack::IsInitialized() const {
  
  return true;
}

void INF_QueryPosition_Ack::Swap(INF_QueryPosition_Ack* other) {
  if (other != this) {
    std::swap(marketid_, other->marketid_);
    std::swap(securitycode_, other->securitycode_);
    std::swap(securityname_, other->securityname_);
    std::swap(securitynum_, other->securitynum_);
    std::swap(marketvalue_, other->marketvalue_);
    std::swap(costprice_, other->costprice_);
    std::swap(yesterdayposition_, other->yesterdayposition_);
    std::swap(validsecuritynum_, other->validsecuritynum_);
    std::swap(respflag_, other->respflag_);
    std::swap(stockholderaccount_, other->stockholderaccount_);
    std::swap(floatprofitloss_, other->floatprofitloss_);
    std::swap(lastestprice_, other->lastestprice_);
    std::swap(stockmarketvalue_, other->stockmarketvalue_);
    std::swap(commentdate_, other->commentdate_);
    std::swap(sentencecommentmsg_, other->sentencecommentmsg_);
    std::swap(nationaldebtnetprice_, other->nationaldebtnetprice_);
    std::swap(interest_, other->interest_);
    std::swap(averagebuyprice_, other->averagebuyprice_);
    std::swap(liquidcostprice_, other->liquidcostprice_);
    std::swap(beginstock_, other->beginstock_);
    std::swap(overpositionbalances_, other->overpositionbalances_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_QueryPosition_Ack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_QueryPosition_Ack_descriptor_;
  metadata.reflection = INF_QueryPosition_Ack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_QueryCJMX_Ack::kMarketIDFieldNumber;
const int INF_QueryCJMX_Ack::kBSflagFieldNumber;
const int INF_QueryCJMX_Ack::kCjTypeFieldNumber;
const int INF_QueryCJMX_Ack::kSecurityCodeFieldNumber;
const int INF_QueryCJMX_Ack::kSecurityNameFieldNumber;
const int INF_QueryCJMX_Ack::kCjNumFieldNumber;
const int INF_QueryCJMX_Ack::kCjPriceFieldNumber;
const int INF_QueryCJMX_Ack::kCjFundFieldNumber;
const int INF_QueryCJMX_Ack::kEntrustSerialFieldNumber;
const int INF_QueryCJMX_Ack::kCjDateFieldNumber;
const int INF_QueryCJMX_Ack::kPageStartPosFieldNumber;
const int INF_QueryCJMX_Ack::kCjSerialFieldNumber;
const int INF_QueryCJMX_Ack::kValidFieldNumber;
const int INF_QueryCJMX_Ack::kRespFlagFieldNumber;
const int INF_QueryCJMX_Ack::kDateFieldNumber;
const int INF_QueryCJMX_Ack::kSerialNoFieldNumber;
const int INF_QueryCJMX_Ack::kStockholderAccountFieldNumber;
const int INF_QueryCJMX_Ack::kBSNameFieldNumber;
const int INF_QueryCJMX_Ack::kCjTypeNameFieldNumber;
const int INF_QueryCJMX_Ack::kCjPenNumFieldNumber;
const int INF_QueryCJMX_Ack::kEntrustTypeFieldNumber;
const int INF_QueryCJMX_Ack::kDeclareNoFieldNumber;
#endif  // !_MSC_VER

INF_QueryCJMX_Ack::INF_QueryCJMX_Ack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_QueryCJMX_Ack::InitAsDefaultInstance() {
}

INF_QueryCJMX_Ack::INF_QueryCJMX_Ack(const INF_QueryCJMX_Ack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_QueryCJMX_Ack::SharedCtor() {
  _cached_size_ = 0;
  marketid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bsflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cjtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  securitycode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  securityname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cjnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cjprice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cjfund_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrustserial_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cjdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  pagestartpos_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cjserial_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  valid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  respflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  date_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  serialno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stockholderaccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bsname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cjtypename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cjpennum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  entrusttype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  declareno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_QueryCJMX_Ack::~INF_QueryCJMX_Ack() {
  SharedDtor();
}

void INF_QueryCJMX_Ack::SharedDtor() {
  if (marketid_ != &::google::protobuf::internal::kEmptyString) {
    delete marketid_;
  }
  if (bsflag_ != &::google::protobuf::internal::kEmptyString) {
    delete bsflag_;
  }
  if (cjtype_ != &::google::protobuf::internal::kEmptyString) {
    delete cjtype_;
  }
  if (securitycode_ != &::google::protobuf::internal::kEmptyString) {
    delete securitycode_;
  }
  if (securityname_ != &::google::protobuf::internal::kEmptyString) {
    delete securityname_;
  }
  if (cjnum_ != &::google::protobuf::internal::kEmptyString) {
    delete cjnum_;
  }
  if (cjprice_ != &::google::protobuf::internal::kEmptyString) {
    delete cjprice_;
  }
  if (cjfund_ != &::google::protobuf::internal::kEmptyString) {
    delete cjfund_;
  }
  if (entrustserial_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustserial_;
  }
  if (cjdate_ != &::google::protobuf::internal::kEmptyString) {
    delete cjdate_;
  }
  if (pagestartpos_ != &::google::protobuf::internal::kEmptyString) {
    delete pagestartpos_;
  }
  if (cjserial_ != &::google::protobuf::internal::kEmptyString) {
    delete cjserial_;
  }
  if (valid_ != &::google::protobuf::internal::kEmptyString) {
    delete valid_;
  }
  if (respflag_ != &::google::protobuf::internal::kEmptyString) {
    delete respflag_;
  }
  if (date_ != &::google::protobuf::internal::kEmptyString) {
    delete date_;
  }
  if (serialno_ != &::google::protobuf::internal::kEmptyString) {
    delete serialno_;
  }
  if (stockholderaccount_ != &::google::protobuf::internal::kEmptyString) {
    delete stockholderaccount_;
  }
  if (bsname_ != &::google::protobuf::internal::kEmptyString) {
    delete bsname_;
  }
  if (cjtypename_ != &::google::protobuf::internal::kEmptyString) {
    delete cjtypename_;
  }
  if (cjpennum_ != &::google::protobuf::internal::kEmptyString) {
    delete cjpennum_;
  }
  if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
    delete entrusttype_;
  }
  if (declareno_ != &::google::protobuf::internal::kEmptyString) {
    delete declareno_;
  }
  if (this != default_instance_) {
  }
}

void INF_QueryCJMX_Ack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_QueryCJMX_Ack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_QueryCJMX_Ack_descriptor_;
}

const INF_QueryCJMX_Ack& INF_QueryCJMX_Ack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_QueryCJMX_Ack* INF_QueryCJMX_Ack::default_instance_ = NULL;

INF_QueryCJMX_Ack* INF_QueryCJMX_Ack::New() const {
  return new INF_QueryCJMX_Ack;
}

void INF_QueryCJMX_Ack::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_marketid()) {
      if (marketid_ != &::google::protobuf::internal::kEmptyString) {
        marketid_->clear();
      }
    }
    if (has_bsflag()) {
      if (bsflag_ != &::google::protobuf::internal::kEmptyString) {
        bsflag_->clear();
      }
    }
    if (has_cjtype()) {
      if (cjtype_ != &::google::protobuf::internal::kEmptyString) {
        cjtype_->clear();
      }
    }
    if (has_securitycode()) {
      if (securitycode_ != &::google::protobuf::internal::kEmptyString) {
        securitycode_->clear();
      }
    }
    if (has_securityname()) {
      if (securityname_ != &::google::protobuf::internal::kEmptyString) {
        securityname_->clear();
      }
    }
    if (has_cjnum()) {
      if (cjnum_ != &::google::protobuf::internal::kEmptyString) {
        cjnum_->clear();
      }
    }
    if (has_cjprice()) {
      if (cjprice_ != &::google::protobuf::internal::kEmptyString) {
        cjprice_->clear();
      }
    }
    if (has_cjfund()) {
      if (cjfund_ != &::google::protobuf::internal::kEmptyString) {
        cjfund_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_entrustserial()) {
      if (entrustserial_ != &::google::protobuf::internal::kEmptyString) {
        entrustserial_->clear();
      }
    }
    if (has_cjdate()) {
      if (cjdate_ != &::google::protobuf::internal::kEmptyString) {
        cjdate_->clear();
      }
    }
    if (has_pagestartpos()) {
      if (pagestartpos_ != &::google::protobuf::internal::kEmptyString) {
        pagestartpos_->clear();
      }
    }
    if (has_cjserial()) {
      if (cjserial_ != &::google::protobuf::internal::kEmptyString) {
        cjserial_->clear();
      }
    }
    if (has_valid()) {
      if (valid_ != &::google::protobuf::internal::kEmptyString) {
        valid_->clear();
      }
    }
    if (has_respflag()) {
      if (respflag_ != &::google::protobuf::internal::kEmptyString) {
        respflag_->clear();
      }
    }
    if (has_date()) {
      if (date_ != &::google::protobuf::internal::kEmptyString) {
        date_->clear();
      }
    }
    if (has_serialno()) {
      if (serialno_ != &::google::protobuf::internal::kEmptyString) {
        serialno_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_stockholderaccount()) {
      if (stockholderaccount_ != &::google::protobuf::internal::kEmptyString) {
        stockholderaccount_->clear();
      }
    }
    if (has_bsname()) {
      if (bsname_ != &::google::protobuf::internal::kEmptyString) {
        bsname_->clear();
      }
    }
    if (has_cjtypename()) {
      if (cjtypename_ != &::google::protobuf::internal::kEmptyString) {
        cjtypename_->clear();
      }
    }
    if (has_cjpennum()) {
      if (cjpennum_ != &::google::protobuf::internal::kEmptyString) {
        cjpennum_->clear();
      }
    }
    if (has_entrusttype()) {
      if (entrusttype_ != &::google::protobuf::internal::kEmptyString) {
        entrusttype_->clear();
      }
    }
    if (has_declareno()) {
      if (declareno_ != &::google::protobuf::internal::kEmptyString) {
        declareno_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_QueryCJMX_Ack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string MarketID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_marketid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->marketid().data(), this->marketid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_BSflag;
        break;
      }
      
      // optional string BSflag = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_BSflag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bsflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bsflag().data(), this->bsflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_CjType;
        break;
      }
      
      // optional string CjType = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CjType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cjtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cjtype().data(), this->cjtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_SecurityCode;
        break;
      }
      
      // optional string SecurityCode = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SecurityCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_securitycode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->securitycode().data(), this->securitycode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_SecurityName;
        break;
      }
      
      // optional string SecurityName = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SecurityName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_securityname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->securityname().data(), this->securityname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_CjNum;
        break;
      }
      
      // optional string CjNum = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CjNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cjnum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cjnum().data(), this->cjnum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_CjPrice;
        break;
      }
      
      // optional string CjPrice = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CjPrice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cjprice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cjprice().data(), this->cjprice().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_CjFund;
        break;
      }
      
      // optional string CjFund = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CjFund:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cjfund()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cjfund().data(), this->cjfund().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_EntrustSerial;
        break;
      }
      
      // optional string EntrustSerial = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustSerial:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustserial()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustserial().data(), this->entrustserial().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_CjDate;
        break;
      }
      
      // optional string CjDate = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CjDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cjdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cjdate().data(), this->cjdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_PageStartPos;
        break;
      }
      
      // optional string PageStartPos = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_PageStartPos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pagestartpos()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->pagestartpos().data(), this->pagestartpos().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_CjSerial;
        break;
      }
      
      // optional string CjSerial = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CjSerial:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cjserial()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cjserial().data(), this->cjserial().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_Valid;
        break;
      }
      
      // optional string Valid = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Valid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_valid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->valid().data(), this->valid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_RespFlag;
        break;
      }
      
      // optional string RespFlag = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RespFlag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_respflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->respflag().data(), this->respflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_Date;
        break;
      }
      
      // optional string Date = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->date().data(), this->date().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_SerialNo;
        break;
      }
      
      // optional string SerialNo = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SerialNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serialno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->serialno().data(), this->serialno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_StockholderAccount;
        break;
      }
      
      // optional string StockholderAccount = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_StockholderAccount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stockholderaccount()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stockholderaccount().data(), this->stockholderaccount().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_BSName;
        break;
      }
      
      // optional string BSName = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_BSName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bsname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bsname().data(), this->bsname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_CjTypeName;
        break;
      }
      
      // optional string CjTypeName = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CjTypeName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cjtypename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cjtypename().data(), this->cjtypename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_CjPenNum;
        break;
      }
      
      // optional string CjPenNum = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CjPenNum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cjpennum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cjpennum().data(), this->cjpennum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_EntrustType;
        break;
      }
      
      // optional string EntrustType = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EntrustType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrusttype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrusttype().data(), this->entrusttype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_DeclareNo;
        break;
      }
      
      // optional string DeclareNo = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DeclareNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_declareno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->declareno().data(), this->declareno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_QueryCJMX_Ack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string MarketID = 1;
  if (has_marketid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketid().data(), this->marketid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->marketid(), output);
  }
  
  // optional string BSflag = 2;
  if (has_bsflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bsflag().data(), this->bsflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->bsflag(), output);
  }
  
  // optional string CjType = 3;
  if (has_cjtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjtype().data(), this->cjtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->cjtype(), output);
  }
  
  // optional string SecurityCode = 4;
  if (has_securitycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitycode().data(), this->securitycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->securitycode(), output);
  }
  
  // optional string SecurityName = 5;
  if (has_securityname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securityname().data(), this->securityname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->securityname(), output);
  }
  
  // optional string CjNum = 6;
  if (has_cjnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjnum().data(), this->cjnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->cjnum(), output);
  }
  
  // optional string CjPrice = 7;
  if (has_cjprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjprice().data(), this->cjprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->cjprice(), output);
  }
  
  // optional string CjFund = 8;
  if (has_cjfund()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjfund().data(), this->cjfund().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->cjfund(), output);
  }
  
  // optional string EntrustSerial = 9;
  if (has_entrustserial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustserial().data(), this->entrustserial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->entrustserial(), output);
  }
  
  // optional string CjDate = 10;
  if (has_cjdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjdate().data(), this->cjdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->cjdate(), output);
  }
  
  // optional string PageStartPos = 11;
  if (has_pagestartpos()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->pagestartpos().data(), this->pagestartpos().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->pagestartpos(), output);
  }
  
  // optional string CjSerial = 12;
  if (has_cjserial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjserial().data(), this->cjserial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->cjserial(), output);
  }
  
  // optional string Valid = 13;
  if (has_valid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valid().data(), this->valid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->valid(), output);
  }
  
  // optional string RespFlag = 14;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->respflag(), output);
  }
  
  // optional string Date = 15;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->date(), output);
  }
  
  // optional string SerialNo = 16;
  if (has_serialno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->serialno().data(), this->serialno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->serialno(), output);
  }
  
  // optional string StockholderAccount = 17;
  if (has_stockholderaccount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stockholderaccount().data(), this->stockholderaccount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->stockholderaccount(), output);
  }
  
  // optional string BSName = 18;
  if (has_bsname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bsname().data(), this->bsname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->bsname(), output);
  }
  
  // optional string CjTypeName = 19;
  if (has_cjtypename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjtypename().data(), this->cjtypename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->cjtypename(), output);
  }
  
  // optional string CjPenNum = 20;
  if (has_cjpennum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjpennum().data(), this->cjpennum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->cjpennum(), output);
  }
  
  // optional string EntrustType = 21;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      21, this->entrusttype(), output);
  }
  
  // optional string DeclareNo = 22;
  if (has_declareno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->declareno().data(), this->declareno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      22, this->declareno(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_QueryCJMX_Ack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string MarketID = 1;
  if (has_marketid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketid().data(), this->marketid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->marketid(), target);
  }
  
  // optional string BSflag = 2;
  if (has_bsflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bsflag().data(), this->bsflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bsflag(), target);
  }
  
  // optional string CjType = 3;
  if (has_cjtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjtype().data(), this->cjtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cjtype(), target);
  }
  
  // optional string SecurityCode = 4;
  if (has_securitycode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitycode().data(), this->securitycode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->securitycode(), target);
  }
  
  // optional string SecurityName = 5;
  if (has_securityname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securityname().data(), this->securityname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->securityname(), target);
  }
  
  // optional string CjNum = 6;
  if (has_cjnum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjnum().data(), this->cjnum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->cjnum(), target);
  }
  
  // optional string CjPrice = 7;
  if (has_cjprice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjprice().data(), this->cjprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->cjprice(), target);
  }
  
  // optional string CjFund = 8;
  if (has_cjfund()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjfund().data(), this->cjfund().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->cjfund(), target);
  }
  
  // optional string EntrustSerial = 9;
  if (has_entrustserial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustserial().data(), this->entrustserial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->entrustserial(), target);
  }
  
  // optional string CjDate = 10;
  if (has_cjdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjdate().data(), this->cjdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->cjdate(), target);
  }
  
  // optional string PageStartPos = 11;
  if (has_pagestartpos()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->pagestartpos().data(), this->pagestartpos().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->pagestartpos(), target);
  }
  
  // optional string CjSerial = 12;
  if (has_cjserial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjserial().data(), this->cjserial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->cjserial(), target);
  }
  
  // optional string Valid = 13;
  if (has_valid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valid().data(), this->valid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->valid(), target);
  }
  
  // optional string RespFlag = 14;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->respflag(), target);
  }
  
  // optional string Date = 15;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->date(), target);
  }
  
  // optional string SerialNo = 16;
  if (has_serialno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->serialno().data(), this->serialno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->serialno(), target);
  }
  
  // optional string StockholderAccount = 17;
  if (has_stockholderaccount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stockholderaccount().data(), this->stockholderaccount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->stockholderaccount(), target);
  }
  
  // optional string BSName = 18;
  if (has_bsname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bsname().data(), this->bsname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->bsname(), target);
  }
  
  // optional string CjTypeName = 19;
  if (has_cjtypename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjtypename().data(), this->cjtypename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->cjtypename(), target);
  }
  
  // optional string CjPenNum = 20;
  if (has_cjpennum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjpennum().data(), this->cjpennum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->cjpennum(), target);
  }
  
  // optional string EntrustType = 21;
  if (has_entrusttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrusttype().data(), this->entrusttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->entrusttype(), target);
  }
  
  // optional string DeclareNo = 22;
  if (has_declareno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->declareno().data(), this->declareno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->declareno(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_QueryCJMX_Ack::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string MarketID = 1;
    if (has_marketid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->marketid());
    }
    
    // optional string BSflag = 2;
    if (has_bsflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bsflag());
    }
    
    // optional string CjType = 3;
    if (has_cjtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cjtype());
    }
    
    // optional string SecurityCode = 4;
    if (has_securitycode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->securitycode());
    }
    
    // optional string SecurityName = 5;
    if (has_securityname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->securityname());
    }
    
    // optional string CjNum = 6;
    if (has_cjnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cjnum());
    }
    
    // optional string CjPrice = 7;
    if (has_cjprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cjprice());
    }
    
    // optional string CjFund = 8;
    if (has_cjfund()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cjfund());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string EntrustSerial = 9;
    if (has_entrustserial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustserial());
    }
    
    // optional string CjDate = 10;
    if (has_cjdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cjdate());
    }
    
    // optional string PageStartPos = 11;
    if (has_pagestartpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pagestartpos());
    }
    
    // optional string CjSerial = 12;
    if (has_cjserial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cjserial());
    }
    
    // optional string Valid = 13;
    if (has_valid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->valid());
    }
    
    // optional string RespFlag = 14;
    if (has_respflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->respflag());
    }
    
    // optional string Date = 15;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->date());
    }
    
    // optional string SerialNo = 16;
    if (has_serialno()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->serialno());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string StockholderAccount = 17;
    if (has_stockholderaccount()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stockholderaccount());
    }
    
    // optional string BSName = 18;
    if (has_bsname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bsname());
    }
    
    // optional string CjTypeName = 19;
    if (has_cjtypename()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cjtypename());
    }
    
    // optional string CjPenNum = 20;
    if (has_cjpennum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cjpennum());
    }
    
    // optional string EntrustType = 21;
    if (has_entrusttype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrusttype());
    }
    
    // optional string DeclareNo = 22;
    if (has_declareno()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->declareno());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_QueryCJMX_Ack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_QueryCJMX_Ack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_QueryCJMX_Ack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_QueryCJMX_Ack::MergeFrom(const INF_QueryCJMX_Ack& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_marketid()) {
      set_marketid(from.marketid());
    }
    if (from.has_bsflag()) {
      set_bsflag(from.bsflag());
    }
    if (from.has_cjtype()) {
      set_cjtype(from.cjtype());
    }
    if (from.has_securitycode()) {
      set_securitycode(from.securitycode());
    }
    if (from.has_securityname()) {
      set_securityname(from.securityname());
    }
    if (from.has_cjnum()) {
      set_cjnum(from.cjnum());
    }
    if (from.has_cjprice()) {
      set_cjprice(from.cjprice());
    }
    if (from.has_cjfund()) {
      set_cjfund(from.cjfund());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_entrustserial()) {
      set_entrustserial(from.entrustserial());
    }
    if (from.has_cjdate()) {
      set_cjdate(from.cjdate());
    }
    if (from.has_pagestartpos()) {
      set_pagestartpos(from.pagestartpos());
    }
    if (from.has_cjserial()) {
      set_cjserial(from.cjserial());
    }
    if (from.has_valid()) {
      set_valid(from.valid());
    }
    if (from.has_respflag()) {
      set_respflag(from.respflag());
    }
    if (from.has_date()) {
      set_date(from.date());
    }
    if (from.has_serialno()) {
      set_serialno(from.serialno());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_stockholderaccount()) {
      set_stockholderaccount(from.stockholderaccount());
    }
    if (from.has_bsname()) {
      set_bsname(from.bsname());
    }
    if (from.has_cjtypename()) {
      set_cjtypename(from.cjtypename());
    }
    if (from.has_cjpennum()) {
      set_cjpennum(from.cjpennum());
    }
    if (from.has_entrusttype()) {
      set_entrusttype(from.entrusttype());
    }
    if (from.has_declareno()) {
      set_declareno(from.declareno());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_QueryCJMX_Ack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_QueryCJMX_Ack::CopyFrom(const INF_QueryCJMX_Ack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_QueryCJMX_Ack::IsInitialized() const {
  
  return true;
}

void INF_QueryCJMX_Ack::Swap(INF_QueryCJMX_Ack* other) {
  if (other != this) {
    std::swap(marketid_, other->marketid_);
    std::swap(bsflag_, other->bsflag_);
    std::swap(cjtype_, other->cjtype_);
    std::swap(securitycode_, other->securitycode_);
    std::swap(securityname_, other->securityname_);
    std::swap(cjnum_, other->cjnum_);
    std::swap(cjprice_, other->cjprice_);
    std::swap(cjfund_, other->cjfund_);
    std::swap(entrustserial_, other->entrustserial_);
    std::swap(cjdate_, other->cjdate_);
    std::swap(pagestartpos_, other->pagestartpos_);
    std::swap(cjserial_, other->cjserial_);
    std::swap(valid_, other->valid_);
    std::swap(respflag_, other->respflag_);
    std::swap(date_, other->date_);
    std::swap(serialno_, other->serialno_);
    std::swap(stockholderaccount_, other->stockholderaccount_);
    std::swap(bsname_, other->bsname_);
    std::swap(cjtypename_, other->cjtypename_);
    std::swap(cjpennum_, other->cjpennum_);
    std::swap(entrusttype_, other->entrusttype_);
    std::swap(declareno_, other->declareno_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_QueryCJMX_Ack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_QueryCJMX_Ack_descriptor_;
  metadata.reflection = INF_QueryCJMX_Ack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_ETFPurRedem_Ack::kEntrustSerialFieldNumber;
const int INF_ETFPurRedem_Ack::kValidFieldNumber;
const int INF_ETFPurRedem_Ack::kRespFlagFieldNumber;
const int INF_ETFPurRedem_Ack::kIsSuccessFieldNumber;
#endif  // !_MSC_VER

INF_ETFPurRedem_Ack::INF_ETFPurRedem_Ack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_ETFPurRedem_Ack::InitAsDefaultInstance() {
}

INF_ETFPurRedem_Ack::INF_ETFPurRedem_Ack(const INF_ETFPurRedem_Ack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_ETFPurRedem_Ack::SharedCtor() {
  _cached_size_ = 0;
  entrustserial_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  valid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  respflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  issuccess_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_ETFPurRedem_Ack::~INF_ETFPurRedem_Ack() {
  SharedDtor();
}

void INF_ETFPurRedem_Ack::SharedDtor() {
  if (entrustserial_ != &::google::protobuf::internal::kEmptyString) {
    delete entrustserial_;
  }
  if (valid_ != &::google::protobuf::internal::kEmptyString) {
    delete valid_;
  }
  if (respflag_ != &::google::protobuf::internal::kEmptyString) {
    delete respflag_;
  }
  if (issuccess_ != &::google::protobuf::internal::kEmptyString) {
    delete issuccess_;
  }
  if (this != default_instance_) {
  }
}

void INF_ETFPurRedem_Ack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_ETFPurRedem_Ack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_ETFPurRedem_Ack_descriptor_;
}

const INF_ETFPurRedem_Ack& INF_ETFPurRedem_Ack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_ETFPurRedem_Ack* INF_ETFPurRedem_Ack::default_instance_ = NULL;

INF_ETFPurRedem_Ack* INF_ETFPurRedem_Ack::New() const {
  return new INF_ETFPurRedem_Ack;
}

void INF_ETFPurRedem_Ack::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_entrustserial()) {
      if (entrustserial_ != &::google::protobuf::internal::kEmptyString) {
        entrustserial_->clear();
      }
    }
    if (has_valid()) {
      if (valid_ != &::google::protobuf::internal::kEmptyString) {
        valid_->clear();
      }
    }
    if (has_respflag()) {
      if (respflag_ != &::google::protobuf::internal::kEmptyString) {
        respflag_->clear();
      }
    }
    if (has_issuccess()) {
      if (issuccess_ != &::google::protobuf::internal::kEmptyString) {
        issuccess_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_ETFPurRedem_Ack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string EntrustSerial = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entrustserial()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->entrustserial().data(), this->entrustserial().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Valid;
        break;
      }
      
      // optional string Valid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Valid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_valid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->valid().data(), this->valid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_RespFlag;
        break;
      }
      
      // optional string RespFlag = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RespFlag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_respflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->respflag().data(), this->respflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_IsSuccess;
        break;
      }
      
      // optional string IsSuccess = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_IsSuccess:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_issuccess()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->issuccess().data(), this->issuccess().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_ETFPurRedem_Ack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string EntrustSerial = 1;
  if (has_entrustserial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustserial().data(), this->entrustserial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->entrustserial(), output);
  }
  
  // optional string Valid = 2;
  if (has_valid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valid().data(), this->valid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->valid(), output);
  }
  
  // optional string RespFlag = 3;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->respflag(), output);
  }
  
  // optional string IsSuccess = 4;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->issuccess().data(), this->issuccess().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->issuccess(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_ETFPurRedem_Ack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string EntrustSerial = 1;
  if (has_entrustserial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->entrustserial().data(), this->entrustserial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->entrustserial(), target);
  }
  
  // optional string Valid = 2;
  if (has_valid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valid().data(), this->valid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->valid(), target);
  }
  
  // optional string RespFlag = 3;
  if (has_respflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respflag().data(), this->respflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->respflag(), target);
  }
  
  // optional string IsSuccess = 4;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->issuccess().data(), this->issuccess().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->issuccess(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_ETFPurRedem_Ack::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string EntrustSerial = 1;
    if (has_entrustserial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entrustserial());
    }
    
    // optional string Valid = 2;
    if (has_valid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->valid());
    }
    
    // optional string RespFlag = 3;
    if (has_respflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->respflag());
    }
    
    // optional string IsSuccess = 4;
    if (has_issuccess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->issuccess());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_ETFPurRedem_Ack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_ETFPurRedem_Ack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_ETFPurRedem_Ack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_ETFPurRedem_Ack::MergeFrom(const INF_ETFPurRedem_Ack& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_entrustserial()) {
      set_entrustserial(from.entrustserial());
    }
    if (from.has_valid()) {
      set_valid(from.valid());
    }
    if (from.has_respflag()) {
      set_respflag(from.respflag());
    }
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_ETFPurRedem_Ack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_ETFPurRedem_Ack::CopyFrom(const INF_ETFPurRedem_Ack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_ETFPurRedem_Ack::IsInitialized() const {
  
  return true;
}

void INF_ETFPurRedem_Ack::Swap(INF_ETFPurRedem_Ack* other) {
  if (other != this) {
    std::swap(entrustserial_, other->entrustserial_);
    std::swap(valid_, other->valid_);
    std::swap(respflag_, other->respflag_);
    std::swap(issuccess_, other->issuccess_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_ETFPurRedem_Ack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_ETFPurRedem_Ack_descriptor_;
  metadata.reflection = INF_ETFPurRedem_Ack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StockLoginResp::kFuncidFieldNumber;
const int StockLoginResp::kFundAccountFieldNumber;
#endif  // !_MSC_VER

StockLoginResp::StockLoginResp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StockLoginResp::InitAsDefaultInstance() {
}

StockLoginResp::StockLoginResp(const StockLoginResp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StockLoginResp::SharedCtor() {
  _cached_size_ = 0;
  funcid_ = 11100001;
  fund_account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StockLoginResp::~StockLoginResp() {
  SharedDtor();
}

void StockLoginResp::SharedDtor() {
  if (fund_account_ != &::google::protobuf::internal::kEmptyString) {
    delete fund_account_;
  }
  if (this != default_instance_) {
  }
}

void StockLoginResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StockLoginResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StockLoginResp_descriptor_;
}

const StockLoginResp& StockLoginResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

StockLoginResp* StockLoginResp::default_instance_ = NULL;

StockLoginResp* StockLoginResp::New() const {
  return new StockLoginResp;
}

void StockLoginResp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    funcid_ = 11100001;
    if (has_fund_account()) {
      if (fund_account_ != &::google::protobuf::internal::kEmptyString) {
        fund_account_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StockLoginResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 funcid = 1 [default = 11100001];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &funcid_)));
          set_has_funcid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_fund_account;
        break;
      }
      
      // required string fund_account = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fund_account:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fund_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->fund_account().data(), this->fund_account().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StockLoginResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 funcid = 1 [default = 11100001];
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->funcid(), output);
  }
  
  // required string fund_account = 2;
  if (has_fund_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fund_account().data(), this->fund_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->fund_account(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StockLoginResp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 funcid = 1 [default = 11100001];
  if (has_funcid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->funcid(), target);
  }
  
  // required string fund_account = 2;
  if (has_fund_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fund_account().data(), this->fund_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->fund_account(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StockLoginResp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 funcid = 1 [default = 11100001];
    if (has_funcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->funcid());
    }
    
    // required string fund_account = 2;
    if (has_fund_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fund_account());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StockLoginResp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StockLoginResp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StockLoginResp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StockLoginResp::MergeFrom(const StockLoginResp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_funcid()) {
      set_funcid(from.funcid());
    }
    if (from.has_fund_account()) {
      set_fund_account(from.fund_account());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StockLoginResp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StockLoginResp::CopyFrom(const StockLoginResp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StockLoginResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  
  return true;
}

void StockLoginResp::Swap(StockLoginResp* other) {
  if (other != this) {
    std::swap(funcid_, other->funcid_);
    std::swap(fund_account_, other->fund_account_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StockLoginResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StockLoginResp_descriptor_;
  metadata.reflection = StockLoginResp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ACCOUNT_INFO::kAccAvaFieldNumber;
const int ACCOUNT_INFO::kAccPrelockFieldNumber;
const int ACCOUNT_INFO::kAccLockFieldNumber;
#endif  // !_MSC_VER

ACCOUNT_INFO::ACCOUNT_INFO()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ACCOUNT_INFO::InitAsDefaultInstance() {
}

ACCOUNT_INFO::ACCOUNT_INFO(const ACCOUNT_INFO& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ACCOUNT_INFO::SharedCtor() {
  _cached_size_ = 0;
  acc_ava_ = 0;
  acc_prelock_ = 0;
  acc_lock_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ACCOUNT_INFO::~ACCOUNT_INFO() {
  SharedDtor();
}

void ACCOUNT_INFO::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ACCOUNT_INFO::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ACCOUNT_INFO::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ACCOUNT_INFO_descriptor_;
}

const ACCOUNT_INFO& ACCOUNT_INFO::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

ACCOUNT_INFO* ACCOUNT_INFO::default_instance_ = NULL;

ACCOUNT_INFO* ACCOUNT_INFO::New() const {
  return new ACCOUNT_INFO;
}

void ACCOUNT_INFO::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    acc_ava_ = 0;
    acc_prelock_ = 0;
    acc_lock_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ACCOUNT_INFO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double acc_ava = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &acc_ava_)));
          set_has_acc_ava();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(17)) goto parse_acc_prelock;
        break;
      }
      
      // optional double acc_prelock = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_acc_prelock:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &acc_prelock_)));
          set_has_acc_prelock();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(25)) goto parse_acc_lock;
        break;
      }
      
      // optional double acc_lock = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_acc_lock:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &acc_lock_)));
          set_has_acc_lock();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ACCOUNT_INFO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional double acc_ava = 1;
  if (has_acc_ava()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->acc_ava(), output);
  }
  
  // optional double acc_prelock = 2;
  if (has_acc_prelock()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->acc_prelock(), output);
  }
  
  // optional double acc_lock = 3;
  if (has_acc_lock()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->acc_lock(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ACCOUNT_INFO::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional double acc_ava = 1;
  if (has_acc_ava()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->acc_ava(), target);
  }
  
  // optional double acc_prelock = 2;
  if (has_acc_prelock()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->acc_prelock(), target);
  }
  
  // optional double acc_lock = 3;
  if (has_acc_lock()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->acc_lock(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ACCOUNT_INFO::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional double acc_ava = 1;
    if (has_acc_ava()) {
      total_size += 1 + 8;
    }
    
    // optional double acc_prelock = 2;
    if (has_acc_prelock()) {
      total_size += 1 + 8;
    }
    
    // optional double acc_lock = 3;
    if (has_acc_lock()) {
      total_size += 1 + 8;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ACCOUNT_INFO::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ACCOUNT_INFO* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ACCOUNT_INFO*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ACCOUNT_INFO::MergeFrom(const ACCOUNT_INFO& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_acc_ava()) {
      set_acc_ava(from.acc_ava());
    }
    if (from.has_acc_prelock()) {
      set_acc_prelock(from.acc_prelock());
    }
    if (from.has_acc_lock()) {
      set_acc_lock(from.acc_lock());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ACCOUNT_INFO::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ACCOUNT_INFO::CopyFrom(const ACCOUNT_INFO& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ACCOUNT_INFO::IsInitialized() const {
  
  return true;
}

void ACCOUNT_INFO::Swap(ACCOUNT_INFO* other) {
  if (other != this) {
    std::swap(acc_ava_, other->acc_ava_);
    std::swap(acc_prelock_, other->acc_prelock_);
    std::swap(acc_lock_, other->acc_lock_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ACCOUNT_INFO::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ACCOUNT_INFO_descriptor_;
  metadata.reflection = ACCOUNT_INFO_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int STOCK_INFO::kStkCodeFieldNumber;
const int STOCK_INFO::kStkAvaFieldNumber;
const int STOCK_INFO::kStkPrelockFieldNumber;
const int STOCK_INFO::kStkLockFieldNumber;
#endif  // !_MSC_VER

STOCK_INFO::STOCK_INFO()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void STOCK_INFO::InitAsDefaultInstance() {
}

STOCK_INFO::STOCK_INFO(const STOCK_INFO& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void STOCK_INFO::SharedCtor() {
  _cached_size_ = 0;
  stk_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stk_ava_ = GOOGLE_LONGLONG(0);
  stk_prelock_ = GOOGLE_LONGLONG(0);
  stk_lock_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

STOCK_INFO::~STOCK_INFO() {
  SharedDtor();
}

void STOCK_INFO::SharedDtor() {
  if (stk_code_ != &::google::protobuf::internal::kEmptyString) {
    delete stk_code_;
  }
  if (this != default_instance_) {
  }
}

void STOCK_INFO::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* STOCK_INFO::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return STOCK_INFO_descriptor_;
}

const STOCK_INFO& STOCK_INFO::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

STOCK_INFO* STOCK_INFO::default_instance_ = NULL;

STOCK_INFO* STOCK_INFO::New() const {
  return new STOCK_INFO;
}

void STOCK_INFO::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_stk_code()) {
      if (stk_code_ != &::google::protobuf::internal::kEmptyString) {
        stk_code_->clear();
      }
    }
    stk_ava_ = GOOGLE_LONGLONG(0);
    stk_prelock_ = GOOGLE_LONGLONG(0);
    stk_lock_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool STOCK_INFO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string stk_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stk_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stk_code().data(), this->stk_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_stk_ava;
        break;
      }
      
      // optional int64 stk_ava = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stk_ava:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &stk_ava_)));
          set_has_stk_ava();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_stk_prelock;
        break;
      }
      
      // optional int64 stk_prelock = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stk_prelock:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &stk_prelock_)));
          set_has_stk_prelock();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_stk_lock;
        break;
      }
      
      // optional int64 stk_lock = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stk_lock:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &stk_lock_)));
          set_has_stk_lock();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void STOCK_INFO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string stk_code = 1;
  if (has_stk_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stk_code().data(), this->stk_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->stk_code(), output);
  }
  
  // optional int64 stk_ava = 2;
  if (has_stk_ava()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->stk_ava(), output);
  }
  
  // optional int64 stk_prelock = 3;
  if (has_stk_prelock()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->stk_prelock(), output);
  }
  
  // optional int64 stk_lock = 4;
  if (has_stk_lock()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->stk_lock(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* STOCK_INFO::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string stk_code = 1;
  if (has_stk_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stk_code().data(), this->stk_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->stk_code(), target);
  }
  
  // optional int64 stk_ava = 2;
  if (has_stk_ava()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->stk_ava(), target);
  }
  
  // optional int64 stk_prelock = 3;
  if (has_stk_prelock()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->stk_prelock(), target);
  }
  
  // optional int64 stk_lock = 4;
  if (has_stk_lock()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->stk_lock(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int STOCK_INFO::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string stk_code = 1;
    if (has_stk_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stk_code());
    }
    
    // optional int64 stk_ava = 2;
    if (has_stk_ava()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->stk_ava());
    }
    
    // optional int64 stk_prelock = 3;
    if (has_stk_prelock()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->stk_prelock());
    }
    
    // optional int64 stk_lock = 4;
    if (has_stk_lock()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->stk_lock());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void STOCK_INFO::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const STOCK_INFO* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const STOCK_INFO*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void STOCK_INFO::MergeFrom(const STOCK_INFO& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stk_code()) {
      set_stk_code(from.stk_code());
    }
    if (from.has_stk_ava()) {
      set_stk_ava(from.stk_ava());
    }
    if (from.has_stk_prelock()) {
      set_stk_prelock(from.stk_prelock());
    }
    if (from.has_stk_lock()) {
      set_stk_lock(from.stk_lock());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void STOCK_INFO::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void STOCK_INFO::CopyFrom(const STOCK_INFO& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STOCK_INFO::IsInitialized() const {
  
  return true;
}

void STOCK_INFO::Swap(STOCK_INFO* other) {
  if (other != this) {
    std::swap(stk_code_, other->stk_code_);
    std::swap(stk_ava_, other->stk_ava_);
    std::swap(stk_prelock_, other->stk_prelock_);
    std::swap(stk_lock_, other->stk_lock_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata STOCK_INFO::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = STOCK_INFO_descriptor_;
  metadata.reflection = STOCK_INFO_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ETF_INFO::kEtfCodeFieldNumber;
const int ETF_INFO::kEtfAvaFieldNumber;
const int ETF_INFO::kEtfPrelockFieldNumber;
const int ETF_INFO::kEtfLockFieldNumber;
#endif  // !_MSC_VER

ETF_INFO::ETF_INFO()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ETF_INFO::InitAsDefaultInstance() {
}

ETF_INFO::ETF_INFO(const ETF_INFO& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ETF_INFO::SharedCtor() {
  _cached_size_ = 0;
  etf_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  etf_ava_ = GOOGLE_LONGLONG(0);
  etf_prelock_ = GOOGLE_LONGLONG(0);
  etf_lock_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ETF_INFO::~ETF_INFO() {
  SharedDtor();
}

void ETF_INFO::SharedDtor() {
  if (etf_code_ != &::google::protobuf::internal::kEmptyString) {
    delete etf_code_;
  }
  if (this != default_instance_) {
  }
}

void ETF_INFO::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ETF_INFO::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ETF_INFO_descriptor_;
}

const ETF_INFO& ETF_INFO::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

ETF_INFO* ETF_INFO::default_instance_ = NULL;

ETF_INFO* ETF_INFO::New() const {
  return new ETF_INFO;
}

void ETF_INFO::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_etf_code()) {
      if (etf_code_ != &::google::protobuf::internal::kEmptyString) {
        etf_code_->clear();
      }
    }
    etf_ava_ = GOOGLE_LONGLONG(0);
    etf_prelock_ = GOOGLE_LONGLONG(0);
    etf_lock_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ETF_INFO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string etf_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etf_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->etf_code().data(), this->etf_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_etf_ava;
        break;
      }
      
      // optional int64 etf_ava = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_etf_ava:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &etf_ava_)));
          set_has_etf_ava();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_etf_prelock;
        break;
      }
      
      // optional int64 etf_prelock = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_etf_prelock:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &etf_prelock_)));
          set_has_etf_prelock();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_etf_lock;
        break;
      }
      
      // optional int64 etf_lock = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_etf_lock:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &etf_lock_)));
          set_has_etf_lock();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ETF_INFO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string etf_code = 1;
  if (has_etf_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etf_code().data(), this->etf_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->etf_code(), output);
  }
  
  // optional int64 etf_ava = 2;
  if (has_etf_ava()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->etf_ava(), output);
  }
  
  // optional int64 etf_prelock = 3;
  if (has_etf_prelock()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->etf_prelock(), output);
  }
  
  // optional int64 etf_lock = 4;
  if (has_etf_lock()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->etf_lock(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ETF_INFO::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string etf_code = 1;
  if (has_etf_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etf_code().data(), this->etf_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->etf_code(), target);
  }
  
  // optional int64 etf_ava = 2;
  if (has_etf_ava()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->etf_ava(), target);
  }
  
  // optional int64 etf_prelock = 3;
  if (has_etf_prelock()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->etf_prelock(), target);
  }
  
  // optional int64 etf_lock = 4;
  if (has_etf_lock()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->etf_lock(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ETF_INFO::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string etf_code = 1;
    if (has_etf_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->etf_code());
    }
    
    // optional int64 etf_ava = 2;
    if (has_etf_ava()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->etf_ava());
    }
    
    // optional int64 etf_prelock = 3;
    if (has_etf_prelock()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->etf_prelock());
    }
    
    // optional int64 etf_lock = 4;
    if (has_etf_lock()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->etf_lock());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ETF_INFO::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ETF_INFO* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ETF_INFO*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ETF_INFO::MergeFrom(const ETF_INFO& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_etf_code()) {
      set_etf_code(from.etf_code());
    }
    if (from.has_etf_ava()) {
      set_etf_ava(from.etf_ava());
    }
    if (from.has_etf_prelock()) {
      set_etf_prelock(from.etf_prelock());
    }
    if (from.has_etf_lock()) {
      set_etf_lock(from.etf_lock());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ETF_INFO::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ETF_INFO::CopyFrom(const ETF_INFO& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ETF_INFO::IsInitialized() const {
  
  return true;
}

void ETF_INFO::Swap(ETF_INFO* other) {
  if (other != this) {
    std::swap(etf_code_, other->etf_code_);
    std::swap(etf_ava_, other->etf_ava_);
    std::swap(etf_prelock_, other->etf_prelock_);
    std::swap(etf_lock_, other->etf_lock_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ETF_INFO::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ETF_INFO_descriptor_;
  metadata.reflection = ETF_INFO_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LOGIN_REQ::kFuncidFieldNumber;
const int LOGIN_REQ::kPasswordFieldNumber;
#endif  // !_MSC_VER

LOGIN_REQ::LOGIN_REQ()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LOGIN_REQ::InitAsDefaultInstance() {
}

LOGIN_REQ::LOGIN_REQ(const LOGIN_REQ& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LOGIN_REQ::SharedCtor() {
  _cached_size_ = 0;
  funcid_ = 13000001;
  password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LOGIN_REQ::~LOGIN_REQ() {
  SharedDtor();
}

void LOGIN_REQ::SharedDtor() {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    delete password_;
  }
  if (this != default_instance_) {
  }
}

void LOGIN_REQ::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LOGIN_REQ::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LOGIN_REQ_descriptor_;
}

const LOGIN_REQ& LOGIN_REQ::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

LOGIN_REQ* LOGIN_REQ::default_instance_ = NULL;

LOGIN_REQ* LOGIN_REQ::New() const {
  return new LOGIN_REQ;
}

void LOGIN_REQ::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    funcid_ = 13000001;
    if (has_password()) {
      if (password_ != &::google::protobuf::internal::kEmptyString) {
        password_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LOGIN_REQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 funcid = 1 [default = 13000001];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &funcid_)));
          set_has_funcid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }
      
      // optional string password = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LOGIN_REQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 funcid = 1 [default = 13000001];
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->funcid(), output);
  }
  
  // optional string password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->password(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LOGIN_REQ::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 funcid = 1 [default = 13000001];
  if (has_funcid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->funcid(), target);
  }
  
  // optional string password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LOGIN_REQ::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 funcid = 1 [default = 13000001];
    if (has_funcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->funcid());
    }
    
    // optional string password = 2;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LOGIN_REQ::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LOGIN_REQ* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LOGIN_REQ*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LOGIN_REQ::MergeFrom(const LOGIN_REQ& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_funcid()) {
      set_funcid(from.funcid());
    }
    if (from.has_password()) {
      set_password(from.password());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LOGIN_REQ::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LOGIN_REQ::CopyFrom(const LOGIN_REQ& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LOGIN_REQ::IsInitialized() const {
  
  return true;
}

void LOGIN_REQ::Swap(LOGIN_REQ* other) {
  if (other != this) {
    std::swap(funcid_, other->funcid_);
    std::swap(password_, other->password_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LOGIN_REQ::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LOGIN_REQ_descriptor_;
  metadata.reflection = LOGIN_REQ_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LOGIN_ACK::kFuncidFieldNumber;
const int LOGIN_ACK::kFundAccountFieldNumber;
const int LOGIN_ACK::kSesstionIdFieldNumber;
#endif  // !_MSC_VER

LOGIN_ACK::LOGIN_ACK()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LOGIN_ACK::InitAsDefaultInstance() {
}

LOGIN_ACK::LOGIN_ACK(const LOGIN_ACK& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LOGIN_ACK::SharedCtor() {
  _cached_size_ = 0;
  funcid_ = 13100001;
  fund_account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sesstion_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LOGIN_ACK::~LOGIN_ACK() {
  SharedDtor();
}

void LOGIN_ACK::SharedDtor() {
  if (fund_account_ != &::google::protobuf::internal::kEmptyString) {
    delete fund_account_;
  }
  if (sesstion_id_ != &::google::protobuf::internal::kEmptyString) {
    delete sesstion_id_;
  }
  if (this != default_instance_) {
  }
}

void LOGIN_ACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LOGIN_ACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LOGIN_ACK_descriptor_;
}

const LOGIN_ACK& LOGIN_ACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

LOGIN_ACK* LOGIN_ACK::default_instance_ = NULL;

LOGIN_ACK* LOGIN_ACK::New() const {
  return new LOGIN_ACK;
}

void LOGIN_ACK::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    funcid_ = 13100001;
    if (has_fund_account()) {
      if (fund_account_ != &::google::protobuf::internal::kEmptyString) {
        fund_account_->clear();
      }
    }
    if (has_sesstion_id()) {
      if (sesstion_id_ != &::google::protobuf::internal::kEmptyString) {
        sesstion_id_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LOGIN_ACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 funcid = 1 [default = 13100001];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &funcid_)));
          set_has_funcid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_fund_account;
        break;
      }
      
      // required string fund_account = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fund_account:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fund_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->fund_account().data(), this->fund_account().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_sesstion_id;
        break;
      }
      
      // optional string sesstion_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sesstion_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sesstion_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sesstion_id().data(), this->sesstion_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LOGIN_ACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 funcid = 1 [default = 13100001];
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->funcid(), output);
  }
  
  // required string fund_account = 2;
  if (has_fund_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fund_account().data(), this->fund_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->fund_account(), output);
  }
  
  // optional string sesstion_id = 3;
  if (has_sesstion_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sesstion_id().data(), this->sesstion_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->sesstion_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LOGIN_ACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 funcid = 1 [default = 13100001];
  if (has_funcid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->funcid(), target);
  }
  
  // required string fund_account = 2;
  if (has_fund_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fund_account().data(), this->fund_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->fund_account(), target);
  }
  
  // optional string sesstion_id = 3;
  if (has_sesstion_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sesstion_id().data(), this->sesstion_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sesstion_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LOGIN_ACK::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 funcid = 1 [default = 13100001];
    if (has_funcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->funcid());
    }
    
    // required string fund_account = 2;
    if (has_fund_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fund_account());
    }
    
    // optional string sesstion_id = 3;
    if (has_sesstion_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sesstion_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LOGIN_ACK::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LOGIN_ACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LOGIN_ACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LOGIN_ACK::MergeFrom(const LOGIN_ACK& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_funcid()) {
      set_funcid(from.funcid());
    }
    if (from.has_fund_account()) {
      set_fund_account(from.fund_account());
    }
    if (from.has_sesstion_id()) {
      set_sesstion_id(from.sesstion_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LOGIN_ACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LOGIN_ACK::CopyFrom(const LOGIN_ACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LOGIN_ACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  
  return true;
}

void LOGIN_ACK::Swap(LOGIN_ACK* other) {
  if (other != this) {
    std::swap(funcid_, other->funcid_);
    std::swap(fund_account_, other->fund_account_);
    std::swap(sesstion_id_, other->sesstion_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LOGIN_ACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LOGIN_ACK_descriptor_;
  metadata.reflection = LOGIN_ACK_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_Account::kAccountIdFieldNumber;
const int INF_Account::kQueryUpdateFlgFieldNumber;
const int INF_Account::kAccFieldNumber;
const int INF_Account::kStkFieldNumber;
const int INF_Account::kEtfFieldNumber;
const int INF_Account::kLoginAckFieldNumber;
const int INF_Account::kLoginReqFieldNumber;
#endif  // !_MSC_VER

INF_Account::INF_Account()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_Account::InitAsDefaultInstance() {
  acc_ = const_cast< ::ACCOUNT_INFO*>(&::ACCOUNT_INFO::default_instance());
  stk_ = const_cast< ::STOCK_INFO*>(&::STOCK_INFO::default_instance());
  etf_ = const_cast< ::ETF_INFO*>(&::ETF_INFO::default_instance());
  login_ack_ = const_cast< ::LOGIN_ACK*>(&::LOGIN_ACK::default_instance());
  login_req_ = const_cast< ::LOGIN_REQ*>(&::LOGIN_REQ::default_instance());
}

INF_Account::INF_Account(const INF_Account& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_Account::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  query_update_flg_ = 0;
  acc_ = NULL;
  stk_ = NULL;
  etf_ = NULL;
  login_ack_ = NULL;
  login_req_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_Account::~INF_Account() {
  SharedDtor();
}

void INF_Account::SharedDtor() {
  if (account_id_ != &::google::protobuf::internal::kEmptyString) {
    delete account_id_;
  }
  if (this != default_instance_) {
    delete acc_;
    delete stk_;
    delete etf_;
    delete login_ack_;
    delete login_req_;
  }
}

void INF_Account::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_Account::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_Account_descriptor_;
}

const INF_Account& INF_Account::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_Account* INF_Account::default_instance_ = NULL;

INF_Account* INF_Account::New() const {
  return new INF_Account;
}

void INF_Account::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_account_id()) {
      if (account_id_ != &::google::protobuf::internal::kEmptyString) {
        account_id_->clear();
      }
    }
    query_update_flg_ = 0;
    if (has_acc()) {
      if (acc_ != NULL) acc_->::ACCOUNT_INFO::Clear();
    }
    if (has_stk()) {
      if (stk_ != NULL) stk_->::STOCK_INFO::Clear();
    }
    if (has_etf()) {
      if (etf_ != NULL) etf_->::ETF_INFO::Clear();
    }
    if (has_login_ack()) {
      if (login_ack_ != NULL) login_ack_->::LOGIN_ACK::Clear();
    }
    if (has_login_req()) {
      if (login_req_ != NULL) login_req_->::LOGIN_REQ::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_Account::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->account_id().data(), this->account_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_query_update_flg;
        break;
      }
      
      // optional int32 query_update_flg = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_query_update_flg:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &query_update_flg_)));
          set_has_query_update_flg();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_acc;
        break;
      }
      
      // optional .ACCOUNT_INFO acc = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_acc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_acc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_stk;
        break;
      }
      
      // optional .STOCK_INFO stk = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stk:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stk()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_etf;
        break;
      }
      
      // optional .ETF_INFO etf = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_etf:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_etf()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_login_ack;
        break;
      }
      
      // optional .LOGIN_ACK login_ack = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_login_ack:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_login_ack()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_login_req;
        break;
      }
      
      // optional .LOGIN_REQ login_req = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_login_req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_login_req()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_Account::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->account_id().data(), this->account_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->account_id(), output);
  }
  
  // optional int32 query_update_flg = 2;
  if (has_query_update_flg()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->query_update_flg(), output);
  }
  
  // optional .ACCOUNT_INFO acc = 3;
  if (has_acc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->acc(), output);
  }
  
  // optional .STOCK_INFO stk = 4;
  if (has_stk()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->stk(), output);
  }
  
  // optional .ETF_INFO etf = 5;
  if (has_etf()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->etf(), output);
  }
  
  // optional .LOGIN_ACK login_ack = 6;
  if (has_login_ack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->login_ack(), output);
  }
  
  // optional .LOGIN_REQ login_req = 7;
  if (has_login_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->login_req(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_Account::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string account_id = 1;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->account_id().data(), this->account_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_id(), target);
  }
  
  // optional int32 query_update_flg = 2;
  if (has_query_update_flg()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->query_update_flg(), target);
  }
  
  // optional .ACCOUNT_INFO acc = 3;
  if (has_acc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->acc(), target);
  }
  
  // optional .STOCK_INFO stk = 4;
  if (has_stk()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->stk(), target);
  }
  
  // optional .ETF_INFO etf = 5;
  if (has_etf()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->etf(), target);
  }
  
  // optional .LOGIN_ACK login_ack = 6;
  if (has_login_ack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->login_ack(), target);
  }
  
  // optional .LOGIN_REQ login_req = 7;
  if (has_login_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->login_req(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_Account::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_id());
    }
    
    // optional int32 query_update_flg = 2;
    if (has_query_update_flg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->query_update_flg());
    }
    
    // optional .ACCOUNT_INFO acc = 3;
    if (has_acc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->acc());
    }
    
    // optional .STOCK_INFO stk = 4;
    if (has_stk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stk());
    }
    
    // optional .ETF_INFO etf = 5;
    if (has_etf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->etf());
    }
    
    // optional .LOGIN_ACK login_ack = 6;
    if (has_login_ack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->login_ack());
    }
    
    // optional .LOGIN_REQ login_req = 7;
    if (has_login_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->login_req());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_Account::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_Account* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_Account*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_Account::MergeFrom(const INF_Account& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account_id()) {
      set_account_id(from.account_id());
    }
    if (from.has_query_update_flg()) {
      set_query_update_flg(from.query_update_flg());
    }
    if (from.has_acc()) {
      mutable_acc()->::ACCOUNT_INFO::MergeFrom(from.acc());
    }
    if (from.has_stk()) {
      mutable_stk()->::STOCK_INFO::MergeFrom(from.stk());
    }
    if (from.has_etf()) {
      mutable_etf()->::ETF_INFO::MergeFrom(from.etf());
    }
    if (from.has_login_ack()) {
      mutable_login_ack()->::LOGIN_ACK::MergeFrom(from.login_ack());
    }
    if (from.has_login_req()) {
      mutable_login_req()->::LOGIN_REQ::MergeFrom(from.login_req());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_Account::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_Account::CopyFrom(const INF_Account& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_Account::IsInitialized() const {
  
  if (has_login_ack()) {
    if (!this->login_ack().IsInitialized()) return false;
  }
  return true;
}

void INF_Account::Swap(INF_Account* other) {
  if (other != this) {
    std::swap(account_id_, other->account_id_);
    std::swap(query_update_flg_, other->query_update_flg_);
    std::swap(acc_, other->acc_);
    std::swap(stk_, other->stk_);
    std::swap(etf_, other->etf_);
    std::swap(login_ack_, other->login_ack_);
    std::swap(login_req_, other->login_req_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_Account::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_Account_descriptor_;
  metadata.reflection = INF_Account_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int INF_ETF_Message::kEtfReqFieldNumber;
const int INF_ETF_Message::kEtfAckFieldNumber;
#endif  // !_MSC_VER

INF_ETF_Message::INF_ETF_Message()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void INF_ETF_Message::InitAsDefaultInstance() {
  etf_req_ = const_cast< ::ETF_Message_req*>(&::ETF_Message_req::default_instance());
  etf_ack_ = const_cast< ::ETF_Message_ack*>(&::ETF_Message_ack::default_instance());
}

INF_ETF_Message::INF_ETF_Message(const INF_ETF_Message& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void INF_ETF_Message::SharedCtor() {
  _cached_size_ = 0;
  etf_req_ = NULL;
  etf_ack_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

INF_ETF_Message::~INF_ETF_Message() {
  SharedDtor();
}

void INF_ETF_Message::SharedDtor() {
  if (this != default_instance_) {
    delete etf_req_;
    delete etf_ack_;
  }
}

void INF_ETF_Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* INF_ETF_Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return INF_ETF_Message_descriptor_;
}

const INF_ETF_Message& INF_ETF_Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

INF_ETF_Message* INF_ETF_Message::default_instance_ = NULL;

INF_ETF_Message* INF_ETF_Message::New() const {
  return new INF_ETF_Message;
}

void INF_ETF_Message::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_etf_req()) {
      if (etf_req_ != NULL) etf_req_->::ETF_Message_req::Clear();
    }
    if (has_etf_ack()) {
      if (etf_ack_ != NULL) etf_ack_->::ETF_Message_ack::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool INF_ETF_Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ETF_Message_req Etf_req = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_etf_req()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Etf_ack;
        break;
      }
      
      // optional .ETF_Message_ack Etf_ack = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Etf_ack:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_etf_ack()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void INF_ETF_Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ETF_Message_req Etf_req = 1;
  if (has_etf_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->etf_req(), output);
  }
  
  // optional .ETF_Message_ack Etf_ack = 2;
  if (has_etf_ack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->etf_ack(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* INF_ETF_Message::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ETF_Message_req Etf_req = 1;
  if (has_etf_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->etf_req(), target);
  }
  
  // optional .ETF_Message_ack Etf_ack = 2;
  if (has_etf_ack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->etf_ack(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int INF_ETF_Message::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ETF_Message_req Etf_req = 1;
    if (has_etf_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->etf_req());
    }
    
    // optional .ETF_Message_ack Etf_ack = 2;
    if (has_etf_ack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->etf_ack());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void INF_ETF_Message::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const INF_ETF_Message* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const INF_ETF_Message*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void INF_ETF_Message::MergeFrom(const INF_ETF_Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_etf_req()) {
      mutable_etf_req()->::ETF_Message_req::MergeFrom(from.etf_req());
    }
    if (from.has_etf_ack()) {
      mutable_etf_ack()->::ETF_Message_ack::MergeFrom(from.etf_ack());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void INF_ETF_Message::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INF_ETF_Message::CopyFrom(const INF_ETF_Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INF_ETF_Message::IsInitialized() const {
  
  return true;
}

void INF_ETF_Message::Swap(INF_ETF_Message* other) {
  if (other != this) {
    std::swap(etf_req_, other->etf_req_);
    std::swap(etf_ack_, other->etf_ack_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata INF_ETF_Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = INF_ETF_Message_descriptor_;
  metadata.reflection = INF_ETF_Message_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ETF_Message_req::kETFWTNOFieldNumber;
#endif  // !_MSC_VER

ETF_Message_req::ETF_Message_req()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ETF_Message_req::InitAsDefaultInstance() {
}

ETF_Message_req::ETF_Message_req(const ETF_Message_req& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ETF_Message_req::SharedCtor() {
  _cached_size_ = 0;
  etf_wt_no_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ETF_Message_req::~ETF_Message_req() {
  SharedDtor();
}

void ETF_Message_req::SharedDtor() {
  if (etf_wt_no_ != &::google::protobuf::internal::kEmptyString) {
    delete etf_wt_no_;
  }
  if (this != default_instance_) {
  }
}

void ETF_Message_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ETF_Message_req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ETF_Message_req_descriptor_;
}

const ETF_Message_req& ETF_Message_req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

ETF_Message_req* ETF_Message_req::default_instance_ = NULL;

ETF_Message_req* ETF_Message_req::New() const {
  return new ETF_Message_req;
}

void ETF_Message_req::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_etf_wt_no()) {
      if (etf_wt_no_ != &::google::protobuf::internal::kEmptyString) {
        etf_wt_no_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ETF_Message_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ETF_WT_NO = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etf_wt_no()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->etf_wt_no().data(), this->etf_wt_no().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ETF_Message_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string ETF_WT_NO = 1;
  if (has_etf_wt_no()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etf_wt_no().data(), this->etf_wt_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->etf_wt_no(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ETF_Message_req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string ETF_WT_NO = 1;
  if (has_etf_wt_no()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etf_wt_no().data(), this->etf_wt_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->etf_wt_no(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ETF_Message_req::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string ETF_WT_NO = 1;
    if (has_etf_wt_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->etf_wt_no());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ETF_Message_req::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ETF_Message_req* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ETF_Message_req*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ETF_Message_req::MergeFrom(const ETF_Message_req& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_etf_wt_no()) {
      set_etf_wt_no(from.etf_wt_no());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ETF_Message_req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ETF_Message_req::CopyFrom(const ETF_Message_req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ETF_Message_req::IsInitialized() const {
  
  return true;
}

void ETF_Message_req::Swap(ETF_Message_req* other) {
  if (other != this) {
    std::swap(etf_wt_no_, other->etf_wt_no_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ETF_Message_req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ETF_Message_req_descriptor_;
  metadata.reflection = ETF_Message_req_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ETF_Message_ack::kValidFieldNumber;
const int ETF_Message_ack::kETFCodeFieldNumber;
const int ETF_Message_ack::kETFNameFieldNumber;
const int ETF_Message_ack::kETFWTNumFieldNumber;
const int ETF_Message_ack::kETFWTPriceFieldNumber;
const int ETF_Message_ack::kETFWTSerialFieldNumber;
const int ETF_Message_ack::kETFCJNumFieldNumber;
const int ETF_Message_ack::kETFWTTimeFieldNumber;
const int ETF_Message_ack::kMarketIDFieldNumber;
const int ETF_Message_ack::kBSflagFieldNumber;
const int ETF_Message_ack::kETFWTStatusFieldNumber;
const int ETF_Message_ack::kCjPriceSumFieldNumber;
#endif  // !_MSC_VER

ETF_Message_ack::ETF_Message_ack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ETF_Message_ack::InitAsDefaultInstance() {
}

ETF_Message_ack::ETF_Message_ack(const ETF_Message_ack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ETF_Message_ack::SharedCtor() {
  _cached_size_ = 0;
  valid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  etfcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  etfname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  etf_wt_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  etf_wt_price_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  etf_wt_serial_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  etf_cj_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  etf_wt_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  marketid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bsflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  etf_wt_status_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cjpricesum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ETF_Message_ack::~ETF_Message_ack() {
  SharedDtor();
}

void ETF_Message_ack::SharedDtor() {
  if (valid_ != &::google::protobuf::internal::kEmptyString) {
    delete valid_;
  }
  if (etfcode_ != &::google::protobuf::internal::kEmptyString) {
    delete etfcode_;
  }
  if (etfname_ != &::google::protobuf::internal::kEmptyString) {
    delete etfname_;
  }
  if (etf_wt_num_ != &::google::protobuf::internal::kEmptyString) {
    delete etf_wt_num_;
  }
  if (etf_wt_price_ != &::google::protobuf::internal::kEmptyString) {
    delete etf_wt_price_;
  }
  if (etf_wt_serial_ != &::google::protobuf::internal::kEmptyString) {
    delete etf_wt_serial_;
  }
  if (etf_cj_num_ != &::google::protobuf::internal::kEmptyString) {
    delete etf_cj_num_;
  }
  if (etf_wt_time_ != &::google::protobuf::internal::kEmptyString) {
    delete etf_wt_time_;
  }
  if (marketid_ != &::google::protobuf::internal::kEmptyString) {
    delete marketid_;
  }
  if (bsflag_ != &::google::protobuf::internal::kEmptyString) {
    delete bsflag_;
  }
  if (etf_wt_status_ != &::google::protobuf::internal::kEmptyString) {
    delete etf_wt_status_;
  }
  if (cjpricesum_ != &::google::protobuf::internal::kEmptyString) {
    delete cjpricesum_;
  }
  if (this != default_instance_) {
  }
}

void ETF_Message_ack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ETF_Message_ack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ETF_Message_ack_descriptor_;
}

const ETF_Message_ack& ETF_Message_ack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

ETF_Message_ack* ETF_Message_ack::default_instance_ = NULL;

ETF_Message_ack* ETF_Message_ack::New() const {
  return new ETF_Message_ack;
}

void ETF_Message_ack::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_valid()) {
      if (valid_ != &::google::protobuf::internal::kEmptyString) {
        valid_->clear();
      }
    }
    if (has_etfcode()) {
      if (etfcode_ != &::google::protobuf::internal::kEmptyString) {
        etfcode_->clear();
      }
    }
    if (has_etfname()) {
      if (etfname_ != &::google::protobuf::internal::kEmptyString) {
        etfname_->clear();
      }
    }
    if (has_etf_wt_num()) {
      if (etf_wt_num_ != &::google::protobuf::internal::kEmptyString) {
        etf_wt_num_->clear();
      }
    }
    if (has_etf_wt_price()) {
      if (etf_wt_price_ != &::google::protobuf::internal::kEmptyString) {
        etf_wt_price_->clear();
      }
    }
    if (has_etf_wt_serial()) {
      if (etf_wt_serial_ != &::google::protobuf::internal::kEmptyString) {
        etf_wt_serial_->clear();
      }
    }
    if (has_etf_cj_num()) {
      if (etf_cj_num_ != &::google::protobuf::internal::kEmptyString) {
        etf_cj_num_->clear();
      }
    }
    if (has_etf_wt_time()) {
      if (etf_wt_time_ != &::google::protobuf::internal::kEmptyString) {
        etf_wt_time_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_marketid()) {
      if (marketid_ != &::google::protobuf::internal::kEmptyString) {
        marketid_->clear();
      }
    }
    if (has_bsflag()) {
      if (bsflag_ != &::google::protobuf::internal::kEmptyString) {
        bsflag_->clear();
      }
    }
    if (has_etf_wt_status()) {
      if (etf_wt_status_ != &::google::protobuf::internal::kEmptyString) {
        etf_wt_status_->clear();
      }
    }
    if (has_cjpricesum()) {
      if (cjpricesum_ != &::google::protobuf::internal::kEmptyString) {
        cjpricesum_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ETF_Message_ack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Valid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_valid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->valid().data(), this->valid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_ETFCode;
        break;
      }
      
      // optional string ETFCode = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ETFCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etfcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->etfcode().data(), this->etfcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_ETFName;
        break;
      }
      
      // optional string ETFName = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ETFName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etfname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->etfname().data(), this->etfname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_ETF_WT_Num;
        break;
      }
      
      // optional string ETF_WT_Num = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ETF_WT_Num:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etf_wt_num()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->etf_wt_num().data(), this->etf_wt_num().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_ETF_WT_Price;
        break;
      }
      
      // optional string ETF_WT_Price = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ETF_WT_Price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etf_wt_price()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->etf_wt_price().data(), this->etf_wt_price().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_ETF_WT_Serial;
        break;
      }
      
      // optional string ETF_WT_Serial = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ETF_WT_Serial:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etf_wt_serial()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->etf_wt_serial().data(), this->etf_wt_serial().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_ETF_CJ_Num;
        break;
      }
      
      // optional string ETF_CJ_Num = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ETF_CJ_Num:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etf_cj_num()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->etf_cj_num().data(), this->etf_cj_num().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_ETF_WT_Time;
        break;
      }
      
      // optional string ETF_WT_Time = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ETF_WT_Time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etf_wt_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->etf_wt_time().data(), this->etf_wt_time().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_MarketID;
        break;
      }
      
      // optional string MarketID = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_MarketID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_marketid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->marketid().data(), this->marketid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_BSflag;
        break;
      }
      
      // optional string BSflag = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_BSflag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bsflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bsflag().data(), this->bsflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_ETF_WT_Status;
        break;
      }
      
      // optional string ETF_WT_Status = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ETF_WT_Status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etf_wt_status()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->etf_wt_status().data(), this->etf_wt_status().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_CjPriceSum;
        break;
      }
      
      // optional string CjPriceSum = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_CjPriceSum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cjpricesum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cjpricesum().data(), this->cjpricesum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ETF_Message_ack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string Valid = 1;
  if (has_valid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valid().data(), this->valid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->valid(), output);
  }
  
  // optional string ETFCode = 2;
  if (has_etfcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etfcode().data(), this->etfcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->etfcode(), output);
  }
  
  // optional string ETFName = 3;
  if (has_etfname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etfname().data(), this->etfname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->etfname(), output);
  }
  
  // optional string ETF_WT_Num = 4;
  if (has_etf_wt_num()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etf_wt_num().data(), this->etf_wt_num().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->etf_wt_num(), output);
  }
  
  // optional string ETF_WT_Price = 5;
  if (has_etf_wt_price()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etf_wt_price().data(), this->etf_wt_price().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->etf_wt_price(), output);
  }
  
  // optional string ETF_WT_Serial = 6;
  if (has_etf_wt_serial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etf_wt_serial().data(), this->etf_wt_serial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->etf_wt_serial(), output);
  }
  
  // optional string ETF_CJ_Num = 7;
  if (has_etf_cj_num()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etf_cj_num().data(), this->etf_cj_num().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->etf_cj_num(), output);
  }
  
  // optional string ETF_WT_Time = 8;
  if (has_etf_wt_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etf_wt_time().data(), this->etf_wt_time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->etf_wt_time(), output);
  }
  
  // optional string MarketID = 9;
  if (has_marketid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketid().data(), this->marketid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->marketid(), output);
  }
  
  // optional string BSflag = 10;
  if (has_bsflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bsflag().data(), this->bsflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->bsflag(), output);
  }
  
  // optional string ETF_WT_Status = 11;
  if (has_etf_wt_status()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etf_wt_status().data(), this->etf_wt_status().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->etf_wt_status(), output);
  }
  
  // optional string CjPriceSum = 12;
  if (has_cjpricesum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjpricesum().data(), this->cjpricesum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->cjpricesum(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ETF_Message_ack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string Valid = 1;
  if (has_valid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valid().data(), this->valid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->valid(), target);
  }
  
  // optional string ETFCode = 2;
  if (has_etfcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etfcode().data(), this->etfcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->etfcode(), target);
  }
  
  // optional string ETFName = 3;
  if (has_etfname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etfname().data(), this->etfname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->etfname(), target);
  }
  
  // optional string ETF_WT_Num = 4;
  if (has_etf_wt_num()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etf_wt_num().data(), this->etf_wt_num().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->etf_wt_num(), target);
  }
  
  // optional string ETF_WT_Price = 5;
  if (has_etf_wt_price()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etf_wt_price().data(), this->etf_wt_price().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->etf_wt_price(), target);
  }
  
  // optional string ETF_WT_Serial = 6;
  if (has_etf_wt_serial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etf_wt_serial().data(), this->etf_wt_serial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->etf_wt_serial(), target);
  }
  
  // optional string ETF_CJ_Num = 7;
  if (has_etf_cj_num()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etf_cj_num().data(), this->etf_cj_num().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->etf_cj_num(), target);
  }
  
  // optional string ETF_WT_Time = 8;
  if (has_etf_wt_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etf_wt_time().data(), this->etf_wt_time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->etf_wt_time(), target);
  }
  
  // optional string MarketID = 9;
  if (has_marketid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->marketid().data(), this->marketid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->marketid(), target);
  }
  
  // optional string BSflag = 10;
  if (has_bsflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bsflag().data(), this->bsflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->bsflag(), target);
  }
  
  // optional string ETF_WT_Status = 11;
  if (has_etf_wt_status()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->etf_wt_status().data(), this->etf_wt_status().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->etf_wt_status(), target);
  }
  
  // optional string CjPriceSum = 12;
  if (has_cjpricesum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cjpricesum().data(), this->cjpricesum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->cjpricesum(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ETF_Message_ack::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string Valid = 1;
    if (has_valid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->valid());
    }
    
    // optional string ETFCode = 2;
    if (has_etfcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->etfcode());
    }
    
    // optional string ETFName = 3;
    if (has_etfname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->etfname());
    }
    
    // optional string ETF_WT_Num = 4;
    if (has_etf_wt_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->etf_wt_num());
    }
    
    // optional string ETF_WT_Price = 5;
    if (has_etf_wt_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->etf_wt_price());
    }
    
    // optional string ETF_WT_Serial = 6;
    if (has_etf_wt_serial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->etf_wt_serial());
    }
    
    // optional string ETF_CJ_Num = 7;
    if (has_etf_cj_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->etf_cj_num());
    }
    
    // optional string ETF_WT_Time = 8;
    if (has_etf_wt_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->etf_wt_time());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string MarketID = 9;
    if (has_marketid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->marketid());
    }
    
    // optional string BSflag = 10;
    if (has_bsflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bsflag());
    }
    
    // optional string ETF_WT_Status = 11;
    if (has_etf_wt_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->etf_wt_status());
    }
    
    // optional string CjPriceSum = 12;
    if (has_cjpricesum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cjpricesum());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ETF_Message_ack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ETF_Message_ack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ETF_Message_ack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ETF_Message_ack::MergeFrom(const ETF_Message_ack& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_valid()) {
      set_valid(from.valid());
    }
    if (from.has_etfcode()) {
      set_etfcode(from.etfcode());
    }
    if (from.has_etfname()) {
      set_etfname(from.etfname());
    }
    if (from.has_etf_wt_num()) {
      set_etf_wt_num(from.etf_wt_num());
    }
    if (from.has_etf_wt_price()) {
      set_etf_wt_price(from.etf_wt_price());
    }
    if (from.has_etf_wt_serial()) {
      set_etf_wt_serial(from.etf_wt_serial());
    }
    if (from.has_etf_cj_num()) {
      set_etf_cj_num(from.etf_cj_num());
    }
    if (from.has_etf_wt_time()) {
      set_etf_wt_time(from.etf_wt_time());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_marketid()) {
      set_marketid(from.marketid());
    }
    if (from.has_bsflag()) {
      set_bsflag(from.bsflag());
    }
    if (from.has_etf_wt_status()) {
      set_etf_wt_status(from.etf_wt_status());
    }
    if (from.has_cjpricesum()) {
      set_cjpricesum(from.cjpricesum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ETF_Message_ack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ETF_Message_ack::CopyFrom(const ETF_Message_ack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ETF_Message_ack::IsInitialized() const {
  
  return true;
}

void ETF_Message_ack::Swap(ETF_Message_ack* other) {
  if (other != this) {
    std::swap(valid_, other->valid_);
    std::swap(etfcode_, other->etfcode_);
    std::swap(etfname_, other->etfname_);
    std::swap(etf_wt_num_, other->etf_wt_num_);
    std::swap(etf_wt_price_, other->etf_wt_price_);
    std::swap(etf_wt_serial_, other->etf_wt_serial_);
    std::swap(etf_cj_num_, other->etf_cj_num_);
    std::swap(etf_wt_time_, other->etf_wt_time_);
    std::swap(marketid_, other->marketid_);
    std::swap(bsflag_, other->bsflag_);
    std::swap(etf_wt_status_, other->etf_wt_status_);
    std::swap(cjpricesum_, other->cjpricesum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ETF_Message_ack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ETF_Message_ack_descriptor_;
  metadata.reflection = ETF_Message_ack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StockServer::kFuncIDFieldNumber;
const int StockServer::kIsAckFlagFieldNumber;
const int StockServer::kDestModuleFieldNumber;
const int StockServer::kSrcModuleFieldNumber;
const int StockServer::kRequestIDFieldNumber;
const int StockServer::kPackSumFieldNumber;
const int StockServer::kPackSeqFieldNumber;
const int StockServer::kOneEntrustReqFieldNumber;
const int StockServer::kOneCancelReqFieldNumber;
const int StockServer::kQueryOneEntrustReqFieldNumber;
const int StockServer::kQueryCJMXReqFieldNumber;
const int StockServer::kQueryPositionReqFieldNumber;
const int StockServer::kQueryETFbaseInfoReqFieldNumber;
const int StockServer::kQueryETFlistInfoReqFieldNumber;
const int StockServer::kQueryETFdynamicInfoReqFieldNumber;
const int StockServer::kQueryFundConditionReqFieldNumber;
const int StockServer::kETFPurRedemReqFieldNumber;
const int StockServer::kQueryBatchEntrustReqFieldNumber;
const int StockServer::kBatchEntrustReqFieldNumber;
const int StockServer::kBatchCancelReqFieldNumber;
const int StockServer::kQueryVaildRedemNumReqFieldNumber;
const int StockServer::kOneEntrustAckFieldNumber;
const int StockServer::kOneCancelAckFieldNumber;
const int StockServer::kQueryOneEntrustAckFieldNumber;
const int StockServer::kQueryCJMXAckFieldNumber;
const int StockServer::kQueryPositionAckFieldNumber;
const int StockServer::kQueryETFbaseInfoAckFieldNumber;
const int StockServer::kQueryETFlistInfoAckFieldNumber;
const int StockServer::kQueryETFdynamicInfoAckFieldNumber;
const int StockServer::kQueryFundConditionAckFieldNumber;
const int StockServer::kETFPurRedemAckFieldNumber;
const int StockServer::kQueryBatchEntrustAckFieldNumber;
const int StockServer::kBatchEntrustAckFieldNumber;
const int StockServer::kBatchCancelAckFieldNumber;
const int StockServer::kAccountFieldNumber;
const int StockServer::kETFMessageFieldNumber;
#endif  // !_MSC_VER

StockServer::StockServer()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StockServer::InitAsDefaultInstance() {
  oneentrust_req_ = const_cast< ::INF_OneEntrust_Req*>(&::INF_OneEntrust_Req::default_instance());
  onecancel_req_ = const_cast< ::INF_OneCancel_Req*>(&::INF_OneCancel_Req::default_instance());
  queryoneentrust_req_ = const_cast< ::INF_QueryOneEntrust_Req*>(&::INF_QueryOneEntrust_Req::default_instance());
  querycjmx_req_ = const_cast< ::INF_QueryCJMX_Req*>(&::INF_QueryCJMX_Req::default_instance());
  queryposition_req_ = const_cast< ::INF_QueryPosition_Req*>(&::INF_QueryPosition_Req::default_instance());
  queryetfbaseinfo_req_ = const_cast< ::INF_QueryETFbaseInfo_Req*>(&::INF_QueryETFbaseInfo_Req::default_instance());
  queryetflistinfo_req_ = const_cast< ::INF_QueryETFlistInfo_Req*>(&::INF_QueryETFlistInfo_Req::default_instance());
  queryetfdynamicinfo_req_ = const_cast< ::INF_QueryETFdynamicInfo_Req*>(&::INF_QueryETFdynamicInfo_Req::default_instance());
  queryfundcondition_req_ = const_cast< ::INF_QueryFundCondition_Req*>(&::INF_QueryFundCondition_Req::default_instance());
  etfpurredem_req_ = const_cast< ::INF_ETFPurRedem_Req*>(&::INF_ETFPurRedem_Req::default_instance());
  querybatchentrust_req_ = const_cast< ::INF_QueryBatchEntrust_Req*>(&::INF_QueryBatchEntrust_Req::default_instance());
  batchentrust_req_ = const_cast< ::INF_BatchEntrust_Req*>(&::INF_BatchEntrust_Req::default_instance());
  batchcancel_req_ = const_cast< ::INF_BatchCancel_Req*>(&::INF_BatchCancel_Req::default_instance());
  queryvaildredemnum_req_ = const_cast< ::INF_QueryVaildRedemNum_Req*>(&::INF_QueryVaildRedemNum_Req::default_instance());
  oneentrust_ack_ = const_cast< ::INF_OneEntrust_Ack*>(&::INF_OneEntrust_Ack::default_instance());
  onecancel_ack_ = const_cast< ::INF_OneCancel_Ack*>(&::INF_OneCancel_Ack::default_instance());
  queryoneentrust_ack_ = const_cast< ::INF_QueryOneEntrust_Ack*>(&::INF_QueryOneEntrust_Ack::default_instance());
  querycjmx_ack_ = const_cast< ::INF_QueryCJMX_Ack*>(&::INF_QueryCJMX_Ack::default_instance());
  queryposition_ack_ = const_cast< ::INF_QueryPosition_Ack*>(&::INF_QueryPosition_Ack::default_instance());
  queryetfbaseinfo_ack_ = const_cast< ::INF_QueryETFbaseInfo_Ack*>(&::INF_QueryETFbaseInfo_Ack::default_instance());
  queryetflistinfo_ack_ = const_cast< ::INF_QueryETFlistInfo_Ack*>(&::INF_QueryETFlistInfo_Ack::default_instance());
  queryetfdynamicinfo_ack_ = const_cast< ::INF_QueryETFdynamicInfo_Ack*>(&::INF_QueryETFdynamicInfo_Ack::default_instance());
  queryfundcondition_ack_ = const_cast< ::INF_QueryFundCondition_Ack*>(&::INF_QueryFundCondition_Ack::default_instance());
  etfpurredem_ack_ = const_cast< ::INF_ETFPurRedem_Ack*>(&::INF_ETFPurRedem_Ack::default_instance());
  querybatchentrust_ack_ = const_cast< ::INF_QueryBatchEntrust_Ack*>(&::INF_QueryBatchEntrust_Ack::default_instance());
  batchentrust_ack_ = const_cast< ::INF_BatchEntrust_Ack*>(&::INF_BatchEntrust_Ack::default_instance());
  batchcancel_ack_ = const_cast< ::INF_BatchCancel_Ack*>(&::INF_BatchCancel_Ack::default_instance());
  account_ = const_cast< ::INF_Account*>(&::INF_Account::default_instance());
  etf_message_ = const_cast< ::INF_ETF_Message*>(&::INF_ETF_Message::default_instance());
}

StockServer::StockServer(const StockServer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StockServer::SharedCtor() {
  _cached_size_ = 0;
  funcid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  isackflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  destmodule_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  srcmodule_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  requestid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  packsum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  packseq_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  oneentrust_req_ = NULL;
  onecancel_req_ = NULL;
  queryoneentrust_req_ = NULL;
  querycjmx_req_ = NULL;
  queryposition_req_ = NULL;
  queryetfbaseinfo_req_ = NULL;
  queryetflistinfo_req_ = NULL;
  queryetfdynamicinfo_req_ = NULL;
  queryfundcondition_req_ = NULL;
  etfpurredem_req_ = NULL;
  querybatchentrust_req_ = NULL;
  batchentrust_req_ = NULL;
  batchcancel_req_ = NULL;
  queryvaildredemnum_req_ = NULL;
  oneentrust_ack_ = NULL;
  onecancel_ack_ = NULL;
  queryoneentrust_ack_ = NULL;
  querycjmx_ack_ = NULL;
  queryposition_ack_ = NULL;
  queryetfbaseinfo_ack_ = NULL;
  queryetflistinfo_ack_ = NULL;
  queryetfdynamicinfo_ack_ = NULL;
  queryfundcondition_ack_ = NULL;
  etfpurredem_ack_ = NULL;
  querybatchentrust_ack_ = NULL;
  batchentrust_ack_ = NULL;
  batchcancel_ack_ = NULL;
  account_ = NULL;
  etf_message_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StockServer::~StockServer() {
  SharedDtor();
}

void StockServer::SharedDtor() {
  if (funcid_ != &::google::protobuf::internal::kEmptyString) {
    delete funcid_;
  }
  if (isackflag_ != &::google::protobuf::internal::kEmptyString) {
    delete isackflag_;
  }
  if (destmodule_ != &::google::protobuf::internal::kEmptyString) {
    delete destmodule_;
  }
  if (srcmodule_ != &::google::protobuf::internal::kEmptyString) {
    delete srcmodule_;
  }
  if (requestid_ != &::google::protobuf::internal::kEmptyString) {
    delete requestid_;
  }
  if (packsum_ != &::google::protobuf::internal::kEmptyString) {
    delete packsum_;
  }
  if (packseq_ != &::google::protobuf::internal::kEmptyString) {
    delete packseq_;
  }
  if (this != default_instance_) {
    delete oneentrust_req_;
    delete onecancel_req_;
    delete queryoneentrust_req_;
    delete querycjmx_req_;
    delete queryposition_req_;
    delete queryetfbaseinfo_req_;
    delete queryetflistinfo_req_;
    delete queryetfdynamicinfo_req_;
    delete queryfundcondition_req_;
    delete etfpurredem_req_;
    delete querybatchentrust_req_;
    delete batchentrust_req_;
    delete batchcancel_req_;
    delete queryvaildredemnum_req_;
    delete oneentrust_ack_;
    delete onecancel_ack_;
    delete queryoneentrust_ack_;
    delete querycjmx_ack_;
    delete queryposition_ack_;
    delete queryetfbaseinfo_ack_;
    delete queryetflistinfo_ack_;
    delete queryetfdynamicinfo_ack_;
    delete queryfundcondition_ack_;
    delete etfpurredem_ack_;
    delete querybatchentrust_ack_;
    delete batchentrust_ack_;
    delete batchcancel_ack_;
    delete account_;
    delete etf_message_;
  }
}

void StockServer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StockServer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StockServer_descriptor_;
}

const StockServer& StockServer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CQconnection_2eprotoc();  return *default_instance_;
}

StockServer* StockServer::default_instance_ = NULL;

StockServer* StockServer::New() const {
  return new StockServer;
}

void StockServer::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_funcid()) {
      if (funcid_ != &::google::protobuf::internal::kEmptyString) {
        funcid_->clear();
      }
    }
    if (has_isackflag()) {
      if (isackflag_ != &::google::protobuf::internal::kEmptyString) {
        isackflag_->clear();
      }
    }
    if (has_destmodule()) {
      if (destmodule_ != &::google::protobuf::internal::kEmptyString) {
        destmodule_->clear();
      }
    }
    if (has_srcmodule()) {
      if (srcmodule_ != &::google::protobuf::internal::kEmptyString) {
        srcmodule_->clear();
      }
    }
    if (has_requestid()) {
      if (requestid_ != &::google::protobuf::internal::kEmptyString) {
        requestid_->clear();
      }
    }
    if (has_packsum()) {
      if (packsum_ != &::google::protobuf::internal::kEmptyString) {
        packsum_->clear();
      }
    }
    if (has_packseq()) {
      if (packseq_ != &::google::protobuf::internal::kEmptyString) {
        packseq_->clear();
      }
    }
    if (has_oneentrust_req()) {
      if (oneentrust_req_ != NULL) oneentrust_req_->::INF_OneEntrust_Req::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_onecancel_req()) {
      if (onecancel_req_ != NULL) onecancel_req_->::INF_OneCancel_Req::Clear();
    }
    if (has_queryoneentrust_req()) {
      if (queryoneentrust_req_ != NULL) queryoneentrust_req_->::INF_QueryOneEntrust_Req::Clear();
    }
    if (has_querycjmx_req()) {
      if (querycjmx_req_ != NULL) querycjmx_req_->::INF_QueryCJMX_Req::Clear();
    }
    if (has_queryposition_req()) {
      if (queryposition_req_ != NULL) queryposition_req_->::INF_QueryPosition_Req::Clear();
    }
    if (has_queryetfbaseinfo_req()) {
      if (queryetfbaseinfo_req_ != NULL) queryetfbaseinfo_req_->::INF_QueryETFbaseInfo_Req::Clear();
    }
    if (has_queryetflistinfo_req()) {
      if (queryetflistinfo_req_ != NULL) queryetflistinfo_req_->::INF_QueryETFlistInfo_Req::Clear();
    }
    if (has_queryetfdynamicinfo_req()) {
      if (queryetfdynamicinfo_req_ != NULL) queryetfdynamicinfo_req_->::INF_QueryETFdynamicInfo_Req::Clear();
    }
    if (has_queryfundcondition_req()) {
      if (queryfundcondition_req_ != NULL) queryfundcondition_req_->::INF_QueryFundCondition_Req::Clear();
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_etfpurredem_req()) {
      if (etfpurredem_req_ != NULL) etfpurredem_req_->::INF_ETFPurRedem_Req::Clear();
    }
    if (has_querybatchentrust_req()) {
      if (querybatchentrust_req_ != NULL) querybatchentrust_req_->::INF_QueryBatchEntrust_Req::Clear();
    }
    if (has_batchentrust_req()) {
      if (batchentrust_req_ != NULL) batchentrust_req_->::INF_BatchEntrust_Req::Clear();
    }
    if (has_batchcancel_req()) {
      if (batchcancel_req_ != NULL) batchcancel_req_->::INF_BatchCancel_Req::Clear();
    }
    if (has_queryvaildredemnum_req()) {
      if (queryvaildredemnum_req_ != NULL) queryvaildredemnum_req_->::INF_QueryVaildRedemNum_Req::Clear();
    }
    if (has_oneentrust_ack()) {
      if (oneentrust_ack_ != NULL) oneentrust_ack_->::INF_OneEntrust_Ack::Clear();
    }
    if (has_onecancel_ack()) {
      if (onecancel_ack_ != NULL) onecancel_ack_->::INF_OneCancel_Ack::Clear();
    }
    if (has_queryoneentrust_ack()) {
      if (queryoneentrust_ack_ != NULL) queryoneentrust_ack_->::INF_QueryOneEntrust_Ack::Clear();
    }
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (has_querycjmx_ack()) {
      if (querycjmx_ack_ != NULL) querycjmx_ack_->::INF_QueryCJMX_Ack::Clear();
    }
    if (has_queryposition_ack()) {
      if (queryposition_ack_ != NULL) queryposition_ack_->::INF_QueryPosition_Ack::Clear();
    }
    if (has_queryetfbaseinfo_ack()) {
      if (queryetfbaseinfo_ack_ != NULL) queryetfbaseinfo_ack_->::INF_QueryETFbaseInfo_Ack::Clear();
    }
    if (has_queryetflistinfo_ack()) {
      if (queryetflistinfo_ack_ != NULL) queryetflistinfo_ack_->::INF_QueryETFlistInfo_Ack::Clear();
    }
    if (has_queryetfdynamicinfo_ack()) {
      if (queryetfdynamicinfo_ack_ != NULL) queryetfdynamicinfo_ack_->::INF_QueryETFdynamicInfo_Ack::Clear();
    }
    if (has_queryfundcondition_ack()) {
      if (queryfundcondition_ack_ != NULL) queryfundcondition_ack_->::INF_QueryFundCondition_Ack::Clear();
    }
    if (has_etfpurredem_ack()) {
      if (etfpurredem_ack_ != NULL) etfpurredem_ack_->::INF_ETFPurRedem_Ack::Clear();
    }
    if (has_querybatchentrust_ack()) {
      if (querybatchentrust_ack_ != NULL) querybatchentrust_ack_->::INF_QueryBatchEntrust_Ack::Clear();
    }
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (has_batchentrust_ack()) {
      if (batchentrust_ack_ != NULL) batchentrust_ack_->::INF_BatchEntrust_Ack::Clear();
    }
    if (has_batchcancel_ack()) {
      if (batchcancel_ack_ != NULL) batchcancel_ack_->::INF_BatchCancel_Ack::Clear();
    }
    if (has_account()) {
      if (account_ != NULL) account_->::INF_Account::Clear();
    }
    if (has_etf_message()) {
      if (etf_message_ != NULL) etf_message_->::INF_ETF_Message::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StockServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string FuncID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_funcid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->funcid().data(), this->funcid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_IsAckFlag;
        break;
      }
      
      // required string IsAckFlag = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_IsAckFlag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_isackflag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->isackflag().data(), this->isackflag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_DestModule;
        break;
      }
      
      // required string DestModule = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DestModule:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destmodule()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->destmodule().data(), this->destmodule().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_SrcModule;
        break;
      }
      
      // required string SrcModule = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SrcModule:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srcmodule()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->srcmodule().data(), this->srcmodule().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_RequestID;
        break;
      }
      
      // required string RequestID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RequestID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_requestid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->requestid().data(), this->requestid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_OneEntrust_Req;
        break;
      }
      
      // optional .INF_OneEntrust_Req OneEntrust_Req = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OneEntrust_Req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oneentrust_req()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_OneCancel_Req;
        break;
      }
      
      // optional .INF_OneCancel_Req OneCancel_Req = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OneCancel_Req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_onecancel_req()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_QueryOneEntrust_Req;
        break;
      }
      
      // optional .INF_QueryOneEntrust_Req QueryOneEntrust_Req = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_QueryOneEntrust_Req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryoneentrust_req()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_QueryCJMX_Req;
        break;
      }
      
      // optional .INF_QueryCJMX_Req QueryCJMX_Req = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_QueryCJMX_Req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querycjmx_req()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_QueryPosition_Req;
        break;
      }
      
      // optional .INF_QueryPosition_Req QueryPosition_Req = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_QueryPosition_Req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryposition_req()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_QueryETFbaseInfo_Req;
        break;
      }
      
      // optional .INF_QueryETFbaseInfo_Req QueryETFbaseInfo_Req = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_QueryETFbaseInfo_Req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryetfbaseinfo_req()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_QueryETFlistInfo_Req;
        break;
      }
      
      // optional .INF_QueryETFlistInfo_Req QueryETFlistInfo_Req = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_QueryETFlistInfo_Req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryetflistinfo_req()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_QueryETFdynamicInfo_Req;
        break;
      }
      
      // optional .INF_QueryETFdynamicInfo_Req QueryETFdynamicInfo_Req = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_QueryETFdynamicInfo_Req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryetfdynamicinfo_req()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_QueryFundCondition_Req;
        break;
      }
      
      // optional .INF_QueryFundCondition_Req QueryFundCondition_Req = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_QueryFundCondition_Req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryfundcondition_req()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_ETFPurRedem_Req;
        break;
      }
      
      // optional .INF_ETFPurRedem_Req ETFPurRedem_Req = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ETFPurRedem_Req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_etfpurredem_req()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_QueryBatchEntrust_Req;
        break;
      }
      
      // optional .INF_QueryBatchEntrust_Req QueryBatchEntrust_Req = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_QueryBatchEntrust_Req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querybatchentrust_req()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_BatchEntrust_Req;
        break;
      }
      
      // optional .INF_BatchEntrust_Req BatchEntrust_Req = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_BatchEntrust_Req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_batchentrust_req()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_BatchCancel_Req;
        break;
      }
      
      // optional .INF_BatchCancel_Req BatchCancel_Req = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_BatchCancel_Req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_batchcancel_req()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_QueryVaildRedemNum_Req;
        break;
      }
      
      // optional .INF_QueryVaildRedemNum_Req QueryVaildRedemNum_Req = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_QueryVaildRedemNum_Req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryvaildredemnum_req()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_OneEntrust_Ack;
        break;
      }
      
      // optional .INF_OneEntrust_Ack OneEntrust_Ack = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OneEntrust_Ack:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oneentrust_ack()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_OneCancel_Ack;
        break;
      }
      
      // optional .INF_OneCancel_Ack OneCancel_Ack = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OneCancel_Ack:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_onecancel_ack()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_QueryOneEntrust_Ack;
        break;
      }
      
      // optional .INF_QueryOneEntrust_Ack QueryOneEntrust_Ack = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_QueryOneEntrust_Ack:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryoneentrust_ack()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_QueryCJMX_Ack;
        break;
      }
      
      // optional .INF_QueryCJMX_Ack QueryCJMX_Ack = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_QueryCJMX_Ack:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querycjmx_ack()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(194)) goto parse_QueryPosition_Ack;
        break;
      }
      
      // optional .INF_QueryPosition_Ack QueryPosition_Ack = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_QueryPosition_Ack:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryposition_ack()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(202)) goto parse_QueryETFbaseInfo_Ack;
        break;
      }
      
      // optional .INF_QueryETFbaseInfo_Ack QueryETFbaseInfo_Ack = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_QueryETFbaseInfo_Ack:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryetfbaseinfo_ack()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(210)) goto parse_QueryETFlistInfo_Ack;
        break;
      }
      
      // optional .INF_QueryETFlistInfo_Ack QueryETFlistInfo_Ack = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_QueryETFlistInfo_Ack:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryetflistinfo_ack()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(218)) goto parse_QueryETFdynamicInfo_Ack;
        break;
      }
      
      // optional .INF_QueryETFdynamicInfo_Ack QueryETFdynamicInfo_Ack = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_QueryETFdynamicInfo_Ack:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryetfdynamicinfo_ack()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(226)) goto parse_QueryFundCondition_Ack;
        break;
      }
      
      // optional .INF_QueryFundCondition_Ack QueryFundCondition_Ack = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_QueryFundCondition_Ack:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queryfundcondition_ack()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(234)) goto parse_ETFPurRedem_Ack;
        break;
      }
      
      // optional .INF_ETFPurRedem_Ack ETFPurRedem_Ack = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ETFPurRedem_Ack:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_etfpurredem_ack()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(242)) goto parse_QueryBatchEntrust_Ack;
        break;
      }
      
      // optional .INF_QueryBatchEntrust_Ack QueryBatchEntrust_Ack = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_QueryBatchEntrust_Ack:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_querybatchentrust_ack()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(250)) goto parse_BatchEntrust_Ack;
        break;
      }
      
      // optional .INF_BatchEntrust_Ack BatchEntrust_Ack = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_BatchEntrust_Ack:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_batchentrust_ack()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(258)) goto parse_BatchCancel_Ack;
        break;
      }
      
      // optional .INF_BatchCancel_Ack BatchCancel_Ack = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_BatchCancel_Ack:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_batchcancel_ack()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(274)) goto parse_Account;
        break;
      }
      
      // optional .INF_Account Account = 34;
      case 34: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Account:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_account()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(282)) goto parse_ETF_Message;
        break;
      }
      
      // optional .INF_ETF_Message ETF_Message = 35;
      case 35: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ETF_Message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_etf_message()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(290)) goto parse_PackSum;
        break;
      }
      
      // required string PackSum = 36;
      case 36: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_PackSum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_packsum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->packsum().data(), this->packsum().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(298)) goto parse_PackSeq;
        break;
      }
      
      // required string PackSeq = 37;
      case 37: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_PackSeq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_packseq()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->packseq().data(), this->packseq().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StockServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string FuncID = 1;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->funcid(), output);
  }
  
  // required string IsAckFlag = 2;
  if (has_isackflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->isackflag().data(), this->isackflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->isackflag(), output);
  }
  
  // required string DestModule = 3;
  if (has_destmodule()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->destmodule().data(), this->destmodule().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->destmodule(), output);
  }
  
  // required string SrcModule = 4;
  if (has_srcmodule()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->srcmodule().data(), this->srcmodule().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->srcmodule(), output);
  }
  
  // required string RequestID = 5;
  if (has_requestid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->requestid().data(), this->requestid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->requestid(), output);
  }
  
  // optional .INF_OneEntrust_Req OneEntrust_Req = 6;
  if (has_oneentrust_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->oneentrust_req(), output);
  }
  
  // optional .INF_OneCancel_Req OneCancel_Req = 7;
  if (has_onecancel_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->onecancel_req(), output);
  }
  
  // optional .INF_QueryOneEntrust_Req QueryOneEntrust_Req = 8;
  if (has_queryoneentrust_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->queryoneentrust_req(), output);
  }
  
  // optional .INF_QueryCJMX_Req QueryCJMX_Req = 9;
  if (has_querycjmx_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->querycjmx_req(), output);
  }
  
  // optional .INF_QueryPosition_Req QueryPosition_Req = 10;
  if (has_queryposition_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->queryposition_req(), output);
  }
  
  // optional .INF_QueryETFbaseInfo_Req QueryETFbaseInfo_Req = 11;
  if (has_queryetfbaseinfo_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->queryetfbaseinfo_req(), output);
  }
  
  // optional .INF_QueryETFlistInfo_Req QueryETFlistInfo_Req = 12;
  if (has_queryetflistinfo_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->queryetflistinfo_req(), output);
  }
  
  // optional .INF_QueryETFdynamicInfo_Req QueryETFdynamicInfo_Req = 13;
  if (has_queryetfdynamicinfo_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->queryetfdynamicinfo_req(), output);
  }
  
  // optional .INF_QueryFundCondition_Req QueryFundCondition_Req = 14;
  if (has_queryfundcondition_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->queryfundcondition_req(), output);
  }
  
  // optional .INF_ETFPurRedem_Req ETFPurRedem_Req = 15;
  if (has_etfpurredem_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->etfpurredem_req(), output);
  }
  
  // optional .INF_QueryBatchEntrust_Req QueryBatchEntrust_Req = 16;
  if (has_querybatchentrust_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->querybatchentrust_req(), output);
  }
  
  // optional .INF_BatchEntrust_Req BatchEntrust_Req = 17;
  if (has_batchentrust_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->batchentrust_req(), output);
  }
  
  // optional .INF_BatchCancel_Req BatchCancel_Req = 18;
  if (has_batchcancel_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->batchcancel_req(), output);
  }
  
  // optional .INF_QueryVaildRedemNum_Req QueryVaildRedemNum_Req = 19;
  if (has_queryvaildredemnum_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->queryvaildredemnum_req(), output);
  }
  
  // optional .INF_OneEntrust_Ack OneEntrust_Ack = 20;
  if (has_oneentrust_ack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->oneentrust_ack(), output);
  }
  
  // optional .INF_OneCancel_Ack OneCancel_Ack = 21;
  if (has_onecancel_ack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->onecancel_ack(), output);
  }
  
  // optional .INF_QueryOneEntrust_Ack QueryOneEntrust_Ack = 22;
  if (has_queryoneentrust_ack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->queryoneentrust_ack(), output);
  }
  
  // optional .INF_QueryCJMX_Ack QueryCJMX_Ack = 23;
  if (has_querycjmx_ack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->querycjmx_ack(), output);
  }
  
  // optional .INF_QueryPosition_Ack QueryPosition_Ack = 24;
  if (has_queryposition_ack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->queryposition_ack(), output);
  }
  
  // optional .INF_QueryETFbaseInfo_Ack QueryETFbaseInfo_Ack = 25;
  if (has_queryetfbaseinfo_ack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->queryetfbaseinfo_ack(), output);
  }
  
  // optional .INF_QueryETFlistInfo_Ack QueryETFlistInfo_Ack = 26;
  if (has_queryetflistinfo_ack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->queryetflistinfo_ack(), output);
  }
  
  // optional .INF_QueryETFdynamicInfo_Ack QueryETFdynamicInfo_Ack = 27;
  if (has_queryetfdynamicinfo_ack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->queryetfdynamicinfo_ack(), output);
  }
  
  // optional .INF_QueryFundCondition_Ack QueryFundCondition_Ack = 28;
  if (has_queryfundcondition_ack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->queryfundcondition_ack(), output);
  }
  
  // optional .INF_ETFPurRedem_Ack ETFPurRedem_Ack = 29;
  if (has_etfpurredem_ack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->etfpurredem_ack(), output);
  }
  
  // optional .INF_QueryBatchEntrust_Ack QueryBatchEntrust_Ack = 30;
  if (has_querybatchentrust_ack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, this->querybatchentrust_ack(), output);
  }
  
  // optional .INF_BatchEntrust_Ack BatchEntrust_Ack = 31;
  if (has_batchentrust_ack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, this->batchentrust_ack(), output);
  }
  
  // optional .INF_BatchCancel_Ack BatchCancel_Ack = 32;
  if (has_batchcancel_ack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, this->batchcancel_ack(), output);
  }
  
  // optional .INF_Account Account = 34;
  if (has_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34, this->account(), output);
  }
  
  // optional .INF_ETF_Message ETF_Message = 35;
  if (has_etf_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      35, this->etf_message(), output);
  }
  
  // required string PackSum = 36;
  if (has_packsum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->packsum().data(), this->packsum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      36, this->packsum(), output);
  }
  
  // required string PackSeq = 37;
  if (has_packseq()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->packseq().data(), this->packseq().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      37, this->packseq(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StockServer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string FuncID = 1;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->funcid().data(), this->funcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->funcid(), target);
  }
  
  // required string IsAckFlag = 2;
  if (has_isackflag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->isackflag().data(), this->isackflag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->isackflag(), target);
  }
  
  // required string DestModule = 3;
  if (has_destmodule()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->destmodule().data(), this->destmodule().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->destmodule(), target);
  }
  
  // required string SrcModule = 4;
  if (has_srcmodule()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->srcmodule().data(), this->srcmodule().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->srcmodule(), target);
  }
  
  // required string RequestID = 5;
  if (has_requestid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->requestid().data(), this->requestid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->requestid(), target);
  }
  
  // optional .INF_OneEntrust_Req OneEntrust_Req = 6;
  if (has_oneentrust_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->oneentrust_req(), target);
  }
  
  // optional .INF_OneCancel_Req OneCancel_Req = 7;
  if (has_onecancel_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->onecancel_req(), target);
  }
  
  // optional .INF_QueryOneEntrust_Req QueryOneEntrust_Req = 8;
  if (has_queryoneentrust_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->queryoneentrust_req(), target);
  }
  
  // optional .INF_QueryCJMX_Req QueryCJMX_Req = 9;
  if (has_querycjmx_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->querycjmx_req(), target);
  }
  
  // optional .INF_QueryPosition_Req QueryPosition_Req = 10;
  if (has_queryposition_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->queryposition_req(), target);
  }
  
  // optional .INF_QueryETFbaseInfo_Req QueryETFbaseInfo_Req = 11;
  if (has_queryetfbaseinfo_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->queryetfbaseinfo_req(), target);
  }
  
  // optional .INF_QueryETFlistInfo_Req QueryETFlistInfo_Req = 12;
  if (has_queryetflistinfo_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->queryetflistinfo_req(), target);
  }
  
  // optional .INF_QueryETFdynamicInfo_Req QueryETFdynamicInfo_Req = 13;
  if (has_queryetfdynamicinfo_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->queryetfdynamicinfo_req(), target);
  }
  
  // optional .INF_QueryFundCondition_Req QueryFundCondition_Req = 14;
  if (has_queryfundcondition_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->queryfundcondition_req(), target);
  }
  
  // optional .INF_ETFPurRedem_Req ETFPurRedem_Req = 15;
  if (has_etfpurredem_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->etfpurredem_req(), target);
  }
  
  // optional .INF_QueryBatchEntrust_Req QueryBatchEntrust_Req = 16;
  if (has_querybatchentrust_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->querybatchentrust_req(), target);
  }
  
  // optional .INF_BatchEntrust_Req BatchEntrust_Req = 17;
  if (has_batchentrust_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->batchentrust_req(), target);
  }
  
  // optional .INF_BatchCancel_Req BatchCancel_Req = 18;
  if (has_batchcancel_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->batchcancel_req(), target);
  }
  
  // optional .INF_QueryVaildRedemNum_Req QueryVaildRedemNum_Req = 19;
  if (has_queryvaildredemnum_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->queryvaildredemnum_req(), target);
  }
  
  // optional .INF_OneEntrust_Ack OneEntrust_Ack = 20;
  if (has_oneentrust_ack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->oneentrust_ack(), target);
  }
  
  // optional .INF_OneCancel_Ack OneCancel_Ack = 21;
  if (has_onecancel_ack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->onecancel_ack(), target);
  }
  
  // optional .INF_QueryOneEntrust_Ack QueryOneEntrust_Ack = 22;
  if (has_queryoneentrust_ack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        22, this->queryoneentrust_ack(), target);
  }
  
  // optional .INF_QueryCJMX_Ack QueryCJMX_Ack = 23;
  if (has_querycjmx_ack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        23, this->querycjmx_ack(), target);
  }
  
  // optional .INF_QueryPosition_Ack QueryPosition_Ack = 24;
  if (has_queryposition_ack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        24, this->queryposition_ack(), target);
  }
  
  // optional .INF_QueryETFbaseInfo_Ack QueryETFbaseInfo_Ack = 25;
  if (has_queryetfbaseinfo_ack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        25, this->queryetfbaseinfo_ack(), target);
  }
  
  // optional .INF_QueryETFlistInfo_Ack QueryETFlistInfo_Ack = 26;
  if (has_queryetflistinfo_ack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        26, this->queryetflistinfo_ack(), target);
  }
  
  // optional .INF_QueryETFdynamicInfo_Ack QueryETFdynamicInfo_Ack = 27;
  if (has_queryetfdynamicinfo_ack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        27, this->queryetfdynamicinfo_ack(), target);
  }
  
  // optional .INF_QueryFundCondition_Ack QueryFundCondition_Ack = 28;
  if (has_queryfundcondition_ack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        28, this->queryfundcondition_ack(), target);
  }
  
  // optional .INF_ETFPurRedem_Ack ETFPurRedem_Ack = 29;
  if (has_etfpurredem_ack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        29, this->etfpurredem_ack(), target);
  }
  
  // optional .INF_QueryBatchEntrust_Ack QueryBatchEntrust_Ack = 30;
  if (has_querybatchentrust_ack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        30, this->querybatchentrust_ack(), target);
  }
  
  // optional .INF_BatchEntrust_Ack BatchEntrust_Ack = 31;
  if (has_batchentrust_ack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        31, this->batchentrust_ack(), target);
  }
  
  // optional .INF_BatchCancel_Ack BatchCancel_Ack = 32;
  if (has_batchcancel_ack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        32, this->batchcancel_ack(), target);
  }
  
  // optional .INF_Account Account = 34;
  if (has_account()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        34, this->account(), target);
  }
  
  // optional .INF_ETF_Message ETF_Message = 35;
  if (has_etf_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        35, this->etf_message(), target);
  }
  
  // required string PackSum = 36;
  if (has_packsum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->packsum().data(), this->packsum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        36, this->packsum(), target);
  }
  
  // required string PackSeq = 37;
  if (has_packseq()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->packseq().data(), this->packseq().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        37, this->packseq(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StockServer::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string FuncID = 1;
    if (has_funcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->funcid());
    }
    
    // required string IsAckFlag = 2;
    if (has_isackflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->isackflag());
    }
    
    // required string DestModule = 3;
    if (has_destmodule()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->destmodule());
    }
    
    // required string SrcModule = 4;
    if (has_srcmodule()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->srcmodule());
    }
    
    // required string RequestID = 5;
    if (has_requestid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->requestid());
    }
    
    // required string PackSum = 36;
    if (has_packsum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->packsum());
    }
    
    // required string PackSeq = 37;
    if (has_packseq()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->packseq());
    }
    
    // optional .INF_OneEntrust_Req OneEntrust_Req = 6;
    if (has_oneentrust_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->oneentrust_req());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .INF_OneCancel_Req OneCancel_Req = 7;
    if (has_onecancel_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->onecancel_req());
    }
    
    // optional .INF_QueryOneEntrust_Req QueryOneEntrust_Req = 8;
    if (has_queryoneentrust_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->queryoneentrust_req());
    }
    
    // optional .INF_QueryCJMX_Req QueryCJMX_Req = 9;
    if (has_querycjmx_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->querycjmx_req());
    }
    
    // optional .INF_QueryPosition_Req QueryPosition_Req = 10;
    if (has_queryposition_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->queryposition_req());
    }
    
    // optional .INF_QueryETFbaseInfo_Req QueryETFbaseInfo_Req = 11;
    if (has_queryetfbaseinfo_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->queryetfbaseinfo_req());
    }
    
    // optional .INF_QueryETFlistInfo_Req QueryETFlistInfo_Req = 12;
    if (has_queryetflistinfo_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->queryetflistinfo_req());
    }
    
    // optional .INF_QueryETFdynamicInfo_Req QueryETFdynamicInfo_Req = 13;
    if (has_queryetfdynamicinfo_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->queryetfdynamicinfo_req());
    }
    
    // optional .INF_QueryFundCondition_Req QueryFundCondition_Req = 14;
    if (has_queryfundcondition_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->queryfundcondition_req());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional .INF_ETFPurRedem_Req ETFPurRedem_Req = 15;
    if (has_etfpurredem_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->etfpurredem_req());
    }
    
    // optional .INF_QueryBatchEntrust_Req QueryBatchEntrust_Req = 16;
    if (has_querybatchentrust_req()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->querybatchentrust_req());
    }
    
    // optional .INF_BatchEntrust_Req BatchEntrust_Req = 17;
    if (has_batchentrust_req()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->batchentrust_req());
    }
    
    // optional .INF_BatchCancel_Req BatchCancel_Req = 18;
    if (has_batchcancel_req()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->batchcancel_req());
    }
    
    // optional .INF_QueryVaildRedemNum_Req QueryVaildRedemNum_Req = 19;
    if (has_queryvaildredemnum_req()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->queryvaildredemnum_req());
    }
    
    // optional .INF_OneEntrust_Ack OneEntrust_Ack = 20;
    if (has_oneentrust_ack()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->oneentrust_ack());
    }
    
    // optional .INF_OneCancel_Ack OneCancel_Ack = 21;
    if (has_onecancel_ack()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->onecancel_ack());
    }
    
    // optional .INF_QueryOneEntrust_Ack QueryOneEntrust_Ack = 22;
    if (has_queryoneentrust_ack()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->queryoneentrust_ack());
    }
    
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional .INF_QueryCJMX_Ack QueryCJMX_Ack = 23;
    if (has_querycjmx_ack()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->querycjmx_ack());
    }
    
    // optional .INF_QueryPosition_Ack QueryPosition_Ack = 24;
    if (has_queryposition_ack()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->queryposition_ack());
    }
    
    // optional .INF_QueryETFbaseInfo_Ack QueryETFbaseInfo_Ack = 25;
    if (has_queryetfbaseinfo_ack()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->queryetfbaseinfo_ack());
    }
    
    // optional .INF_QueryETFlistInfo_Ack QueryETFlistInfo_Ack = 26;
    if (has_queryetflistinfo_ack()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->queryetflistinfo_ack());
    }
    
    // optional .INF_QueryETFdynamicInfo_Ack QueryETFdynamicInfo_Ack = 27;
    if (has_queryetfdynamicinfo_ack()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->queryetfdynamicinfo_ack());
    }
    
    // optional .INF_QueryFundCondition_Ack QueryFundCondition_Ack = 28;
    if (has_queryfundcondition_ack()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->queryfundcondition_ack());
    }
    
    // optional .INF_ETFPurRedem_Ack ETFPurRedem_Ack = 29;
    if (has_etfpurredem_ack()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->etfpurredem_ack());
    }
    
    // optional .INF_QueryBatchEntrust_Ack QueryBatchEntrust_Ack = 30;
    if (has_querybatchentrust_ack()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->querybatchentrust_ack());
    }
    
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // optional .INF_BatchEntrust_Ack BatchEntrust_Ack = 31;
    if (has_batchentrust_ack()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->batchentrust_ack());
    }
    
    // optional .INF_BatchCancel_Ack BatchCancel_Ack = 32;
    if (has_batchcancel_ack()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->batchcancel_ack());
    }
    
    // optional .INF_Account Account = 34;
    if (has_account()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->account());
    }
    
    // optional .INF_ETF_Message ETF_Message = 35;
    if (has_etf_message()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->etf_message());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StockServer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StockServer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StockServer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StockServer::MergeFrom(const StockServer& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_funcid()) {
      set_funcid(from.funcid());
    }
    if (from.has_isackflag()) {
      set_isackflag(from.isackflag());
    }
    if (from.has_destmodule()) {
      set_destmodule(from.destmodule());
    }
    if (from.has_srcmodule()) {
      set_srcmodule(from.srcmodule());
    }
    if (from.has_requestid()) {
      set_requestid(from.requestid());
    }
    if (from.has_packsum()) {
      set_packsum(from.packsum());
    }
    if (from.has_packseq()) {
      set_packseq(from.packseq());
    }
    if (from.has_oneentrust_req()) {
      mutable_oneentrust_req()->::INF_OneEntrust_Req::MergeFrom(from.oneentrust_req());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_onecancel_req()) {
      mutable_onecancel_req()->::INF_OneCancel_Req::MergeFrom(from.onecancel_req());
    }
    if (from.has_queryoneentrust_req()) {
      mutable_queryoneentrust_req()->::INF_QueryOneEntrust_Req::MergeFrom(from.queryoneentrust_req());
    }
    if (from.has_querycjmx_req()) {
      mutable_querycjmx_req()->::INF_QueryCJMX_Req::MergeFrom(from.querycjmx_req());
    }
    if (from.has_queryposition_req()) {
      mutable_queryposition_req()->::INF_QueryPosition_Req::MergeFrom(from.queryposition_req());
    }
    if (from.has_queryetfbaseinfo_req()) {
      mutable_queryetfbaseinfo_req()->::INF_QueryETFbaseInfo_Req::MergeFrom(from.queryetfbaseinfo_req());
    }
    if (from.has_queryetflistinfo_req()) {
      mutable_queryetflistinfo_req()->::INF_QueryETFlistInfo_Req::MergeFrom(from.queryetflistinfo_req());
    }
    if (from.has_queryetfdynamicinfo_req()) {
      mutable_queryetfdynamicinfo_req()->::INF_QueryETFdynamicInfo_Req::MergeFrom(from.queryetfdynamicinfo_req());
    }
    if (from.has_queryfundcondition_req()) {
      mutable_queryfundcondition_req()->::INF_QueryFundCondition_Req::MergeFrom(from.queryfundcondition_req());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_etfpurredem_req()) {
      mutable_etfpurredem_req()->::INF_ETFPurRedem_Req::MergeFrom(from.etfpurredem_req());
    }
    if (from.has_querybatchentrust_req()) {
      mutable_querybatchentrust_req()->::INF_QueryBatchEntrust_Req::MergeFrom(from.querybatchentrust_req());
    }
    if (from.has_batchentrust_req()) {
      mutable_batchentrust_req()->::INF_BatchEntrust_Req::MergeFrom(from.batchentrust_req());
    }
    if (from.has_batchcancel_req()) {
      mutable_batchcancel_req()->::INF_BatchCancel_Req::MergeFrom(from.batchcancel_req());
    }
    if (from.has_queryvaildredemnum_req()) {
      mutable_queryvaildredemnum_req()->::INF_QueryVaildRedemNum_Req::MergeFrom(from.queryvaildredemnum_req());
    }
    if (from.has_oneentrust_ack()) {
      mutable_oneentrust_ack()->::INF_OneEntrust_Ack::MergeFrom(from.oneentrust_ack());
    }
    if (from.has_onecancel_ack()) {
      mutable_onecancel_ack()->::INF_OneCancel_Ack::MergeFrom(from.onecancel_ack());
    }
    if (from.has_queryoneentrust_ack()) {
      mutable_queryoneentrust_ack()->::INF_QueryOneEntrust_Ack::MergeFrom(from.queryoneentrust_ack());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_querycjmx_ack()) {
      mutable_querycjmx_ack()->::INF_QueryCJMX_Ack::MergeFrom(from.querycjmx_ack());
    }
    if (from.has_queryposition_ack()) {
      mutable_queryposition_ack()->::INF_QueryPosition_Ack::MergeFrom(from.queryposition_ack());
    }
    if (from.has_queryetfbaseinfo_ack()) {
      mutable_queryetfbaseinfo_ack()->::INF_QueryETFbaseInfo_Ack::MergeFrom(from.queryetfbaseinfo_ack());
    }
    if (from.has_queryetflistinfo_ack()) {
      mutable_queryetflistinfo_ack()->::INF_QueryETFlistInfo_Ack::MergeFrom(from.queryetflistinfo_ack());
    }
    if (from.has_queryetfdynamicinfo_ack()) {
      mutable_queryetfdynamicinfo_ack()->::INF_QueryETFdynamicInfo_Ack::MergeFrom(from.queryetfdynamicinfo_ack());
    }
    if (from.has_queryfundcondition_ack()) {
      mutable_queryfundcondition_ack()->::INF_QueryFundCondition_Ack::MergeFrom(from.queryfundcondition_ack());
    }
    if (from.has_etfpurredem_ack()) {
      mutable_etfpurredem_ack()->::INF_ETFPurRedem_Ack::MergeFrom(from.etfpurredem_ack());
    }
    if (from.has_querybatchentrust_ack()) {
      mutable_querybatchentrust_ack()->::INF_QueryBatchEntrust_Ack::MergeFrom(from.querybatchentrust_ack());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_batchentrust_ack()) {
      mutable_batchentrust_ack()->::INF_BatchEntrust_Ack::MergeFrom(from.batchentrust_ack());
    }
    if (from.has_batchcancel_ack()) {
      mutable_batchcancel_ack()->::INF_BatchCancel_Ack::MergeFrom(from.batchcancel_ack());
    }
    if (from.has_account()) {
      mutable_account()->::INF_Account::MergeFrom(from.account());
    }
    if (from.has_etf_message()) {
      mutable_etf_message()->::INF_ETF_Message::MergeFrom(from.etf_message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StockServer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StockServer::CopyFrom(const StockServer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StockServer::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;
  
  if (has_account()) {
    if (!this->account().IsInitialized()) return false;
  }
  return true;
}

void StockServer::Swap(StockServer* other) {
  if (other != this) {
    std::swap(funcid_, other->funcid_);
    std::swap(isackflag_, other->isackflag_);
    std::swap(destmodule_, other->destmodule_);
    std::swap(srcmodule_, other->srcmodule_);
    std::swap(requestid_, other->requestid_);
    std::swap(packsum_, other->packsum_);
    std::swap(packseq_, other->packseq_);
    std::swap(oneentrust_req_, other->oneentrust_req_);
    std::swap(onecancel_req_, other->onecancel_req_);
    std::swap(queryoneentrust_req_, other->queryoneentrust_req_);
    std::swap(querycjmx_req_, other->querycjmx_req_);
    std::swap(queryposition_req_, other->queryposition_req_);
    std::swap(queryetfbaseinfo_req_, other->queryetfbaseinfo_req_);
    std::swap(queryetflistinfo_req_, other->queryetflistinfo_req_);
    std::swap(queryetfdynamicinfo_req_, other->queryetfdynamicinfo_req_);
    std::swap(queryfundcondition_req_, other->queryfundcondition_req_);
    std::swap(etfpurredem_req_, other->etfpurredem_req_);
    std::swap(querybatchentrust_req_, other->querybatchentrust_req_);
    std::swap(batchentrust_req_, other->batchentrust_req_);
    std::swap(batchcancel_req_, other->batchcancel_req_);
    std::swap(queryvaildredemnum_req_, other->queryvaildredemnum_req_);
    std::swap(oneentrust_ack_, other->oneentrust_ack_);
    std::swap(onecancel_ack_, other->onecancel_ack_);
    std::swap(queryoneentrust_ack_, other->queryoneentrust_ack_);
    std::swap(querycjmx_ack_, other->querycjmx_ack_);
    std::swap(queryposition_ack_, other->queryposition_ack_);
    std::swap(queryetfbaseinfo_ack_, other->queryetfbaseinfo_ack_);
    std::swap(queryetflistinfo_ack_, other->queryetflistinfo_ack_);
    std::swap(queryetfdynamicinfo_ack_, other->queryetfdynamicinfo_ack_);
    std::swap(queryfundcondition_ack_, other->queryfundcondition_ack_);
    std::swap(etfpurredem_ack_, other->etfpurredem_ack_);
    std::swap(querybatchentrust_ack_, other->querybatchentrust_ack_);
    std::swap(batchentrust_ack_, other->batchentrust_ack_);
    std::swap(batchcancel_ack_, other->batchcancel_ack_);
    std::swap(account_, other->account_);
    std::swap(etf_message_, other->etf_message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StockServer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StockServer_descriptor_;
  metadata.reflection = StockServer_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
